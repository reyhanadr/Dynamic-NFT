{
	"id": "d762a793d8fa6cca0c85451706013a0f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DynamicNFT_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC4906.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n// File: DynamicNFT.sol\n\n\npragma solidity ^0.8.20;\n\n\ncontract DynamicNFT is ERC721URIStorage {\n    uint256 public _tokenIdCounter;\n\n    constructor() ERC721(\"Dynamic NFT\", \"Dynamic NFT Ethereum Sepolia\") {}\n\n    function mintNFT(address recipient, string memory tokenURI)\n        public\n        returns (uint256)\n    {\n        uint256 tokenId = _tokenIdCounter;\n        _mint(recipient, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        _tokenIdCounter += 1;\n\n        return tokenId;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"DynamicNFT_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DynamicNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_tokenIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DynamicNFT_flattened.sol\":56027:56474  contract DynamicNFT is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"DynamicNFT_flattened.sol\":56110:56180  constructor() ERC721(\"Dynamic NFT\", \"Dynamic NFT Ethereum Sepolia\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DynamicNFT_flattened.sol\":36605:36718  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xaa, 0x111e5b985b5a58c8139195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1c\n  dup2\n  mstore\n  0x20\n  add\n  0x44796e616d6963204e465420457468657265756d205365706f6c696100000000\n  dup2\n  mstore\n  pop\n    /* \"DynamicNFT_flattened.sol\":36679:36684  name_ */\n  dup2\n    /* \"DynamicNFT_flattened.sol\":36671:36676  _name */\n  0x00\n    /* \"DynamicNFT_flattened.sol\":36671:36684  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"DynamicNFT_flattened.sol\":36694:36701  _symbol */\n  0x01\n    /* \"DynamicNFT_flattened.sol\":36694:36711  _symbol = symbol_ */\n  tag_7\n    /* \"DynamicNFT_flattened.sol\":36704:36711  symbol_ */\n  dup3\n    /* \"DynamicNFT_flattened.sol\":36694:36701  _symbol */\n  dup3\n    /* \"DynamicNFT_flattened.sol\":36694:36711  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"DynamicNFT_flattened.sol\":36605:36718  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"DynamicNFT_flattened.sol\":56027:56474  contract DynamicNFT is ERC721URIStorage {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_23:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_24:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_22:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1555:1652   */\n  tag_31\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_32\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_26)\n    /* \"#utility.yul\":1744:2393   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_38:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\ntag_15:\n    /* \"DynamicNFT_flattened.sol\":56027:56474  contract DynamicNFT is ERC721URIStorage {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DynamicNFT_flattened.sol\":56027:56474  contract DynamicNFT is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeacabe14\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84c4bd4b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DynamicNFT_flattened.sol\":54819:55026  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"DynamicNFT_flattened.sol\":54819:55026  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DynamicNFT_flattened.sol\":37589:37678  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":38721:38875  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1561   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"DynamicNFT_flattened.sol\":38721:38875  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":38547:38660  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"DynamicNFT_flattened.sol\":39367:39945  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_37\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":40011:40143  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_37\n      tag_46\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":37409:37527  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_31\n      tag_49\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":37144:37352  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":2771:2796   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2744:2762   */\n      add\n        /* \"DynamicNFT_flattened.sol\":37144:37352  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":2625:2802   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":56073:56103  uint256 public _tokenIdCounter */\n    tag_11:\n      tag_52\n      sload(0x07)\n      dup2\n      jump\n        /* \"DynamicNFT_flattened.sol\":37742:37835  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_27\n      tag_62\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":38942:39086  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_37\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":40209:40417  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_14:\n      tag_37\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":55092:55685  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_27\n      tag_73\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":39152:39305  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_16:\n      tag_21\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":56186:56472  function mintNFT(address recipient, string memory tokenURI)... */\n    tag_17:\n      tag_52\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":54819:55026  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"DynamicNFT_flattened.sol\":54921:54925  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"DynamicNFT_flattened.sol\":54944:54979  interfaceId == ERC4906_INTERFACE_ID */\n      dup3\n      and\n      shl(0xe1, 0x24832483)\n      eq\n      dup1\n        /* \"DynamicNFT_flattened.sol\":54944:55019  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      tag_88\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":54983:55019  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"DynamicNFT_flattened.sol\":55007:55018  interfaceId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":54983:55006  super.supportsInterface */\n      tag_89\n        /* \"DynamicNFT_flattened.sol\":54983:55019  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_88:\n        /* \"DynamicNFT_flattened.sol\":54937:55019  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"DynamicNFT_flattened.sol\":54819:55026  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":37589:37678  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"DynamicNFT_flattened.sol\":37634:37647  string memory */\n      0x60\n        /* \"DynamicNFT_flattened.sol\":37666:37671  _name */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":37659:37671  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":37589:37678  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":38721:38875  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"DynamicNFT_flattened.sol\":38788:38795  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":38807:38829  _requireOwned(tokenId) */\n      tag_98\n        /* \"DynamicNFT_flattened.sol\":38821:38828  tokenId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":38807:38820  _requireOwned */\n      tag_99\n        /* \"DynamicNFT_flattened.sol\":38807:38829  _requireOwned(tokenId) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"DynamicNFT_flattened.sol\":41232:41239  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":41258:41282  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":41258:41273  _tokenApprovals */\n      0x04\n        /* \"DynamicNFT_flattened.sol\":41258:41282  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DynamicNFT_flattened.sol\":38847:38868  _getApproved(tokenId) */\n      tag_88\n        /* \"DynamicNFT_flattened.sol\":41162:41289  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"DynamicNFT_flattened.sol\":38547:38660  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"DynamicNFT_flattened.sol\":38618:38653  _approve(to, tokenId, _msgSender()) */\n      tag_103\n        /* \"DynamicNFT_flattened.sol\":38627:38629  to */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":38631:38638  tokenId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":8413:8423  msg.sender */\n      caller\n        /* \"DynamicNFT_flattened.sol\":38618:38626  _approve */\n      tag_106\n        /* \"DynamicNFT_flattened.sol\":38618:38653  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"DynamicNFT_flattened.sol\":38547:38660  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":39367:39945  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":39461:39477  to == address(0) */\n      dup3\n      and\n        /* \"DynamicNFT_flattened.sol\":39457:39544  if (to == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":39500:39533  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":39530:39531  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":39500:39533  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":39500:39533  ERC721InvalidReceiver(address(0)) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DynamicNFT_flattened.sol\":39457:39544  if (to == address(0)) {... */\n    tag_108:\n        /* \"DynamicNFT_flattened.sol\":39762:39783  address previousOwner */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":39786:39820  _update(to, tokenId, _msgSender()) */\n      tag_110\n        /* \"DynamicNFT_flattened.sol\":39794:39796  to */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":39798:39805  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":8413:8423  msg.sender */\n      caller\n        /* \"DynamicNFT_flattened.sol\":39786:39793  _update */\n      tag_112\n        /* \"DynamicNFT_flattened.sol\":39786:39820  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_110:\n        /* \"DynamicNFT_flattened.sol\":39762:39820  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":39851:39855  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":39834:39855  previousOwner != from */\n      and\n        /* \"DynamicNFT_flattened.sol\":39834:39847  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":39834:39855  previousOwner != from */\n      and\n      eq\n        /* \"DynamicNFT_flattened.sol\":39830:39939  if (previousOwner != from) {... */\n      tag_113\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":39878:39928  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6127:6159   */\n      dup1\n      dup7\n      and\n        /* \"DynamicNFT_flattened.sol\":39878:39928  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6109:6160   */\n      mstore\n        /* \"#utility.yul\":6176:6194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6169:6203   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6239:6271   */\n      dup3\n      and\n        /* \"#utility.yul\":6219:6237   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6212:6272   */\n      mstore\n        /* \"#utility.yul\":6082:6100   */\n      0x64\n      add\n        /* \"DynamicNFT_flattened.sol\":39878:39928  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_109\n        /* \"#utility.yul\":5907:6278   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":39830:39939  if (previousOwner != from) {... */\n    tag_113:\n        /* \"DynamicNFT_flattened.sol\":39447:39945  {... */\n      pop\n        /* \"DynamicNFT_flattened.sol\":39367:39945  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":40011:40143  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_47:\n        /* \"DynamicNFT_flattened.sol\":40097:40136  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_117\n        /* \"DynamicNFT_flattened.sol\":40114:40118  from */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":40120:40122  to */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":40124:40131  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":40097:40136  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"DynamicNFT_flattened.sol\":40097:40113  safeTransferFrom */\n      tag_71\n        /* \"DynamicNFT_flattened.sol\":40097:40136  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_117:\n        /* \"DynamicNFT_flattened.sol\":40011:40143  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":37409:37527  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_50:\n        /* \"DynamicNFT_flattened.sol\":37472:37479  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":37498:37520  _requireOwned(tokenId) */\n      tag_88\n        /* \"DynamicNFT_flattened.sol\":37512:37519  tokenId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":37498:37511  _requireOwned */\n      tag_99\n        /* \"DynamicNFT_flattened.sol\":37498:37520  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":37144:37352  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"DynamicNFT_flattened.sol\":37207:37214  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":37230:37249  owner == address(0) */\n      dup3\n      and\n        /* \"DynamicNFT_flattened.sol\":37226:37313  if (owner == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":37272:37302  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":37299:37300  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":37272:37302  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":37272:37302  ERC721InvalidOwner(address(0)) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":37226:37313  if (owner == address(0)) {... */\n    tag_121:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":37329:37345  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":37329:37338  _balances */\n      0x03\n        /* \"DynamicNFT_flattened.sol\":37329:37345  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DynamicNFT_flattened.sol\":37144:37352  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":37742:37835  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"DynamicNFT_flattened.sol\":37789:37802  string memory */\n      0x60\n        /* \"DynamicNFT_flattened.sol\":37821:37828  _symbol */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":37814:37828  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":38942:39086  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_67:\n        /* \"DynamicNFT_flattened.sol\":39027:39079  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_103\n        /* \"DynamicNFT_flattened.sol\":8413:8423  msg.sender */\n      caller\n        /* \"DynamicNFT_flattened.sol\":39060:39068  operator */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":39070:39078  approved */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":39027:39045  _setApprovalForAll */\n      tag_132\n        /* \"DynamicNFT_flattened.sol\":39027:39079  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":40209:40417  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_71:\n        /* \"DynamicNFT_flattened.sol\":40322:40353  transferFrom(from, to, tokenId) */\n      tag_134\n        /* \"DynamicNFT_flattened.sol\":40335:40339  from */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40341:40343  to */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40345:40352  tokenId */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40322:40334  transferFrom */\n      tag_44\n        /* \"DynamicNFT_flattened.sol\":40322:40353  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"DynamicNFT_flattened.sol\":40363:40410  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_113\n        /* \"DynamicNFT_flattened.sol\":40386:40390  from */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40392:40394  to */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40396:40403  tokenId */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40405:40409  data */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":40363:40385  _checkOnERC721Received */\n      tag_136\n        /* \"DynamicNFT_flattened.sol\":40363:40410  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":55092:55685  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_74:\n        /* \"DynamicNFT_flattened.sol\":55165:55178  string memory */\n      0x60\n        /* \"DynamicNFT_flattened.sol\":55190:55212  _requireOwned(tokenId) */\n      tag_138\n        /* \"DynamicNFT_flattened.sol\":55204:55211  tokenId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":55190:55203  _requireOwned */\n      tag_99\n        /* \"DynamicNFT_flattened.sol\":55190:55212  _requireOwned(tokenId) */\n      jump\t// in\n    tag_138:\n      pop\n        /* \"DynamicNFT_flattened.sol\":55223:55246  string memory _tokenURI */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":55249:55268  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":55249:55259  _tokenURIs */\n      0x06\n        /* \"DynamicNFT_flattened.sol\":55249:55268  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":55223:55268  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_92\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_92\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":55278:55296  string memory base */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":55299:55309  _baseURI() */\n      tag_144\n        /* \"DynamicNFT_flattened.sol\":38474:38483  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"DynamicNFT_flattened.sol\":38398:38490  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"DynamicNFT_flattened.sol\":55299:55309  _baseURI() */\n    tag_144:\n        /* \"DynamicNFT_flattened.sol\":55278:55309  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":55388:55392  base */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":55382:55400  bytes(base).length */\n      mload\n        /* \"DynamicNFT_flattened.sol\":55404:55405  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":55382:55405  bytes(base).length == 0 */\n      sub\n        /* \"DynamicNFT_flattened.sol\":55378:55448  if (bytes(base).length == 0) {... */\n      tag_146\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":55428:55437  _tokenURI */\n      swap3\n        /* \"DynamicNFT_flattened.sol\":55092:55685  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":55378:55448  if (bytes(base).length == 0) {... */\n    tag_146:\n        /* \"DynamicNFT_flattened.sol\":55547:55570  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"DynamicNFT_flattened.sol\":55547:55574  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"DynamicNFT_flattened.sol\":55543:55638  if (bytes(_tokenURI).length > 0) {... */\n      tag_147\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":55611:55615  base */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":55617:55626  _tokenURI */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":55597:55627  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"DynamicNFT_flattened.sol\":55590:55627  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"DynamicNFT_flattened.sol\":55092:55685  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":55543:55638  if (bytes(_tokenURI).length > 0) {... */\n    tag_147:\n        /* \"DynamicNFT_flattened.sol\":55655:55678  super.tokenURI(tokenId) */\n      tag_150\n        /* \"DynamicNFT_flattened.sol\":55670:55677  tokenId */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":55655:55669  super.tokenURI */\n      tag_151\n        /* \"DynamicNFT_flattened.sol\":55655:55678  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"DynamicNFT_flattened.sol\":55648:55678  return super.tokenURI(tokenId) */\n      swap5\n        /* \"DynamicNFT_flattened.sol\":55092:55685  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":39152:39305  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":39263:39288  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"DynamicNFT_flattened.sol\":39240:39244  bool */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":39263:39288  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":39263:39281  _operatorApprovals */\n      0x05\n        /* \"DynamicNFT_flattened.sol\":39263:39288  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":39263:39298  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"DynamicNFT_flattened.sol\":39152:39305  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":56186:56472  function mintNFT(address recipient, string memory tokenURI)... */\n    tag_84:\n        /* \"DynamicNFT_flattened.sol\":56319:56334  _tokenIdCounter */\n      sload(0x07)\n        /* \"DynamicNFT_flattened.sol\":56278:56285  uint256 */\n      0x00\n      swap1\n        /* \"DynamicNFT_flattened.sol\":56344:56369  _mint(recipient, tokenId) */\n      tag_154\n        /* \"DynamicNFT_flattened.sol\":56350:56359  recipient */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":56319:56334  _tokenIdCounter */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":56344:56349  _mint */\n      tag_155\n        /* \"DynamicNFT_flattened.sol\":56344:56369  _mint(recipient, tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"DynamicNFT_flattened.sol\":56379:56410  _setTokenURI(tokenId, tokenURI) */\n      tag_156\n        /* \"DynamicNFT_flattened.sol\":56392:56399  tokenId */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":56401:56409  tokenURI */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":56379:56391  _setTokenURI */\n      tag_157\n        /* \"DynamicNFT_flattened.sol\":56379:56410  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_156:\n        /* \"DynamicNFT_flattened.sol\":56439:56440  1 */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":56420:56435  _tokenIdCounter */\n      0x07\n      0x00\n        /* \"DynamicNFT_flattened.sol\":56420:56440  _tokenIdCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DynamicNFT_flattened.sol\":56458:56465  tokenId */\n      swap1\n      swap5\n        /* \"DynamicNFT_flattened.sol\":56186:56472  function mintNFT(address recipient, string memory tokenURI)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":36785:37085  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_89:\n        /* \"DynamicNFT_flattened.sol\":36887:36891  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"DynamicNFT_flattened.sol\":36922:36962  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"DynamicNFT_flattened.sol\":36922:37026  interfaceId == type(IERC721).interfaceId ||... */\n      tag_161\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"DynamicNFT_flattened.sol\":36978:37026  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"DynamicNFT_flattened.sol\":36922:37026  interfaceId == type(IERC721).interfaceId ||... */\n    tag_161:\n        /* \"DynamicNFT_flattened.sol\":36922:37078  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_88\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"DynamicNFT_flattened.sol\":28964:29004  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"DynamicNFT_flattened.sol\":37042:37078  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"DynamicNFT_flattened.sol\":28865:29011  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"DynamicNFT_flattened.sol\":51362:51603  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_99:\n        /* \"DynamicNFT_flattened.sol\":51425:51432  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":41023:41039  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":41023:41030  _owners */\n      0x02\n        /* \"DynamicNFT_flattened.sol\":41023:41039  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"DynamicNFT_flattened.sol\":51487:51575  if (owner == address(0)) {... */\n      tag_88\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":51533:51564  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2771:2796   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2744:2762   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":51533:51564  ERC721NonexistentToken(tokenId) */\n      tag_109\n        /* \"#utility.yul\":2625:2802   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":49642:49762  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_106:\n        /* \"DynamicNFT_flattened.sol\":49722:49755  _approve(to, tokenId, auth, true) */\n      tag_117\n        /* \"DynamicNFT_flattened.sol\":49731:49733  to */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":49735:49742  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":49744:49748  auth */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":49750:49754  true */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":49722:49730  _approve */\n      tag_174\n        /* \"DynamicNFT_flattened.sol\":49722:49755  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"DynamicNFT_flattened.sol\":44062:44857  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_112:\n        /* \"DynamicNFT_flattened.sol\":44148:44155  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":41023:41039  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":41023:41030  _owners */\n      0x02\n        /* \"DynamicNFT_flattened.sol\":41023:41039  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"DynamicNFT_flattened.sol\":44259:44277  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"DynamicNFT_flattened.sol\":44255:44341  if (auth != address(0)) {... */\n      tag_178\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":44293:44330  _checkAuthorized(from, auth, tokenId) */\n      tag_178\n        /* \"DynamicNFT_flattened.sol\":44310:44314  from */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":44316:44320  auth */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":44322:44329  tokenId */\n      dup7\n        /* \"DynamicNFT_flattened.sol\":44293:44309  _checkAuthorized */\n      tag_179\n        /* \"DynamicNFT_flattened.sol\":44293:44330  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":44385:44403  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"DynamicNFT_flattened.sol\":44381:44637  if (from != address(0)) {... */\n      tag_180\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":44501:44549  _approve(address(0), tokenId, address(0), false) */\n      tag_181\n        /* \"DynamicNFT_flattened.sol\":44518:44519  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":44522:44529  tokenId */\n      dup6\n        /* \"DynamicNFT_flattened.sol\":44539:44540  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":44543:44548  false */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":44501:44509  _approve */\n      tag_174\n        /* \"DynamicNFT_flattened.sol\":44501:44549  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":44592:44607  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":44592:44601  _balances */\n      0x03\n        /* \"DynamicNFT_flattened.sol\":44592:44607  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":44592:44612  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"DynamicNFT_flattened.sol\":44381:44637  if (from != address(0)) {... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":44651:44667  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"DynamicNFT_flattened.sol\":44647:44754  if (to != address(0)) {... */\n      tag_182\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":44711:44724  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":44711:44720  _balances */\n      0x03\n        /* \"DynamicNFT_flattened.sol\":44711:44724  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":44711:44729  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"DynamicNFT_flattened.sol\":44728:44729  1 */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":44711:44729  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"DynamicNFT_flattened.sol\":44647:44754  if (to != address(0)) {... */\n    tag_182:\n        /* \"DynamicNFT_flattened.sol\":44764:44780  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":44764:44771  _owners */\n      0x02\n        /* \"DynamicNFT_flattened.sol\":44764:44780  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":44764:44785  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"DynamicNFT_flattened.sol\":44801:44828  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"DynamicNFT_flattened.sol\":44764:44780  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"DynamicNFT_flattened.sol\":44801:44828  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"DynamicNFT_flattened.sol\":44846:44850  from */\n      swap5\n        /* \"DynamicNFT_flattened.sol\":44062:44857  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":50815:51127  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50922:50944  operator == address(0) */\n      dup3\n      and\n        /* \"DynamicNFT_flattened.sol\":50918:51009  if (operator == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":50967:50998  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      dup4\n      and\n        /* \"DynamicNFT_flattened.sol\":50967:50998  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":50967:50998  ERC721InvalidOperator(operator) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":50918:51009  if (operator == address(0)) {... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":51018:51043  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":51018:51036  _operatorApprovals */\n      0x05\n        /* \"DynamicNFT_flattened.sol\":51018:51043  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":51018:51053  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":51018:51064  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DynamicNFT_flattened.sol\":51079:51120  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"DynamicNFT_flattened.sol\":51079:51120  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"DynamicNFT_flattened.sol\":51079:51120  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DynamicNFT_flattened.sol\":50815:51127  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":52142:52924  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":52258:52272  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"DynamicNFT_flattened.sol\":52258:52276  to.code.length > 0 */\n      iszero\n        /* \"DynamicNFT_flattened.sol\":52254:52918  if (to.code.length > 0) {... */\n      tag_113\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":52296:52367  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":52296:52332  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"DynamicNFT_flattened.sol\":52296:52367  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_190\n      swap1\n        /* \"DynamicNFT_flattened.sol\":8413:8423  msg.sender */\n      caller\n      swap1\n        /* \"DynamicNFT_flattened.sol\":52347:52351  from */\n      dup9\n      swap1\n        /* \"DynamicNFT_flattened.sol\":52353:52360  tokenId */\n      dup8\n      swap1\n        /* \"DynamicNFT_flattened.sol\":52362:52366  data */\n      dup8\n      swap1\n        /* \"DynamicNFT_flattened.sol\":52296:52367  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_193\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"DynamicNFT_flattened.sol\":52292:52908  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"DynamicNFT_flattened.sol\":52605:52611  reason */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":52605:52618  reason.length */\n      mload\n        /* \"DynamicNFT_flattened.sol\":52622:52623  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":52605:52623  reason.length == 0 */\n      sub\n        /* \"DynamicNFT_flattened.sol\":52601:52894  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":52654:52679  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      dup6\n      and\n        /* \"DynamicNFT_flattened.sol\":52654:52679  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":52654:52679  ERC721InvalidReceiver(to) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":52601:52894  if (reason.length == 0) {... */\n    tag_201:\n        /* \"DynamicNFT_flattened.sol\":52846:52852  reason */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":52840:52853  mload(reason) */\n      mload\n        /* \"DynamicNFT_flattened.sol\":52831:52837  reason */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":52827:52829  32 */\n      0x20\n        /* \"DynamicNFT_flattened.sol\":52823:52838  add(32, reason) */\n      add\n        /* \"DynamicNFT_flattened.sol\":52816:52854  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"DynamicNFT_flattened.sol\":52292:52908  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_195:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"DynamicNFT_flattened.sol\":52414:52465  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"DynamicNFT_flattened.sol\":52410:52540  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_205\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":52496:52521  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      dup6\n      and\n        /* \"DynamicNFT_flattened.sol\":52496:52521  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":52496:52521  ERC721InvalidReceiver(to) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":52410:52540  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_205:\n        /* \"DynamicNFT_flattened.sol\":52368:52554  returns (bytes4 retval) {... */\n      pop\n        /* \"DynamicNFT_flattened.sol\":52142:52924  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":37901:38156  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_151:\n        /* \"DynamicNFT_flattened.sol\":37965:37978  string memory */\n      0x60\n        /* \"DynamicNFT_flattened.sol\":37990:38012  _requireOwned(tokenId) */\n      tag_209\n        /* \"DynamicNFT_flattened.sol\":38004:38011  tokenId */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":37990:38003  _requireOwned */\n      tag_99\n        /* \"DynamicNFT_flattened.sol\":37990:38012  _requireOwned(tokenId) */\n      jump\t// in\n    tag_209:\n      pop\n        /* \"DynamicNFT_flattened.sol\":38023:38044  string memory baseURI */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":38047:38057  _baseURI() */\n      tag_210\n        /* \"DynamicNFT_flattened.sol\":38474:38483  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"DynamicNFT_flattened.sol\":38398:38490  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"DynamicNFT_flattened.sol\":38047:38057  _baseURI() */\n    tag_210:\n        /* \"DynamicNFT_flattened.sol\":38023:38057  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":38098:38099  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":38080:38087  baseURI */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":38074:38095  bytes(baseURI).length */\n      mload\n        /* \"DynamicNFT_flattened.sol\":38074:38099  bytes(baseURI).length > 0 */\n      gt\n        /* \"DynamicNFT_flattened.sol\":38074:38149  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_211\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_212)\n    tag_211:\n        /* \"DynamicNFT_flattened.sol\":38116:38123  baseURI */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":38125:38143  tokenId.toString() */\n      tag_213\n        /* \"DynamicNFT_flattened.sol\":38125:38132  tokenId */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":38125:38141  tokenId.toString */\n      tag_214\n        /* \"DynamicNFT_flattened.sol\":38125:38143  tokenId.toString() */\n      jump\t// in\n    tag_213:\n        /* \"DynamicNFT_flattened.sol\":38102:38144  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"DynamicNFT_flattened.sol\":38074:38149  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_212:\n        /* \"DynamicNFT_flattened.sol\":38067:38149  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"DynamicNFT_flattened.sol\":37901:38156  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":45179:45506  function _mint(address to, uint256 tokenId) internal {... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":45246:45262  to == address(0) */\n      dup3\n      and\n        /* \"DynamicNFT_flattened.sol\":45242:45329  if (to == address(0)) {... */\n      tag_217\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":45285:45318  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":45315:45316  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":45285:45318  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":45285:45318  ERC721InvalidReceiver(address(0)) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":45242:45329  if (to == address(0)) {... */\n    tag_217:\n        /* \"DynamicNFT_flattened.sol\":45338:45359  address previousOwner */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":45362:45394  _update(to, tokenId, address(0)) */\n      tag_219\n        /* \"DynamicNFT_flattened.sol\":45370:45372  to */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":45374:45381  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":45391:45392  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":45362:45369  _update */\n      tag_112\n        /* \"DynamicNFT_flattened.sol\":45362:45394  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_219:\n        /* \"DynamicNFT_flattened.sol\":45338:45394  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":45408:45435  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"DynamicNFT_flattened.sol\":45404:45500  if (previousOwner != address(0)) {... */\n      tag_117\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":45458:45489  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":45486:45487  0 */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":45458:45489  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":45458:45489  ERC721InvalidSender(address(0)) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":55804:55971  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_157:\n        /* \"DynamicNFT_flattened.sol\":55895:55914  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":55895:55905  _tokenURIs */\n      0x06\n        /* \"DynamicNFT_flattened.sol\":55895:55914  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":55895:55926  _tokenURIs[tokenId] = _tokenURI */\n      tag_223\n        /* \"DynamicNFT_flattened.sol\":55917:55926  _tokenURI */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":55895:55914  _tokenURIs[tokenId] */\n      dup3\n        /* \"DynamicNFT_flattened.sol\":55895:55926  _tokenURIs[tokenId] = _tokenURI */\n      tag_224\n      jump\t// in\n    tag_223:\n      pop\n        /* \"DynamicNFT_flattened.sol\":55941:55964  MetadataUpdate(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":2771:2796   */\n      dup3\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":55941:55964  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n      swap1\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2744:2762   */\n      add\n        /* \"DynamicNFT_flattened.sol\":55941:55964  MetadataUpdate(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DynamicNFT_flattened.sol\":55804:55971  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":49944:50606  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_174:\n        /* \"DynamicNFT_flattened.sol\":50104:50113  emitEvent */\n      dup1\n        /* \"DynamicNFT_flattened.sol\":50104:50135  emitEvent || auth != address(0) */\n      dup1\n      tag_229\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50117:50135  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"DynamicNFT_flattened.sol\":50104:50135  emitEvent || auth != address(0) */\n    tag_229:\n        /* \"DynamicNFT_flattened.sol\":50100:50560  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":50151:50164  address owner */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":50167:50189  _requireOwned(tokenId) */\n      tag_231\n        /* \"DynamicNFT_flattened.sol\":50181:50188  tokenId */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":50167:50180  _requireOwned */\n      tag_99\n        /* \"DynamicNFT_flattened.sol\":50167:50189  _requireOwned(tokenId) */\n      jump\t// in\n    tag_231:\n        /* \"DynamicNFT_flattened.sol\":50151:50189  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50317:50335  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"DynamicNFT_flattened.sol\":50317:50352  auth != address(0) && owner != auth */\n      tag_232\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":50348:50352  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50339:50352  owner != auth */\n      and\n        /* \"DynamicNFT_flattened.sol\":50339:50344  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50339:50352  owner != auth */\n      and\n      eq\n      iszero\n        /* \"DynamicNFT_flattened.sol\":50317:50352  auth != address(0) && owner != auth */\n    tag_232:\n        /* \"DynamicNFT_flattened.sol\":50317:50386  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":50357:50386  isApprovedForAll(owner, auth) */\n      tag_234\n        /* \"DynamicNFT_flattened.sol\":50374:50379  owner */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":50381:50385  auth */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":50357:50373  isApprovedForAll */\n      tag_79\n        /* \"DynamicNFT_flattened.sol\":50357:50386  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_234:\n        /* \"DynamicNFT_flattened.sol\":50356:50386  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"DynamicNFT_flattened.sol\":50317:50386  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_233:\n        /* \"DynamicNFT_flattened.sol\":50313:50455  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":50413:50440  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      dup5\n      and\n        /* \"DynamicNFT_flattened.sol\":50413:50440  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1510:1561   */\n      mstore\n        /* \"#utility.yul\":1483:1501   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":50413:50440  ERC721InvalidApprover(auth) */\n      tag_109\n        /* \"#utility.yul\":1364:1567   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":50313:50455  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_235:\n        /* \"DynamicNFT_flattened.sol\":50473:50482  emitEvent */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":50469:50550  if (emitEvent) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":50527:50534  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":50523:50525  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50507:50535  Approval(owner, to, tokenId) */\n      and\n        /* \"DynamicNFT_flattened.sol\":50516:50521  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":50507:50535  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"DynamicNFT_flattened.sol\":50469:50550  if (emitEvent) {... */\n    tag_237:\n        /* \"DynamicNFT_flattened.sol\":50137:50560  {... */\n      pop\n        /* \"DynamicNFT_flattened.sol\":50100:50560  if (emitEvent || auth != address(0)) {... */\n    tag_230:\n      pop\n      pop\n        /* \"DynamicNFT_flattened.sol\":50570:50594  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":50570:50585  _tokenApprovals */\n      0x04\n        /* \"DynamicNFT_flattened.sol\":50570:50594  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DynamicNFT_flattened.sol\":50570:50599  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DynamicNFT_flattened.sol\":49944:50606  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":42306:42674  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_179:\n        /* \"DynamicNFT_flattened.sol\":42418:42456  _isAuthorized(owner, spender, tokenId) */\n      tag_239\n        /* \"DynamicNFT_flattened.sol\":42432:42437  owner */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":42439:42446  spender */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":42448:42455  tokenId */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":42418:42431  _isAuthorized */\n      tag_240\n        /* \"DynamicNFT_flattened.sol\":42418:42456  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"DynamicNFT_flattened.sol\":42413:42668  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_117\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":42476:42495  owner == address(0) */\n      dup4\n      and\n        /* \"DynamicNFT_flattened.sol\":42472:42658  if (owner == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":42522:42553  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2771:2796   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2744:2762   */\n      0x24\n      add\n        /* \"DynamicNFT_flattened.sol\":42522:42553  ERC721NonexistentToken(tokenId) */\n      tag_109\n        /* \"#utility.yul\":2625:2802   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":42472:42658  if (owner == address(0)) {... */\n    tag_242:\n        /* \"DynamicNFT_flattened.sol\":42599:42643  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10070:10102   */\n      dup4\n      and\n        /* \"DynamicNFT_flattened.sol\":42599:42643  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10052:10103   */\n      mstore\n        /* \"#utility.yul\":10119:10137   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10112:10146   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10025:10043   */\n      0x44\n      add\n        /* \"DynamicNFT_flattened.sol\":42599:42643  ERC721InsufficientApproval(spender, tokenId) */\n      tag_109\n        /* \"#utility.yul\":9878:10152   */\n      jump\n        /* \"DynamicNFT_flattened.sol\":25646:26344  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_214:\n        /* \"DynamicNFT_flattened.sol\":25702:25715  string memory */\n      0x60\n        /* \"DynamicNFT_flattened.sol\":25751:25765  uint256 length */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":25768:25785  Math.log10(value) */\n      tag_248\n        /* \"DynamicNFT_flattened.sol\":25779:25784  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":25768:25778  Math.log10 */\n      tag_249\n        /* \"DynamicNFT_flattened.sol\":25768:25785  Math.log10(value) */\n      jump\t// in\n    tag_248:\n        /* \"DynamicNFT_flattened.sol\":25788:25789  1 */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":25768:25789  Math.log10(value) + 1 */\n      add\n        /* \"DynamicNFT_flattened.sol\":25751:25789  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":25803:25823  string memory buffer */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":25837:25843  length */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":25826:25844  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_251\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_253:\n      pop\n        /* \"DynamicNFT_flattened.sol\":25803:25844  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":25964:25992  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"DynamicNFT_flattened.sol\":25980:25982  32 */\n      0x20\n        /* \"DynamicNFT_flattened.sol\":25964:25992  add(buffer, add(32, length)) */\n      add\n        /* \"DynamicNFT_flattened.sol\":26019:26301  while (true) {... */\n    tag_254:\n      not(0x00)\n        /* \"DynamicNFT_flattened.sol\":26050:26055  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"DynamicNFT_flattened.sol\":26184:26186  10 */\n      0x0a\n        /* \"DynamicNFT_flattened.sol\":26173:26187  mod(value, 10) */\n      dup7\n      mod\n        /* \"DynamicNFT_flattened.sol\":26168:26200  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"DynamicNFT_flattened.sol\":26050:26055  ptr-- */\n      dup2\n        /* \"DynamicNFT_flattened.sol\":26155:26201  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"DynamicNFT_flattened.sol\":26245:26247  10 */\n      0x0a\n        /* \"DynamicNFT_flattened.sol\":26236:26247  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"DynamicNFT_flattened.sol\":26265:26286  if (value == 0) break */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":26019:26301  while (true) {... */\n      tag_254\n        /* \"DynamicNFT_flattened.sol\":26265:26286  if (value == 0) break */\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":26321:26327  buffer */\n      swap4\n        /* \"DynamicNFT_flattened.sol\":25646:26344  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":41600:41872  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_240:\n        /* \"DynamicNFT_flattened.sol\":41703:41707  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":41738:41759  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"DynamicNFT_flattened.sol\":41738:41865  spender != address(0) &&... */\n      tag_150\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":41785:41792  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":41776:41792  owner == spender */\n      and\n        /* \"DynamicNFT_flattened.sol\":41776:41781  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DynamicNFT_flattened.sol\":41776:41792  owner == spender */\n      and\n      eq\n        /* \"DynamicNFT_flattened.sol\":41776:41828  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_263\n      jumpi\n      pop\n        /* \"DynamicNFT_flattened.sol\":41796:41828  isApprovedForAll(owner, spender) */\n      tag_263\n        /* \"DynamicNFT_flattened.sol\":41813:41818  owner */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":41820:41827  spender */\n      dup5\n        /* \"DynamicNFT_flattened.sol\":41796:41812  isApprovedForAll */\n      tag_79\n        /* \"DynamicNFT_flattened.sol\":41796:41828  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_263:\n        /* \"DynamicNFT_flattened.sol\":41776:41864  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_150\n      jumpi\n      pop\n      pop\n        /* \"DynamicNFT_flattened.sol\":41232:41239  address */\n      0x00\n        /* \"DynamicNFT_flattened.sol\":41258:41282  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"DynamicNFT_flattened.sol\":41258:41273  _tokenApprovals */\n      0x04\n        /* \"DynamicNFT_flattened.sol\":41258:41282  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DynamicNFT_flattened.sol\":41832:41864  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n        /* \"DynamicNFT_flattened.sol\":41719:41865  return... */\n      swap1\n      pop\n        /* \"DynamicNFT_flattened.sol\":41600:41872  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"DynamicNFT_flattened.sol\":20878:21794  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"DynamicNFT_flattened.sol\":20931:20938  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"DynamicNFT_flattened.sol\":21006:21023  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"DynamicNFT_flattened.sol\":21002:21105  if (value >= 10 ** 64) {... */\n      tag_267\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"DynamicNFT_flattened.sol\":21043:21060  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21088:21090  64 */\n      0x40\n        /* \"DynamicNFT_flattened.sol\":21078:21090  result += 64 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21002:21105  if (value >= 10 ** 64) {... */\n    tag_267:\n        /* \"DynamicNFT_flattened.sol\":21131:21139  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"DynamicNFT_flattened.sol\":21122:21127  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21122:21139  value >= 10 ** 32 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21118:21221  if (value >= 10 ** 32) {... */\n      tag_270\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21168:21176  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"DynamicNFT_flattened.sol\":21159:21176  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21204:21206  32 */\n      0x20\n        /* \"DynamicNFT_flattened.sol\":21194:21206  result += 32 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21118:21221  if (value >= 10 ** 32) {... */\n    tag_270:\n        /* \"DynamicNFT_flattened.sol\":21247:21255  10 ** 16 */\n      0x2386f26fc10000\n        /* \"DynamicNFT_flattened.sol\":21238:21243  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21238:21255  value >= 10 ** 16 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21234:21337  if (value >= 10 ** 16) {... */\n      tag_273\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21284:21292  10 ** 16 */\n      0x2386f26fc10000\n        /* \"DynamicNFT_flattened.sol\":21275:21292  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21320:21322  16 */\n      0x10\n        /* \"DynamicNFT_flattened.sol\":21310:21322  result += 16 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21234:21337  if (value >= 10 ** 16) {... */\n    tag_273:\n        /* \"DynamicNFT_flattened.sol\":21363:21370  10 ** 8 */\n      0x05f5e100\n        /* \"DynamicNFT_flattened.sol\":21354:21359  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21354:21370  value >= 10 ** 8 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21350:21450  if (value >= 10 ** 8) {... */\n      tag_276\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21399:21406  10 ** 8 */\n      0x05f5e100\n        /* \"DynamicNFT_flattened.sol\":21390:21406  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21434:21435  8 */\n      0x08\n        /* \"DynamicNFT_flattened.sol\":21424:21435  result += 8 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21350:21450  if (value >= 10 ** 8) {... */\n    tag_276:\n        /* \"DynamicNFT_flattened.sol\":21476:21483  10 ** 4 */\n      0x2710\n        /* \"DynamicNFT_flattened.sol\":21467:21472  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21467:21483  value >= 10 ** 4 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21463:21563  if (value >= 10 ** 4) {... */\n      tag_279\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21512:21519  10 ** 4 */\n      0x2710\n        /* \"DynamicNFT_flattened.sol\":21503:21519  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21547:21548  4 */\n      0x04\n        /* \"DynamicNFT_flattened.sol\":21537:21548  result += 4 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21463:21563  if (value >= 10 ** 4) {... */\n    tag_279:\n        /* \"DynamicNFT_flattened.sol\":21589:21596  10 ** 2 */\n      0x64\n        /* \"DynamicNFT_flattened.sol\":21580:21585  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21580:21596  value >= 10 ** 2 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21576:21676  if (value >= 10 ** 2) {... */\n      tag_282\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21625:21632  10 ** 2 */\n      0x64\n        /* \"DynamicNFT_flattened.sol\":21616:21632  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"DynamicNFT_flattened.sol\":21660:21661  2 */\n      0x02\n        /* \"DynamicNFT_flattened.sol\":21650:21661  result += 2 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21576:21676  if (value >= 10 ** 2) {... */\n    tag_282:\n        /* \"DynamicNFT_flattened.sol\":21702:21709  10 ** 1 */\n      0x0a\n        /* \"DynamicNFT_flattened.sol\":21693:21698  value */\n      dup4\n        /* \"DynamicNFT_flattened.sol\":21693:21709  value >= 10 ** 1 */\n      lt\n        /* \"DynamicNFT_flattened.sol\":21689:21755  if (value >= 10 ** 1) {... */\n      tag_88\n      jumpi\n        /* \"DynamicNFT_flattened.sol\":21739:21740  1 */\n      0x01\n        /* \"DynamicNFT_flattened.sol\":21729:21740  result += 1 */\n      add\n        /* \"DynamicNFT_flattened.sol\":21781:21787  result */\n      swap3\n        /* \"DynamicNFT_flattened.sol\":20878:21794  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_286:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_296:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_23:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_298:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_212\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_287:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_30:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_212\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":1133:1359   */\n    tag_33:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_305:\n      pop\n        /* \"#utility.yul\":1306:1329   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1572:1745   */\n    tag_288:\n        /* \"#utility.yul\":1640:1660   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1689:1720   */\n      dup2\n      and\n        /* \"#utility.yul\":1679:1721   */\n      dup2\n      eq\n        /* \"#utility.yul\":1669:1739   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":1735:1736   */\n      0x00\n        /* \"#utility.yul\":1732:1733   */\n      dup1\n        /* \"#utility.yul\":1725:1737   */\n      revert\n        /* \"#utility.yul\":1669:1739   */\n    tag_308:\n        /* \"#utility.yul\":1572:1745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1750:2050   */\n    tag_39:\n        /* \"#utility.yul\":1818:1824   */\n      0x00\n        /* \"#utility.yul\":1826:1832   */\n      dup1\n        /* \"#utility.yul\":1879:1881   */\n      0x40\n        /* \"#utility.yul\":1867:1876   */\n      dup4\n        /* \"#utility.yul\":1858:1865   */\n      dup6\n        /* \"#utility.yul\":1854:1877   */\n      sub\n        /* \"#utility.yul\":1850:1882   */\n      slt\n        /* \"#utility.yul\":1847:1899   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1895:1896   */\n      0x00\n        /* \"#utility.yul\":1892:1893   */\n      dup1\n        /* \"#utility.yul\":1885:1897   */\n      revert\n        /* \"#utility.yul\":1847:1899   */\n    tag_310:\n        /* \"#utility.yul\":1918:1947   */\n      tag_311\n        /* \"#utility.yul\":1937:1946   */\n      dup4\n        /* \"#utility.yul\":1918:1947   */\n      tag_288\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1908:1947   */\n      swap5\n        /* \"#utility.yul\":2016:2018   */\n      0x20\n        /* \"#utility.yul\":2001:2019   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1988:2020   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1750:2050   */\n      jump\t// out\n        /* \"#utility.yul\":2055:2429   */\n    tag_43:\n        /* \"#utility.yul\":2132:2138   */\n      0x00\n        /* \"#utility.yul\":2140:2146   */\n      dup1\n        /* \"#utility.yul\":2148:2154   */\n      0x00\n        /* \"#utility.yul\":2201:2203   */\n      0x60\n        /* \"#utility.yul\":2189:2198   */\n      dup5\n        /* \"#utility.yul\":2180:2187   */\n      dup7\n        /* \"#utility.yul\":2176:2199   */\n      sub\n        /* \"#utility.yul\":2172:2204   */\n      slt\n        /* \"#utility.yul\":2169:2221   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2214:2215   */\n      dup1\n        /* \"#utility.yul\":2207:2219   */\n      revert\n        /* \"#utility.yul\":2169:2221   */\n    tag_313:\n        /* \"#utility.yul\":2240:2269   */\n      tag_314\n        /* \"#utility.yul\":2259:2268   */\n      dup5\n        /* \"#utility.yul\":2240:2269   */\n      tag_288\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2230:2269   */\n      swap3\n      pop\n        /* \"#utility.yul\":2288:2326   */\n      tag_315\n        /* \"#utility.yul\":2322:2324   */\n      0x20\n        /* \"#utility.yul\":2311:2320   */\n      dup6\n        /* \"#utility.yul\":2307:2325   */\n      add\n        /* \"#utility.yul\":2288:2326   */\n      tag_288\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2055:2429   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2278:2326   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2395:2397   */\n      0x40\n        /* \"#utility.yul\":2380:2398   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2367:2399   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2055:2429   */\n      jump\t// out\n        /* \"#utility.yul\":2434:2620   */\n    tag_54:\n        /* \"#utility.yul\":2493:2499   */\n      0x00\n        /* \"#utility.yul\":2546:2548   */\n      0x20\n        /* \"#utility.yul\":2534:2543   */\n      dup3\n        /* \"#utility.yul\":2525:2532   */\n      dup5\n        /* \"#utility.yul\":2521:2544   */\n      sub\n        /* \"#utility.yul\":2517:2549   */\n      slt\n        /* \"#utility.yul\":2514:2566   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2562:2563   */\n      0x00\n        /* \"#utility.yul\":2559:2560   */\n      dup1\n        /* \"#utility.yul\":2552:2564   */\n      revert\n        /* \"#utility.yul\":2514:2566   */\n    tag_317:\n        /* \"#utility.yul\":2585:2614   */\n      tag_212\n        /* \"#utility.yul\":2604:2613   */\n      dup3\n        /* \"#utility.yul\":2585:2614   */\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":2807:3154   */\n    tag_66:\n        /* \"#utility.yul\":2872:2878   */\n      0x00\n        /* \"#utility.yul\":2880:2886   */\n      dup1\n        /* \"#utility.yul\":2933:2935   */\n      0x40\n        /* \"#utility.yul\":2921:2930   */\n      dup4\n        /* \"#utility.yul\":2912:2919   */\n      dup6\n        /* \"#utility.yul\":2908:2931   */\n      sub\n        /* \"#utility.yul\":2904:2936   */\n      slt\n        /* \"#utility.yul\":2901:2953   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2946:2947   */\n      dup1\n        /* \"#utility.yul\":2939:2951   */\n      revert\n        /* \"#utility.yul\":2901:2953   */\n    tag_321:\n        /* \"#utility.yul\":2972:3001   */\n      tag_322\n        /* \"#utility.yul\":2991:3000   */\n      dup4\n        /* \"#utility.yul\":2972:3001   */\n      tag_288\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2962:3001   */\n      swap2\n      pop\n        /* \"#utility.yul\":3051:3053   */\n      0x20\n        /* \"#utility.yul\":3040:3049   */\n      dup4\n        /* \"#utility.yul\":3036:3054   */\n      add\n        /* \"#utility.yul\":3023:3055   */\n      calldataload\n        /* \"#utility.yul\":3098:3103   */\n      dup1\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3074:3106   */\n      eq\n        /* \"#utility.yul\":3064:3124   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":3120:3121   */\n      0x00\n        /* \"#utility.yul\":3117:3118   */\n      dup1\n        /* \"#utility.yul\":3110:3122   */\n      revert\n        /* \"#utility.yul\":3064:3124   */\n    tag_323:\n        /* \"#utility.yul\":3143:3148   */\n      dup1\n        /* \"#utility.yul\":3133:3148   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2807:3154   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3286   */\n    tag_252:\n        /* \"#utility.yul\":3220:3230   */\n      0x4e487b71\n        /* \"#utility.yul\":3215:3218   */\n      0xe0\n        /* \"#utility.yul\":3211:3231   */\n      shl\n        /* \"#utility.yul\":3208:3209   */\n      0x00\n        /* \"#utility.yul\":3201:3232   */\n      mstore\n        /* \"#utility.yul\":3251:3255   */\n      0x41\n        /* \"#utility.yul\":3248:3249   */\n      0x04\n        /* \"#utility.yul\":3241:3256   */\n      mstore\n        /* \"#utility.yul\":3275:3279   */\n      0x24\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3265:3280   */\n      revert\n        /* \"#utility.yul\":3291:4006   */\n    tag_289:\n        /* \"#utility.yul\":3355:3360   */\n      0x00\n        /* \"#utility.yul\":3387:3388   */\n      dup1\n        /* \"#utility.yul\":3411:3429   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3403:3409   */\n      dup5\n        /* \"#utility.yul\":3400:3430   */\n      gt\n        /* \"#utility.yul\":3397:3453   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3433:3451   */\n      tag_327\n      tag_252\n      jump\t// in\n    tag_327:\n      pop\n        /* \"#utility.yul\":3588:3590   */\n      0x40\n        /* \"#utility.yul\":3582:3591   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":3501:3503   */\n      0x1f\n        /* \"#utility.yul\":3480:3495   */\n      dup6\n      add\n        /* \"#utility.yul\":3476:3505   */\n      dup2\n      and\n        /* \"#utility.yul\":3646:3648   */\n      0x3f\n        /* \"#utility.yul\":3634:3649   */\n      add\n        /* \"#utility.yul\":3630:3659   */\n      and\n        /* \"#utility.yul\":3618:3660   */\n      dup2\n      add\n        /* \"#utility.yul\":3711:3733   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":3690:3708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3675:3709   */\n      dup3\n      gt\n        /* \"#utility.yul\":3672:3734   */\n      or\n        /* \"#utility.yul\":3669:3757   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3737:3755   */\n      tag_329\n      tag_252\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3773:3775   */\n      0x40\n        /* \"#utility.yul\":3766:3788   */\n      mstore\n        /* \"#utility.yul\":3821:3843   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3806:3812   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":3858:3874   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":3855:3880   */\n      dup6\n      lt\n        /* \"#utility.yul\":3852:3897   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3893:3894   */\n      0x00\n        /* \"#utility.yul\":3890:3891   */\n      dup1\n        /* \"#utility.yul\":3883:3895   */\n      revert\n        /* \"#utility.yul\":3852:3897   */\n    tag_330:\n        /* \"#utility.yul\":3943:3949   */\n      dup4\n        /* \"#utility.yul\":3938:3941   */\n      dup4\n        /* \"#utility.yul\":3931:3935   */\n      0x20\n        /* \"#utility.yul\":3923:3929   */\n      dup4\n        /* \"#utility.yul\":3919:3936   */\n      add\n        /* \"#utility.yul\":3906:3950   */\n      calldatacopy\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3991:3995   */\n      0x20\n        /* \"#utility.yul\":3982:3988   */\n      dup6\n        /* \"#utility.yul\":3974:3980   */\n      dup4\n        /* \"#utility.yul\":3970:3989   */\n      add\n        /* \"#utility.yul\":3966:3996   */\n      add\n        /* \"#utility.yul\":3959:4000   */\n      mstore\n      pop\n        /* \"#utility.yul\":3291:4006   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4723   */\n    tag_70:\n        /* \"#utility.yul\":4106:4112   */\n      0x00\n        /* \"#utility.yul\":4114:4120   */\n      dup1\n        /* \"#utility.yul\":4122:4128   */\n      0x00\n        /* \"#utility.yul\":4130:4136   */\n      dup1\n        /* \"#utility.yul\":4183:4186   */\n      0x80\n        /* \"#utility.yul\":4171:4180   */\n      dup6\n        /* \"#utility.yul\":4162:4169   */\n      dup8\n        /* \"#utility.yul\":4158:4181   */\n      sub\n        /* \"#utility.yul\":4154:4187   */\n      slt\n        /* \"#utility.yul\":4151:4204   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":4200:4201   */\n      0x00\n        /* \"#utility.yul\":4197:4198   */\n      dup1\n        /* \"#utility.yul\":4190:4202   */\n      revert\n        /* \"#utility.yul\":4151:4204   */\n    tag_332:\n        /* \"#utility.yul\":4223:4252   */\n      tag_333\n        /* \"#utility.yul\":4242:4251   */\n      dup6\n        /* \"#utility.yul\":4223:4252   */\n      tag_288\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4213:4252   */\n      swap4\n      pop\n        /* \"#utility.yul\":4271:4309   */\n      tag_334\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4294:4303   */\n      dup7\n        /* \"#utility.yul\":4290:4308   */\n      add\n        /* \"#utility.yul\":4271:4309   */\n      tag_288\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4261:4309   */\n      swap3\n      pop\n        /* \"#utility.yul\":4378:4380   */\n      0x40\n        /* \"#utility.yul\":4363:4381   */\n      dup6\n      add\n        /* \"#utility.yul\":4350:4382   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4457:4459   */\n      0x60\n        /* \"#utility.yul\":4442:4460   */\n      dup6\n      add\n        /* \"#utility.yul\":4429:4461   */\n      calldataload\n        /* \"#utility.yul\":4484:4502   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4473:4503   */\n      dup2\n      gt\n        /* \"#utility.yul\":4470:4520   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4516:4517   */\n      0x00\n        /* \"#utility.yul\":4513:4514   */\n      dup1\n        /* \"#utility.yul\":4506:4518   */\n      revert\n        /* \"#utility.yul\":4470:4520   */\n    tag_335:\n        /* \"#utility.yul\":4539:4561   */\n      dup6\n      add\n        /* \"#utility.yul\":4592:4596   */\n      0x1f\n        /* \"#utility.yul\":4584:4597   */\n      dup2\n      add\n        /* \"#utility.yul\":4580:4607   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4570:4625   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4621:4622   */\n      0x00\n        /* \"#utility.yul\":4618:4619   */\n      dup1\n        /* \"#utility.yul\":4611:4623   */\n      revert\n        /* \"#utility.yul\":4570:4625   */\n    tag_336:\n        /* \"#utility.yul\":4644:4717   */\n      tag_337\n        /* \"#utility.yul\":4709:4716   */\n      dup8\n        /* \"#utility.yul\":4704:4706   */\n      dup3\n        /* \"#utility.yul\":4691:4707   */\n      calldataload\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4682:4684   */\n      dup5\n        /* \"#utility.yul\":4678:4689   */\n      add\n        /* \"#utility.yul\":4644:4717   */\n      tag_289\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4634:4717   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4011:4723   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4728:4988   */\n    tag_78:\n        /* \"#utility.yul\":4796:4802   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      dup1\n        /* \"#utility.yul\":4857:4859   */\n      0x40\n        /* \"#utility.yul\":4845:4854   */\n      dup4\n        /* \"#utility.yul\":4836:4843   */\n      dup6\n        /* \"#utility.yul\":4832:4855   */\n      sub\n        /* \"#utility.yul\":4828:4860   */\n      slt\n        /* \"#utility.yul\":4825:4877   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4873:4874   */\n      0x00\n        /* \"#utility.yul\":4870:4871   */\n      dup1\n        /* \"#utility.yul\":4863:4875   */\n      revert\n        /* \"#utility.yul\":4825:4877   */\n    tag_339:\n        /* \"#utility.yul\":4896:4925   */\n      tag_340\n        /* \"#utility.yul\":4915:4924   */\n      dup4\n        /* \"#utility.yul\":4896:4925   */\n      tag_288\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4886:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4944:4982   */\n      tag_341\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"#utility.yul\":4967:4976   */\n      dup5\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4944:4982   */\n      tag_288\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4934:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4728:4988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4993:5517   */\n    tag_83:\n        /* \"#utility.yul\":5071:5077   */\n      0x00\n        /* \"#utility.yul\":5079:5085   */\n      dup1\n        /* \"#utility.yul\":5132:5134   */\n      0x40\n        /* \"#utility.yul\":5120:5129   */\n      dup4\n        /* \"#utility.yul\":5111:5118   */\n      dup6\n        /* \"#utility.yul\":5107:5130   */\n      sub\n        /* \"#utility.yul\":5103:5135   */\n      slt\n        /* \"#utility.yul\":5100:5152   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5148:5149   */\n      0x00\n        /* \"#utility.yul\":5145:5146   */\n      dup1\n        /* \"#utility.yul\":5138:5150   */\n      revert\n        /* \"#utility.yul\":5100:5152   */\n    tag_343:\n        /* \"#utility.yul\":5171:5200   */\n      tag_344\n        /* \"#utility.yul\":5190:5199   */\n      dup4\n        /* \"#utility.yul\":5171:5200   */\n      tag_288\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5161:5200   */\n      swap2\n      pop\n        /* \"#utility.yul\":5251:5253   */\n      0x20\n        /* \"#utility.yul\":5240:5249   */\n      dup4\n        /* \"#utility.yul\":5236:5254   */\n      add\n        /* \"#utility.yul\":5223:5255   */\n      calldataload\n        /* \"#utility.yul\":5278:5296   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5270:5276   */\n      dup2\n        /* \"#utility.yul\":5267:5297   */\n      gt\n        /* \"#utility.yul\":5264:5314   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5310:5311   */\n      0x00\n        /* \"#utility.yul\":5307:5308   */\n      dup1\n        /* \"#utility.yul\":5300:5312   */\n      revert\n        /* \"#utility.yul\":5264:5314   */\n    tag_345:\n        /* \"#utility.yul\":5333:5355   */\n      dup4\n      add\n        /* \"#utility.yul\":5386:5390   */\n      0x1f\n        /* \"#utility.yul\":5378:5391   */\n      dup2\n      add\n        /* \"#utility.yul\":5374:5401   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5364:5419   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5415:5416   */\n      0x00\n        /* \"#utility.yul\":5412:5413   */\n      dup1\n        /* \"#utility.yul\":5405:5417   */\n      revert\n        /* \"#utility.yul\":5364:5419   */\n    tag_346:\n        /* \"#utility.yul\":5438:5511   */\n      tag_347\n        /* \"#utility.yul\":5503:5510   */\n      dup6\n        /* \"#utility.yul\":5498:5500   */\n      dup3\n        /* \"#utility.yul\":5485:5501   */\n      calldataload\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5476:5478   */\n      dup5\n        /* \"#utility.yul\":5472:5483   */\n      add\n        /* \"#utility.yul\":5438:5511   */\n      tag_289\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5428:5511   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4993:5517   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5902   */\n    tag_92:\n        /* \"#utility.yul\":5601:5602   */\n      0x01\n        /* \"#utility.yul\":5597:5609   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5644:5656   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5665:5726   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5719:5723   */\n      0x7f\n        /* \"#utility.yul\":5711:5717   */\n      dup3\n        /* \"#utility.yul\":5707:5724   */\n      and\n        /* \"#utility.yul\":5697:5724   */\n      swap2\n      pop\n        /* \"#utility.yul\":5665:5726   */\n    tag_349:\n        /* \"#utility.yul\":5772:5774   */\n      0x20\n        /* \"#utility.yul\":5764:5770   */\n      dup3\n        /* \"#utility.yul\":5761:5775   */\n      lt\n        /* \"#utility.yul\":5741:5759   */\n      dup2\n        /* \"#utility.yul\":5738:5776   */\n      sub\n        /* \"#utility.yul\":5735:5896   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":5818:5828   */\n      0x4e487b71\n        /* \"#utility.yul\":5813:5816   */\n      0xe0\n        /* \"#utility.yul\":5809:5829   */\n      shl\n        /* \"#utility.yul\":5806:5807   */\n      0x00\n        /* \"#utility.yul\":5799:5830   */\n      mstore\n        /* \"#utility.yul\":5853:5857   */\n      0x22\n        /* \"#utility.yul\":5850:5851   */\n      0x04\n        /* \"#utility.yul\":5843:5858   */\n      mstore\n        /* \"#utility.yul\":5881:5885   */\n      0x24\n        /* \"#utility.yul\":5878:5879   */\n      0x00\n        /* \"#utility.yul\":5871:5886   */\n      revert\n        /* \"#utility.yul\":5735:5896   */\n    tag_350:\n      pop\n        /* \"#utility.yul\":5522:5902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6283:6495   */\n    tag_290:\n        /* \"#utility.yul\":6325:6328   */\n      0x00\n        /* \"#utility.yul\":6363:6368   */\n      dup2\n        /* \"#utility.yul\":6357:6369   */\n      mload\n        /* \"#utility.yul\":6407:6413   */\n      dup1\n        /* \"#utility.yul\":6400:6404   */\n      0x20\n        /* \"#utility.yul\":6393:6398   */\n      dup5\n        /* \"#utility.yul\":6389:6405   */\n      add\n        /* \"#utility.yul\":6384:6387   */\n      dup6\n        /* \"#utility.yul\":6378:6414   */\n      mcopy\n        /* \"#utility.yul\":6469:6470   */\n      0x00\n        /* \"#utility.yul\":6433:6449   */\n      swap4\n      add\n        /* \"#utility.yul\":6458:6471   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":6433:6449   */\n      swap1\n      swap2\n        /* \"#utility.yul\":6283:6495   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6500:6767   */\n    tag_149:\n        /* \"#utility.yul\":6679:6682   */\n      0x00\n        /* \"#utility.yul\":6704:6761   */\n      tag_150\n        /* \"#utility.yul\":6730:6760   */\n      tag_355\n        /* \"#utility.yul\":6756:6759   */\n      dup4\n        /* \"#utility.yul\":6748:6754   */\n      dup7\n        /* \"#utility.yul\":6730:6760   */\n      tag_290\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6722:6728   */\n      dup5\n        /* \"#utility.yul\":6704:6761   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":6772:6994   */\n    tag_159:\n        /* \"#utility.yul\":6837:6846   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6858:6868   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6855:6988   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":6910:6920   */\n      0x4e487b71\n        /* \"#utility.yul\":6905:6908   */\n      0xe0\n        /* \"#utility.yul\":6901:6921   */\n      shl\n        /* \"#utility.yul\":6898:6899   */\n      0x00\n        /* \"#utility.yul\":6891:6922   */\n      mstore\n        /* \"#utility.yul\":6945:6949   */\n      0x11\n        /* \"#utility.yul\":6942:6943   */\n      0x04\n        /* \"#utility.yul\":6935:6950   */\n      mstore\n        /* \"#utility.yul\":6973:6977   */\n      0x24\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6963:6978   */\n      revert\n        /* \"#utility.yul\":6999:7495   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7230:7262   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7212:7263   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7299:7331   */\n      dup5\n      and\n        /* \"#utility.yul\":7294:7296   */\n      0x20\n        /* \"#utility.yul\":7279:7297   */\n      dup3\n      add\n        /* \"#utility.yul\":7272:7332   */\n      mstore\n        /* \"#utility.yul\":7363:7365   */\n      0x40\n        /* \"#utility.yul\":7348:7366   */\n      dup2\n      add\n        /* \"#utility.yul\":7341:7375   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7411:7414   */\n      0x80\n        /* \"#utility.yul\":7406:7408   */\n      0x60\n        /* \"#utility.yul\":7391:7409   */\n      dup3\n      add\n        /* \"#utility.yul\":7384:7415   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":7432:7489   */\n      tag_359\n      swap1\n        /* \"#utility.yul\":7469:7488   */\n      dup4\n      add\n        /* \"#utility.yul\":7461:7467   */\n      dup5\n        /* \"#utility.yul\":7432:7489   */\n      tag_287\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7424:7489   */\n      swap7\n        /* \"#utility.yul\":6999:7495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7500:7749   */\n    tag_194:\n        /* \"#utility.yul\":7569:7575   */\n      0x00\n        /* \"#utility.yul\":7622:7624   */\n      0x20\n        /* \"#utility.yul\":7610:7619   */\n      dup3\n        /* \"#utility.yul\":7601:7608   */\n      dup5\n        /* \"#utility.yul\":7597:7620   */\n      sub\n        /* \"#utility.yul\":7593:7625   */\n      slt\n        /* \"#utility.yul\":7590:7642   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":7638:7639   */\n      0x00\n        /* \"#utility.yul\":7635:7636   */\n      dup1\n        /* \"#utility.yul\":7628:7640   */\n      revert\n        /* \"#utility.yul\":7590:7642   */\n    tag_361:\n        /* \"#utility.yul\":7670:7679   */\n      dup2\n        /* \"#utility.yul\":7664:7680   */\n      mload\n        /* \"#utility.yul\":7689:7719   */\n      tag_212\n        /* \"#utility.yul\":7713:7718   */\n      dup2\n        /* \"#utility.yul\":7689:7719   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":7880:8398   */\n    tag_292:\n        /* \"#utility.yul\":7982:7984   */\n      0x1f\n        /* \"#utility.yul\":7977:7980   */\n      dup3\n        /* \"#utility.yul\":7974:7985   */\n      gt\n        /* \"#utility.yul\":7971:8392   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":8018:8023   */\n      dup1\n        /* \"#utility.yul\":8015:8016   */\n      0x00\n        /* \"#utility.yul\":8008:8024   */\n      mstore\n        /* \"#utility.yul\":8062:8066   */\n      0x20\n        /* \"#utility.yul\":8059:8060   */\n      0x00\n        /* \"#utility.yul\":8049:8067   */\n      keccak256\n        /* \"#utility.yul\":8132:8134   */\n      0x1f\n        /* \"#utility.yul\":8120:8130   */\n      dup5\n        /* \"#utility.yul\":8116:8135   */\n      add\n        /* \"#utility.yul\":8113:8114   */\n      0x05\n        /* \"#utility.yul\":8109:8136   */\n      shr\n        /* \"#utility.yul\":8103:8107   */\n      dup2\n        /* \"#utility.yul\":8099:8137   */\n      add\n        /* \"#utility.yul\":8168:8172   */\n      0x20\n        /* \"#utility.yul\":8156:8166   */\n      dup6\n        /* \"#utility.yul\":8153:8173   */\n      lt\n        /* \"#utility.yul\":8150:8197   */\n      iszero\n      tag_366\n      jumpi\n      pop\n        /* \"#utility.yul\":8191:8195   */\n      dup1\n        /* \"#utility.yul\":8150:8197   */\n    tag_366:\n        /* \"#utility.yul\":8246:8248   */\n      0x1f\n        /* \"#utility.yul\":8241:8244   */\n      dup5\n        /* \"#utility.yul\":8237:8249   */\n      add\n        /* \"#utility.yul\":8234:8235   */\n      0x05\n        /* \"#utility.yul\":8230:8250   */\n      shr\n        /* \"#utility.yul\":8224:8228   */\n      dup3\n        /* \"#utility.yul\":8220:8251   */\n      add\n        /* \"#utility.yul\":8210:8251   */\n      swap2\n      pop\n        /* \"#utility.yul\":8301:8382   */\n    tag_367:\n        /* \"#utility.yul\":8319:8321   */\n      dup2\n        /* \"#utility.yul\":8312:8317   */\n      dup2\n        /* \"#utility.yul\":8309:8322   */\n      lt\n        /* \"#utility.yul\":8301:8382   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":8378:8379   */\n      0x00\n        /* \"#utility.yul\":8364:8380   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8345:8346   */\n      0x01\n        /* \"#utility.yul\":8334:8347   */\n      add\n        /* \"#utility.yul\":8301:8382   */\n      jump(tag_367)\n        /* \"#utility.yul\":8574:9873   */\n    tag_224:\n        /* \"#utility.yul\":8700:8703   */\n      dup2\n        /* \"#utility.yul\":8694:8704   */\n      mload\n        /* \"#utility.yul\":8727:8745   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8719:8725   */\n      dup2\n        /* \"#utility.yul\":8716:8746   */\n      gt\n        /* \"#utility.yul\":8713:8769   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":8749:8767   */\n      tag_373\n      tag_252\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8778:8875   */\n      tag_374\n        /* \"#utility.yul\":8868:8874   */\n      dup2\n        /* \"#utility.yul\":8828:8866   */\n      tag_375\n        /* \"#utility.yul\":8860:8864   */\n      dup5\n        /* \"#utility.yul\":8854:8865   */\n      sload\n        /* \"#utility.yul\":8828:8866   */\n      tag_92\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8822:8826   */\n      dup5\n        /* \"#utility.yul\":8778:8875   */\n      tag_292\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8924:8928   */\n      0x20\n        /* \"#utility.yul\":8955:8957   */\n      0x1f\n        /* \"#utility.yul\":8944:8958   */\n      dup3\n      gt\n        /* \"#utility.yul\":8972:8973   */\n      0x01\n        /* \"#utility.yul\":8967:9616   */\n      dup2\n      eq\n      tag_377\n      jumpi\n        /* \"#utility.yul\":9660:9661   */\n      0x00\n        /* \"#utility.yul\":9677:9683   */\n      dup4\n        /* \"#utility.yul\":9674:9763   */\n      iszero\n      tag_378\n      jumpi\n      pop\n        /* \"#utility.yul\":9729:9748   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":9723:9749   */\n      mload\n        /* \"#utility.yul\":9674:9763   */\n    tag_378:\n      not(0x00)\n        /* \"#utility.yul\":8531:8532   */\n      0x03\n        /* \"#utility.yul\":8527:8538   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":8523:8547   */\n      shr\n        /* \"#utility.yul\":8519:8548   */\n      not\n        /* \"#utility.yul\":8509:8549   */\n      and\n        /* \"#utility.yul\":8555:8556   */\n      0x01\n        /* \"#utility.yul\":8551:8562   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":8506:8563   */\n      or\n        /* \"#utility.yul\":9776:9857   */\n      dup5\n      sstore\n        /* \"#utility.yul\":8937:9867   */\n      jump(tag_205)\n        /* \"#utility.yul\":8967:9616   */\n    tag_377:\n        /* \"#utility.yul\":7827:7828   */\n      0x00\n        /* \"#utility.yul\":7820:7834   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":7864:7868   */\n      0x20\n        /* \"#utility.yul\":7851:7869   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9003:9023   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":9121:9343   */\n    tag_381:\n        /* \"#utility.yul\":9135:9142   */\n      dup3\n        /* \"#utility.yul\":9132:9133   */\n      dup2\n        /* \"#utility.yul\":9129:9143   */\n      lt\n        /* \"#utility.yul\":9121:9343   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":9217:9236   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":9211:9237   */\n      mload\n        /* \"#utility.yul\":9196:9238   */\n      dup3\n      sstore\n        /* \"#utility.yul\":9324:9328   */\n      0x20\n        /* \"#utility.yul\":9309:9329   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":9277:9278   */\n      0x01\n        /* \"#utility.yul\":9265:9279   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":9151:9163   */\n      add\n        /* \"#utility.yul\":9121:9343   */\n      jump(tag_381)\n    tag_383:\n        /* \"#utility.yul\":9125:9128   */\n      pop\n        /* \"#utility.yul\":9371:9377   */\n      dup5\n        /* \"#utility.yul\":9362:9369   */\n      dup3\n        /* \"#utility.yul\":9359:9378   */\n      lt\n        /* \"#utility.yul\":9356:9557   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9432:9451   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":9426:9452   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":9515:9516   */\n      0x03\n        /* \"#utility.yul\":9511:9525   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":9527:9530   */\n      0xf8\n        /* \"#utility.yul\":9507:9531   */\n      and\n        /* \"#utility.yul\":9503:9540   */\n      shr\n        /* \"#utility.yul\":9499:9541   */\n      not\n        /* \"#utility.yul\":9484:9542   */\n      and\n        /* \"#utility.yul\":9469:9543   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9356:9557   */\n    tag_384:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9603:9604   */\n      0x01\n        /* \"#utility.yul\":9587:9601   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":9583:9605   */\n      add\n        /* \"#utility.yul\":9570:9606   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":8574:9873   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209091a9b6d590fc2dc87b61bd11829f84838429f2f91eb3288ef26113bbf37a1664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1814": {
									"entryPoint": null,
									"id": 1814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2904": {
									"entryPoint": null,
									"id": 2904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2652:1",
										"nodeType": "YulBlock",
										"src": "0:2652:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:1",
													"nodeType": "YulBlock",
													"src": "1447:1203:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:1",
															"nodeType": "YulAssignment",
															"src": "1688:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:1",
																"nodeType": "YulLiteral",
																"src": "1701:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:1",
																		"nodeType": "YulBlock",
																		"src": "1751:642:1",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:1"
																							},
																							"nativeSrc": "1792:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:1"
																					},
																					"nativeSrc": "1780:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:1"
																					},
																					"nativeSrc": "1827:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:1",
																					"nodeType": "YulBlock",
																					"src": "1955:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:1"
																												},
																												"nativeSrc": "1994:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:1"
																										},
																										"nativeSrc": "1988:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:1"
																								},
																								"nativeSrc": "1973:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:1"
																							},
																							"nativeSrc": "1973:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:1"
																						},
																						{
																							"nativeSrc": "2032:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:1"
																								},
																								"nativeSrc": "2042:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:1"
																								},
																								"nativeSrc": "2086:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:1"
																					},
																					"nativeSrc": "1906:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:1"
																				},
																				"nativeSrc": "1898:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:1",
																					"nodeType": "YulBlock",
																					"src": "1921:21:1",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:1",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:1",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:1"
																								},
																								"nativeSrc": "1928:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:1",
																					"nodeType": "YulBlock",
																					"src": "1902:3:1",
																					"statements": []
																				},
																				"src": "1898:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:1",
																					"nodeType": "YulBlock",
																					"src": "2168:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:1"
																										},
																										"nativeSrc": "2209:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:1"
																								},
																								"nativeSrc": "2203:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:1"
																																		},
																																		"nativeSrc": "2288:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:1"
																																},
																																"nativeSrc": "2284:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:1"
																																},
																																"nativeSrc": "2310:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:1"
																														},
																														"nativeSrc": "2280:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:1"
																												},
																												"nativeSrc": "2276:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:1"
																										},
																										"nativeSrc": "2261:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:1"
																								},
																								"nativeSrc": "2246:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:1"
																							},
																							"nativeSrc": "2246:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:1"
																					},
																					"nativeSrc": "2136:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:1"
																				},
																				"nativeSrc": "2133:201:1",
																				"nodeType": "YulIf",
																				"src": "2133:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:1"
																									},
																									"nativeSrc": "2364:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:1"
																							},
																							"nativeSrc": "2360:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:1"
																					},
																					"nativeSrc": "2347:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:1"
																				},
																				"nativeSrc": "2347:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:1",
																	"nodeType": "YulCase",
																	"src": "1744:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:1",
																		"nodeType": "YulBlock",
																		"src": "2410:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:1",
																					"nodeType": "YulBlock",
																					"src": "2473:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:1"
																										},
																										"nativeSrc": "2506:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:1"
																								},
																								"nativeSrc": "2500:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:1"
																				},
																				"nativeSrc": "2451:89:1",
																				"nodeType": "YulIf",
																				"src": "2451:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:1"
																							},
																							"nativeSrc": "2566:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:1"
																					},
																					"nativeSrc": "2553:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:1"
																				},
																				"nativeSrc": "2553:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:1",
																	"nodeType": "YulCase",
																	"src": "2402:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:1"
																},
																"nativeSrc": "1721:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:1"
															},
															"nativeSrc": "1714:930:1",
															"nodeType": "YulSwitch",
															"src": "1714:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1299:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600b81526020016a111e5b985b5a58c813919560aa1b8152506040518060400160405280601c81526020017f44796e616d6963204e465420457468657265756d205365706f6c696100000000815250815f90816100789190610125565b5060016100858282610125565b5050506101df565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806100b557607f821691505b6020821081036100d357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561012057805f5260205f20601f840160051c810160208510156100fe5750805b601f840160051c820191505b8181101561011d575f815560010161010a565b50505b505050565b81516001600160401b0381111561013e5761013e61008d565b6101528161014c84546100a1565b846100d9565b6020601f821160018114610184575f831561016d5750848201515b5f19600385901b1c1916600184901b17845561011d565b5f84815260208120601f198516915b828110156101b35787850151825560209485019460019092019101610193565b50848210156101d057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61125a806101ec5f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a0823111610093578063b88d4fde11610063578063b88d4fde146101ef578063c87b56dd14610202578063e985e9c514610215578063eacabe1414610228575f80fd5b806370a08231146101aa57806384c4bd4b146101cb57806395d89b41146101d4578063a22cb465146101dc575f80fd5b8063095ea7b3116100ce578063095ea7b31461015c57806323b872dd1461017157806342842e0e146101845780636352211e14610197575f80fd5b806301ffc9a7146100f457806306fdde031461011c578063081812fc14610131575b5f80fd5b610107610102366004610d7a565b61023b565b60405190151581526020015b60405180910390f35b610124610265565b6040516101139190610dc3565b61014461013f366004610dd5565b6102f4565b6040516001600160a01b039091168152602001610113565b61016f61016a366004610e07565b61031b565b005b61016f61017f366004610e2f565b61032a565b61016f610192366004610e2f565b6103b8565b6101446101a5366004610dd5565b6103d7565b6101bd6101b8366004610e69565b6103e1565b604051908152602001610113565b6101bd60075481565b610124610426565b61016f6101ea366004610e82565b610435565b61016f6101fd366004610f46565b610440565b610124610210366004610dd5565b610457565b610107610223366004610fbd565b610562565b6101bd610236366004610fee565b61058f565b5f6001600160e01b03198216632483248360e11b148061025f575061025f826105c7565b92915050565b60605f80546102739061104c565b80601f016020809104026020016040519081016040528092919081815260200182805461029f9061104c565b80156102ea5780601f106102c1576101008083540402835291602001916102ea565b820191905f5260205f20905b8154815290600101906020018083116102cd57829003601f168201915b5050505050905090565b5f6102fe82610616565b505f828152600460205260409020546001600160a01b031661025f565b61032682823361064e565b5050565b6001600160a01b03821661035857604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61036483833361065b565b9050836001600160a01b0316816001600160a01b0316146103b2576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161034f565b50505050565b6103d283838360405180602001604052805f815250610440565b505050565b5f61025f82610616565b5f6001600160a01b03821661040b576040516322718ad960e21b81525f600482015260240161034f565b506001600160a01b03165f9081526003602052604090205490565b6060600180546102739061104c565b61032633838361074d565b61044b84848461032a565b6103b2848484846107eb565b606061046282610616565b505f828152600660205260408120805461047b9061104c565b80601f01602080910402602001604051908101604052809291908181526020018280546104a79061104c565b80156104f25780601f106104c9576101008083540402835291602001916104f2565b820191905f5260205f20905b8154815290600101906020018083116104d557829003601f168201915b505050505090505f61050e60408051602081019091525f815290565b905080515f0361051f575092915050565b81511561055157808260405160200161053992919061109b565b60405160208183030381529060405292505050919050565b61055a84610911565b949350505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6007545f9061059e8482610982565b6105a881846109e3565b600160075f8282546105ba91906110af565b9091555090949350505050565b5f6001600160e01b031982166380ac58cd60e01b14806105f757506001600160e01b03198216635b5e139f60e01b145b8061025f57506301ffc9a760e01b6001600160e01b031983161461025f565b5f818152600260205260408120546001600160a01b03168061025f57604051637e27328960e01b81526004810184905260240161034f565b6103d28383836001610a32565b5f828152600260205260408120546001600160a01b039081169083161561068757610687818486610b36565b6001600160a01b038116156106c1576106a25f855f80610a32565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156106ef576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b03821661077f57604051630b61174360e31b81526001600160a01b038316600482015260240161034f565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156103b257604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061082d9033908890879087906004016110ce565b6020604051808303815f875af1925050508015610867575060408051601f3d908101601f191682019092526108649181019061110a565b60015b6108ce573d808015610894576040519150601f19603f3d011682016040523d82523d5f602084013e610899565b606091505b5080515f036108c657604051633250574960e11b81526001600160a01b038516600482015260240161034f565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461090a57604051633250574960e11b81526001600160a01b038516600482015260240161034f565b5050505050565b606061091c82610616565b505f61093260408051602081019091525f815290565b90505f8151116109505760405180602001604052805f81525061097b565b8061095a84610b9a565b60405160200161096b92919061109b565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166109ab57604051633250574960e11b81525f600482015260240161034f565b5f6109b783835f61065b565b90506001600160a01b038116156103d2576040516339e3563760e11b81525f600482015260240161034f565b5f8281526006602052604090206109fa8282611169565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b8080610a4657506001600160a01b03821615155b15610b07575f610a5584610616565b90506001600160a01b03831615801590610a815750826001600160a01b0316816001600160a01b031614155b8015610a945750610a928184610562565b155b15610abd5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161034f565b8115610b055783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b41838383610c2a565b6103d2576001600160a01b038316610b6f57604051637e27328960e01b81526004810182905260240161034f565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161034f565b60605f610ba683610c8b565b60010190505f8167ffffffffffffffff811115610bc557610bc5610ebb565b6040519080825280601f01601f191660200182016040528015610bef576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610bf957509392505050565b5f6001600160a01b0383161580159061055a5750826001600160a01b0316846001600160a01b03161480610c635750610c638484610562565b8061055a5750505f908152600460205260409020546001600160a01b03908116911614919050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610cc95772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610cf5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d1357662386f26fc10000830492506010015b6305f5e1008310610d2b576305f5e100830492506008015b6127108310610d3f57612710830492506004015b60648310610d51576064830492506002015b600a831061025f5760010192915050565b6001600160e01b031981168114610d77575f80fd5b50565b5f60208284031215610d8a575f80fd5b813561097b81610d62565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61097b6020830184610d95565b5f60208284031215610de5575f80fd5b5035919050565b80356001600160a01b0381168114610e02575f80fd5b919050565b5f8060408385031215610e18575f80fd5b610e2183610dec565b946020939093013593505050565b5f805f60608486031215610e41575f80fd5b610e4a84610dec565b9250610e5860208501610dec565b929592945050506040919091013590565b5f60208284031215610e79575f80fd5b61097b82610dec565b5f8060408385031215610e93575f80fd5b610e9c83610dec565b915060208301358015158114610eb0575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f8067ffffffffffffffff841115610ee957610ee9610ebb565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715610f1857610f18610ebb565b604052838152905080828401851015610f2f575f80fd5b838360208301375f60208583010152509392505050565b5f805f8060808587031215610f59575f80fd5b610f6285610dec565b9350610f7060208601610dec565b925060408501359150606085013567ffffffffffffffff811115610f92575f80fd5b8501601f81018713610fa2575f80fd5b610fb187823560208401610ecf565b91505092959194509250565b5f8060408385031215610fce575f80fd5b610fd783610dec565b9150610fe560208401610dec565b90509250929050565b5f8060408385031215610fff575f80fd5b61100883610dec565b9150602083013567ffffffffffffffff811115611023575f80fd5b8301601f81018513611033575f80fd5b61104285823560208401610ecf565b9150509250929050565b600181811c9082168061106057607f821691505b60208210810361107e57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f81518060208401855e5f93019283525090919050565b5f61055a6110a98386611084565b84611084565b8082018082111561025f57634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061110090830184610d95565b9695505050505050565b5f6020828403121561111a575f80fd5b815161097b81610d62565b601f8211156103d257805f5260205f20601f840160051c8101602085101561114a5750805b601f840160051c820191505b8181101561090a575f8155600101611156565b815167ffffffffffffffff81111561118357611183610ebb565b61119781611191845461104c565b84611125565b6020601f8211600181146111c9575f83156111b25750848201515b5f19600385901b1c1916600184901b17845561090a565b5f84815260208120601f198516915b828110156111f857878501518255602094850194600190920191016111d8565b508482101561121557868401515f19600387901b60f8161c191681555b50505050600190811b0190555056fea26469706673582212209091a9b6d590fc2dc87b61bd11829f84838429f2f91eb3288ef26113bbf37a1664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x111E5B985B5A58C8139195 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D6963204E465420457468657265756D205365706F6C696100000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x125 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x85 DUP3 DUP3 PUSH2 0x125 JUMP JUMPDEST POP POP POP PUSH2 0x1DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x120 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xFE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13E JUMPI PUSH2 0x13E PUSH2 0x8D JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x14C DUP5 SLOAD PUSH2 0xA1 JUMP JUMPDEST DUP5 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x184 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x16D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x11D JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x193 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1D0 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x125A DUP1 PUSH2 0x1EC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x84C4BD4B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x1BD PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x25F JUMPI POP PUSH2 0x25F DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2FE DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25F JUMP JUMPDEST PUSH2 0x326 DUP3 DUP3 CALLER PUSH2 0x64E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x364 DUP4 DUP4 CALLER PUSH2 0x65B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x440 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F DUP3 PUSH2 0x616 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH2 0x326 CALLER DUP4 DUP4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x3B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x462 DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A7 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x50E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x51F JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x551 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x539 SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP5 PUSH2 0x911 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x59E DUP5 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x5A8 DUP2 DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x25F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x25F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x3D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA32 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x687 JUMPI PUSH2 0x687 DUP2 DUP5 DUP7 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6C1 JUMPI PUSH2 0x6A2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x82D SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x867 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x864 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8CE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x899 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x91C DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 PUSH2 0x932 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH2 0x95A DUP5 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96B SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH0 PUSH2 0x9B7 DUP4 DUP4 PUSH0 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9FA DUP3 DUP3 PUSH2 0x1169 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB07 JUMPI PUSH0 PUSH2 0xA55 DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA81 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA94 JUMPI POP PUSH2 0xA92 DUP2 DUP5 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB05 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB41 DUP4 DUP4 DUP4 PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x3D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBA6 DUP4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xBF9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55A JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC63 JUMPI POP PUSH2 0xC63 DUP5 DUP5 PUSH2 0x562 JUMP JUMPDEST DUP1 PUSH2 0x55A JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCC9 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCF5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD13 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD2B JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD3F JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD51 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x25F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x97B DUP2 PUSH2 0xD62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x97B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD95 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE02 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE21 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE4A DUP5 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH2 0xE58 PUSH1 0x20 DUP6 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x97B DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE9C DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xEBB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF18 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0xF2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF62 DUP6 PUSH2 0xDEC JUMP JUMPDEST SWAP4 POP PUSH2 0xF70 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF92 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD7 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH2 0xFE5 PUSH1 0x20 DUP5 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1008 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1023 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1033 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1042 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x55A PUSH2 0x10A9 DUP4 DUP7 PUSH2 0x1084 JUMP JUMPDEST DUP5 PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1100 SWAP1 DUP4 ADD DUP5 PUSH2 0xD95 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x97B DUP2 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x114A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1156 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1183 JUMPI PUSH2 0x1183 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x1197 DUP2 PUSH2 0x1191 DUP5 SLOAD PUSH2 0x104C JUMP JUMPDEST DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11C9 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x11B2 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x90A JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11F8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x11D8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1215 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 SWAP2 0xA9 0xB6 0xD5 SWAP1 0xFC 0x2D 0xC8 PUSH28 0x61BD11829F84838429F2F91EB3288EF26113BBF37A1664736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "56027:447:0:-:0;;;56110:70;;;;;;;;;;36605:113;;;;;;;;;;;;;-1:-1:-1;;;36605:113:0;;;;;;;;;;;;;;;;;;;;36679:5;36671;:13;;;;;;:::i;:::-;-1:-1:-1;36694:7:0;:17;36704:7;36694;:17;:::i;:::-;;36605:113;;56027:447;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:1;;;2500:26;2451:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:1;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:1;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:1;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:1:o;:::-;56027:447:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2556": {
									"entryPoint": 1614,
									"id": 2556,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2622": {
									"entryPoint": 2610,
									"id": 2622,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1949": {
									"entryPoint": null,
									"id": 1949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2204": {
									"entryPoint": 2870,
									"id": 2204,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2752": {
									"entryPoint": 2027,
									"id": 2752,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_2131": {
									"entryPoint": null,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2167": {
									"entryPoint": 3114,
									"id": 2167,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2360": {
									"entryPoint": 2434,
									"id": 2360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2118": {
									"entryPoint": null,
									"id": 2118,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2688": {
									"entryPoint": 1558,
									"id": 2688,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_2659": {
									"entryPoint": 1869,
									"id": 2659,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_2890": {
									"entryPoint": 2531,
									"id": 2890,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenIdCounter_2896": {
									"entryPoint": null,
									"id": 2896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_2310": {
									"entryPoint": 1627,
									"id": 2310,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_1965": {
									"entryPoint": 795,
									"id": 1965,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1873": {
									"entryPoint": 993,
									"id": 1873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1982": {
									"entryPoint": 756,
									"id": 1982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2015": {
									"entryPoint": 1378,
									"id": 2015,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1069": {
									"entryPoint": 3211,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_2934": {
									"entryPoint": 1423,
									"id": 2934,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1895": {
									"entryPoint": 613,
									"id": 1895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1886": {
									"entryPoint": 983,
									"id": 1886,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2079": {
									"entryPoint": 952,
									"id": 2079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2105": {
									"entryPoint": 1088,
									"id": 2105,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1998": {
									"entryPoint": 1077,
									"id": 1998,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1623": {
									"entryPoint": null,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1845": {
									"entryPoint": 1479,
									"id": 1845,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2814": {
									"entryPoint": 571,
									"id": 2814,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1904": {
									"entryPoint": 1062,
									"id": 1904,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1416": {
									"entryPoint": 2970,
									"id": 1416,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1940": {
									"entryPoint": 2321,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2871": {
									"entryPoint": 1111,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2061": {
									"entryPoint": 810,
									"id": 2061,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10286:1",
										"nodeType": "YulBlock",
										"src": "0:10286:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:1",
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:1",
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nativeSrc": "125:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nativeSrc": "125:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:1",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:1",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nativeSrc": "99:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nativeSrc": "88:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nativeSrc": "78:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nativeSrc": "71:51:1",
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nativeSrc": "68:71:1",
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:1",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nativeSrc": "219:176:1",
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:1",
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:1",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nativeSrc": "267:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nativeSrc": "267:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nativeSrc": "236:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:1",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nativeSrc": "232:32:1",
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nativeSrc": "229:52:1",
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nativeSrc": "290:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nativeSrc": "303:23:1",
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nativeSrc": "335:30:1",
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nativeSrc": "335:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nativeSrc": "374:15:1",
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:1",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:1",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:1",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:1",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nativeSrc": "495:92:1",
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nativeSrc": "505:26:1",
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:1",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nativeSrc": "513:18:1",
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nativeSrc": "565:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nativeSrc": "558:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nativeSrc": "540:41:1",
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nativeSrc": "540:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:1",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:1",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nativeSrc": "653:239:1",
													"nodeType": "YulBlock",
													"src": "653:239:1",
													"statements": [
														{
															"nativeSrc": "663:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:1"
																},
																"nativeSrc": "677:12:1",
																"nodeType": "YulFunctionCall",
																"src": "677:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulTypedName",
																	"src": "667:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:1"
																},
																"nativeSrc": "698:19:1",
																"nodeType": "YulFunctionCall",
																"src": "698:19:1"
															},
															"nativeSrc": "698:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:1",
																				"nodeType": "YulLiteral",
																				"src": "741:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:1"
																		},
																		"nativeSrc": "732:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:1",
																				"nodeType": "YulLiteral",
																				"src": "759:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:1"
																		},
																		"nativeSrc": "748:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:1"
																},
																"nativeSrc": "726:47:1",
																"nodeType": "YulFunctionCall",
																"src": "726:47:1"
															},
															"nativeSrc": "726:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:1"
																				},
																				"nativeSrc": "793:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:1",
																				"nodeType": "YulLiteral",
																				"src": "811:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nativeSrc": "789:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:1",
																		"nodeType": "YulLiteral",
																		"src": "818:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:1"
																},
																"nativeSrc": "782:38:1",
																"nodeType": "YulFunctionCall",
																"src": "782:38:1"
															},
															"nativeSrc": "782:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:1"
														},
														{
															"nativeSrc": "829:57:1",
															"nodeType": "YulAssignment",
															"src": "829:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:1",
																								"nodeType": "YulLiteral",
																								"src": "865:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:1"
																						},
																						"nativeSrc": "853:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:1",
																								"nodeType": "YulLiteral",
																								"src": "874:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:1"
																						},
																						"nativeSrc": "870:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:1"
																				},
																				"nativeSrc": "849:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:1",
																		"nodeType": "YulLiteral",
																		"src": "881:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:50:1",
																"nodeType": "YulFunctionCall",
																"src": "836:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:1",
														"nodeType": "YulTypedName",
														"src": "630:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:1",
														"nodeType": "YulTypedName",
														"src": "637:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:1",
														"nodeType": "YulTypedName",
														"src": "645:3:1",
														"type": ""
													}
												],
												"src": "592:300:1"
											},
											{
												"body": {
													"nativeSrc": "1018:110:1",
													"nodeType": "YulBlock",
													"src": "1018:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:1"
																},
																"nativeSrc": "1028:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:1"
															},
															"nativeSrc": "1028:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:1"
														},
														{
															"nativeSrc": "1058:64:1",
															"nodeType": "YulAssignment",
															"src": "1058:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:1"
																		},
																		"nativeSrc": "1103:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:1"
																},
																"nativeSrc": "1066:56:1",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:1",
														"nodeType": "YulTypedName",
														"src": "987:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:1",
														"nodeType": "YulTypedName",
														"src": "998:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:1",
														"nodeType": "YulTypedName",
														"src": "1009:4:1",
														"type": ""
													}
												],
												"src": "897:231:1"
											},
											{
												"body": {
													"nativeSrc": "1203:156:1",
													"nodeType": "YulBlock",
													"src": "1203:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:1",
																"nodeType": "YulBlock",
																"src": "1249:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:1"
																			},
																			"nativeSrc": "1251:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:1"
																		},
																		"nativeSrc": "1251:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:1"
																},
																"nativeSrc": "1216:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:1"
															},
															"nativeSrc": "1213:52:1",
															"nodeType": "YulIf",
															"src": "1213:52:1"
														},
														{
															"nativeSrc": "1274:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1274:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1287:1:1",
																"nodeType": "YulLiteral",
																"src": "1287:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1278:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1278:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1297:32:1",
															"nodeType": "YulAssignment",
															"src": "1297:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1306:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1306:12:1"
																},
																"nativeSrc": "1306:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1306:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1297:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1297:5:1"
																}
															]
														},
														{
															"nativeSrc": "1338:15:1",
															"nodeType": "YulAssignment",
															"src": "1338:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1348:5:1",
																"nodeType": "YulIdentifier",
																"src": "1348:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1338:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:1",
														"nodeType": "YulTypedName",
														"src": "1169:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:1",
														"nodeType": "YulTypedName",
														"src": "1180:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:1",
														"nodeType": "YulTypedName",
														"src": "1192:6:1",
														"type": ""
													}
												],
												"src": "1133:226:1"
											},
											{
												"body": {
													"nativeSrc": "1465:102:1",
													"nodeType": "YulBlock",
													"src": "1465:102:1",
													"statements": [
														{
															"nativeSrc": "1475:26:1",
															"nodeType": "YulAssignment",
															"src": "1475:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:1"
																},
																"nativeSrc": "1483:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1532:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1548:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1548:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1553:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1553:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1544:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1544:3:1"
																						},
																						"nativeSrc": "1544:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1544:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1557:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1557:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1540:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:1"
																				},
																				"nativeSrc": "1540:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1540:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:1"
																		},
																		"nativeSrc": "1528:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:1"
																},
																"nativeSrc": "1510:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1510:51:1"
															},
															"nativeSrc": "1510:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1510:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1364:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:1",
														"nodeType": "YulTypedName",
														"src": "1434:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:1",
														"nodeType": "YulTypedName",
														"src": "1445:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:1",
														"nodeType": "YulTypedName",
														"src": "1456:4:1",
														"type": ""
													}
												],
												"src": "1364:203:1"
											},
											{
												"body": {
													"nativeSrc": "1621:124:1",
													"nodeType": "YulBlock",
													"src": "1621:124:1",
													"statements": [
														{
															"nativeSrc": "1631:29:1",
															"nodeType": "YulAssignment",
															"src": "1631:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1653:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1653:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1640:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1640:12:1"
																},
																"nativeSrc": "1640:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1640:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1631:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1631:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1723:16:1",
																"nodeType": "YulBlock",
																"src": "1723:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1732:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1735:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1725:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1725:6:1"
																			},
																			"nativeSrc": "1725:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1725:12:1"
																		},
																		"nativeSrc": "1725:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1725:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1682:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1682:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1693:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1693:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1708:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1708:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1713:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1713:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1704:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1704:3:1"
																								},
																								"nativeSrc": "1704:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1704:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1717:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1700:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1700:3:1"
																						},
																						"nativeSrc": "1700:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1700:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1689:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1689:3:1"
																				},
																				"nativeSrc": "1689:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1689:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1679:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1679:2:1"
																		},
																		"nativeSrc": "1679:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:1"
																},
																"nativeSrc": "1672:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1672:50:1"
															},
															"nativeSrc": "1669:70:1",
															"nodeType": "YulIf",
															"src": "1669:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1572:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1600:6:1",
														"nodeType": "YulTypedName",
														"src": "1600:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1611:5:1",
														"nodeType": "YulTypedName",
														"src": "1611:5:1",
														"type": ""
													}
												],
												"src": "1572:173:1"
											},
											{
												"body": {
													"nativeSrc": "1837:213:1",
													"nodeType": "YulBlock",
													"src": "1837:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1883:16:1",
																"nodeType": "YulBlock",
																"src": "1883:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1885:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:1"
																			},
																			"nativeSrc": "1885:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:12:1"
																		},
																		"nativeSrc": "1885:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1858:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1854:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:1"
																		},
																		"nativeSrc": "1854:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1850:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:1"
																},
																"nativeSrc": "1850:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:32:1"
															},
															"nativeSrc": "1847:52:1",
															"nodeType": "YulIf",
															"src": "1847:52:1"
														},
														{
															"nativeSrc": "1908:39:1",
															"nodeType": "YulAssignment",
															"src": "1908:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1937:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1918:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:18:1"
																},
																"nativeSrc": "1918:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1918:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1908:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:1"
																}
															]
														},
														{
															"nativeSrc": "1956:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1969:1:1",
																"nodeType": "YulLiteral",
																"src": "1969:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1960:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1979:41:1",
															"nodeType": "YulAssignment",
															"src": "1979:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2005:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2005:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2016:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2001:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:1"
																		},
																		"nativeSrc": "2001:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2001:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1988:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1988:12:1"
																},
																"nativeSrc": "1988:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1988:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1979:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1979:5:1"
																}
															]
														},
														{
															"nativeSrc": "2029:15:1",
															"nodeType": "YulAssignment",
															"src": "2029:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2039:5:1",
																"nodeType": "YulIdentifier",
																"src": "2039:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2029:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1750:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:1",
														"nodeType": "YulTypedName",
														"src": "1795:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1806:7:1",
														"nodeType": "YulTypedName",
														"src": "1806:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1818:6:1",
														"nodeType": "YulTypedName",
														"src": "1818:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1826:6:1",
														"nodeType": "YulTypedName",
														"src": "1826:6:1",
														"type": ""
													}
												],
												"src": "1750:300:1"
											},
											{
												"body": {
													"nativeSrc": "2159:270:1",
													"nodeType": "YulBlock",
													"src": "2159:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2205:16:1",
																"nodeType": "YulBlock",
																"src": "2205:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2207:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:1"
																			},
																			"nativeSrc": "2207:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:12:1"
																		},
																		"nativeSrc": "2207:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2180:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2180:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2176:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2176:3:1"
																		},
																		"nativeSrc": "2176:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2176:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2201:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2201:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2172:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:1"
																},
																"nativeSrc": "2172:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2172:32:1"
															},
															"nativeSrc": "2169:52:1",
															"nodeType": "YulIf",
															"src": "2169:52:1"
														},
														{
															"nativeSrc": "2230:39:1",
															"nodeType": "YulAssignment",
															"src": "2230:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2259:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2240:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2240:18:1"
																},
																"nativeSrc": "2240:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2240:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2230:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:1"
																}
															]
														},
														{
															"nativeSrc": "2278:48:1",
															"nodeType": "YulAssignment",
															"src": "2278:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2311:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2311:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2322:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2322:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2307:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:1"
																		},
																		"nativeSrc": "2307:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2307:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2288:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2288:18:1"
																},
																"nativeSrc": "2288:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2288:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:1"
																}
															]
														},
														{
															"nativeSrc": "2335:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2335:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2348:1:1",
																"nodeType": "YulLiteral",
																"src": "2348:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2339:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2339:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2358:41:1",
															"nodeType": "YulAssignment",
															"src": "2358:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2384:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2384:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2395:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2395:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2380:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:1"
																		},
																		"nativeSrc": "2380:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2367:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2367:12:1"
																},
																"nativeSrc": "2367:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2367:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2358:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:5:1"
																}
															]
														},
														{
															"nativeSrc": "2408:15:1",
															"nodeType": "YulAssignment",
															"src": "2408:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2418:5:1",
																"nodeType": "YulIdentifier",
																"src": "2418:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2408:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2055:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2109:9:1",
														"nodeType": "YulTypedName",
														"src": "2109:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2120:7:1",
														"nodeType": "YulTypedName",
														"src": "2120:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2132:6:1",
														"nodeType": "YulTypedName",
														"src": "2132:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2140:6:1",
														"nodeType": "YulTypedName",
														"src": "2140:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2148:6:1",
														"nodeType": "YulTypedName",
														"src": "2148:6:1",
														"type": ""
													}
												],
												"src": "2055:374:1"
											},
											{
												"body": {
													"nativeSrc": "2504:116:1",
													"nodeType": "YulBlock",
													"src": "2504:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2550:16:1",
																"nodeType": "YulBlock",
																"src": "2550:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2559:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2559:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2562:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2562:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2552:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2552:6:1"
																			},
																			"nativeSrc": "2552:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:12:1"
																		},
																		"nativeSrc": "2552:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2525:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2525:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2521:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:1"
																		},
																		"nativeSrc": "2521:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2546:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2546:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2517:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2517:3:1"
																},
																"nativeSrc": "2517:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2517:32:1"
															},
															"nativeSrc": "2514:52:1",
															"nodeType": "YulIf",
															"src": "2514:52:1"
														},
														{
															"nativeSrc": "2575:39:1",
															"nodeType": "YulAssignment",
															"src": "2575:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2604:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2585:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2585:18:1"
																},
																"nativeSrc": "2585:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2585:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2575:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2434:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:1",
														"nodeType": "YulTypedName",
														"src": "2470:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2481:7:1",
														"nodeType": "YulTypedName",
														"src": "2481:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2493:6:1",
														"nodeType": "YulTypedName",
														"src": "2493:6:1",
														"type": ""
													}
												],
												"src": "2434:186:1"
											},
											{
												"body": {
													"nativeSrc": "2726:76:1",
													"nodeType": "YulBlock",
													"src": "2726:76:1",
													"statements": [
														{
															"nativeSrc": "2736:26:1",
															"nodeType": "YulAssignment",
															"src": "2736:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2748:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2748:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2744:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2744:3:1"
																},
																"nativeSrc": "2744:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2744:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2736:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2736:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2789:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2789:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:1"
																},
																"nativeSrc": "2771:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2771:25:1"
															},
															"nativeSrc": "2771:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2771:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2625:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2695:9:1",
														"nodeType": "YulTypedName",
														"src": "2695:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2706:6:1",
														"nodeType": "YulTypedName",
														"src": "2706:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2717:4:1",
														"nodeType": "YulTypedName",
														"src": "2717:4:1",
														"type": ""
													}
												],
												"src": "2625:177:1"
											},
											{
												"body": {
													"nativeSrc": "2891:263:1",
													"nodeType": "YulBlock",
													"src": "2891:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2937:16:1",
																"nodeType": "YulBlock",
																"src": "2937:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2946:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2946:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2949:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2949:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2939:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:1"
																			},
																			"nativeSrc": "2939:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2939:12:1"
																		},
																		"nativeSrc": "2939:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2939:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2912:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2912:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2921:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2921:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2908:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:1"
																		},
																		"nativeSrc": "2908:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2908:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2933:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2904:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2904:3:1"
																},
																"nativeSrc": "2904:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2904:32:1"
															},
															"nativeSrc": "2901:52:1",
															"nodeType": "YulIf",
															"src": "2901:52:1"
														},
														{
															"nativeSrc": "2962:39:1",
															"nodeType": "YulAssignment",
															"src": "2962:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2991:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2972:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2972:18:1"
																},
																"nativeSrc": "2972:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2972:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2962:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:1"
																}
															]
														},
														{
															"nativeSrc": "3010:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3040:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3040:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3051:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3051:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3036:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:1"
																		},
																		"nativeSrc": "3036:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3036:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3023:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3023:12:1"
																},
																"nativeSrc": "3023:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3023:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3014:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3014:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3108:16:1",
																"nodeType": "YulBlock",
																"src": "3108:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3117:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3117:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3120:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3110:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3110:6:1"
																			},
																			"nativeSrc": "3110:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3110:12:1"
																		},
																		"nativeSrc": "3110:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3110:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3077:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3077:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3098:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3098:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3091:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3091:6:1"
																						},
																						"nativeSrc": "3091:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3091:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3084:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3084:6:1"
																				},
																				"nativeSrc": "3084:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3084:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3074:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3074:2:1"
																		},
																		"nativeSrc": "3074:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3074:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3067:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:1"
																},
																"nativeSrc": "3067:40:1",
																"nodeType": "YulFunctionCall",
																"src": "3067:40:1"
															},
															"nativeSrc": "3064:60:1",
															"nodeType": "YulIf",
															"src": "3064:60:1"
														},
														{
															"nativeSrc": "3133:15:1",
															"nodeType": "YulAssignment",
															"src": "3133:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3143:5:1",
																"nodeType": "YulIdentifier",
																"src": "3143:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3133:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2807:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2849:9:1",
														"nodeType": "YulTypedName",
														"src": "2849:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2860:7:1",
														"nodeType": "YulTypedName",
														"src": "2860:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2872:6:1",
														"nodeType": "YulTypedName",
														"src": "2872:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2880:6:1",
														"nodeType": "YulTypedName",
														"src": "2880:6:1",
														"type": ""
													}
												],
												"src": "2807:347:1"
											},
											{
												"body": {
													"nativeSrc": "3191:95:1",
													"nodeType": "YulBlock",
													"src": "3191:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3208:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3208:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3215:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3215:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3220:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3211:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:1"
																		},
																		"nativeSrc": "3211:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:1"
																},
																"nativeSrc": "3201:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3201:31:1"
															},
															"nativeSrc": "3201:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3201:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3248:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3251:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3251:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3241:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:6:1"
																},
																"nativeSrc": "3241:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3241:15:1"
															},
															"nativeSrc": "3241:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3241:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3272:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3275:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3275:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3265:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3265:6:1"
																},
																"nativeSrc": "3265:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3265:15:1"
															},
															"nativeSrc": "3265:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3265:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3159:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3159:127:1"
											},
											{
												"body": {
													"nativeSrc": "3365:641:1",
													"nodeType": "YulBlock",
													"src": "3365:641:1",
													"statements": [
														{
															"nativeSrc": "3375:13:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3375:13:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3387:1:1",
																"nodeType": "YulLiteral",
																"src": "3387:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "3379:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3379:4:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3431:22:1",
																"nodeType": "YulBlock",
																"src": "3431:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3433:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3433:16:1"
																			},
																			"nativeSrc": "3433:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3433:18:1"
																		},
																		"nativeSrc": "3433:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3433:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3403:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3411:18:1",
																		"nodeType": "YulLiteral",
																		"src": "3411:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3400:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3400:2:1"
																},
																"nativeSrc": "3400:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3400:30:1"
															},
															"nativeSrc": "3397:56:1",
															"nodeType": "YulIf",
															"src": "3397:56:1"
														},
														{
															"nativeSrc": "3462:43:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3462:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3484:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3484:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3492:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3492:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3480:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:1"
																		},
																		"nativeSrc": "3480:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3480:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3501:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3501:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3497:3:1"
																		},
																		"nativeSrc": "3497:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3497:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3476:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:1"
																},
																"nativeSrc": "3476:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3476:29:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "3466:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3466:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3514:25:1",
															"nodeType": "YulAssignment",
															"src": "3514:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "3526:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3534:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3534:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3522:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:1"
																},
																"nativeSrc": "3522:17:1",
																"nodeType": "YulFunctionCall",
																"src": "3522:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3514:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3514:4:1"
																}
															]
														},
														{
															"nativeSrc": "3548:15:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3548:15:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3562:1:1",
																"nodeType": "YulLiteral",
																"src": "3562:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3552:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3552:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3572:19:1",
															"nodeType": "YulAssignment",
															"src": "3572:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3588:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3588:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3582:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3582:5:1"
																},
																"nativeSrc": "3582:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3582:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3572:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:1"
																}
															]
														},
														{
															"nativeSrc": "3600:60:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3600:60:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3622:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3622:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "3638:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3638:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3646:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3646:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3634:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3634:3:1"
																				},
																				"nativeSrc": "3634:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3634:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3655:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3655:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3651:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:1"
																				},
																				"nativeSrc": "3651:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3651:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:1"
																		},
																		"nativeSrc": "3630:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3618:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:1"
																},
																"nativeSrc": "3618:42:1",
																"nodeType": "YulFunctionCall",
																"src": "3618:42:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3604:10:1",
																	"nodeType": "YulTypedName",
																	"src": "3604:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3735:22:1",
																"nodeType": "YulBlock",
																"src": "3735:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3737:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3737:16:1"
																			},
																			"nativeSrc": "3737:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3737:18:1"
																		},
																		"nativeSrc": "3737:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3678:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3678:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3690:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3690:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3675:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3675:2:1"
																		},
																		"nativeSrc": "3675:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3714:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3714:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3726:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3711:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3711:2:1"
																		},
																		"nativeSrc": "3711:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3672:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3672:2:1"
																},
																"nativeSrc": "3672:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3672:62:1"
															},
															"nativeSrc": "3669:88:1",
															"nodeType": "YulIf",
															"src": "3669:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3773:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3773:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3777:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "3777:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:1"
																},
																"nativeSrc": "3766:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3766:22:1"
															},
															"nativeSrc": "3766:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "3766:22:1"
														},
														{
															"nativeSrc": "3797:15:1",
															"nodeType": "YulAssignment",
															"src": "3797:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3806:6:1",
																"nodeType": "YulIdentifier",
																"src": "3806:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3797:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3797:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3828:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3836:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3836:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:1"
																},
																"nativeSrc": "3821:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3821:22:1"
															},
															"nativeSrc": "3821:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "3821:22:1"
														},
														{
															"body": {
																"nativeSrc": "3881:16:1",
																"nodeType": "YulBlock",
																"src": "3881:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3890:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3893:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3883:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3883:6:1"
																			},
																			"nativeSrc": "3883:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3883:12:1"
																		},
																		"nativeSrc": "3883:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3883:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3862:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3862:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3867:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3867:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3858:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:1"
																		},
																		"nativeSrc": "3858:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3876:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3855:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3855:2:1"
																},
																"nativeSrc": "3855:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3855:25:1"
															},
															"nativeSrc": "3852:45:1",
															"nodeType": "YulIf",
															"src": "3852:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3923:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3923:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3931:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3931:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3919:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:1"
																		},
																		"nativeSrc": "3919:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3919:17:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3938:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3938:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3943:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3943:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3906:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3906:12:1"
																},
																"nativeSrc": "3906:44:1",
																"nodeType": "YulFunctionCall",
																"src": "3906:44:1"
															},
															"nativeSrc": "3906:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "3906:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3974:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3974:6:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3982:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3982:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3970:3:1"
																				},
																				"nativeSrc": "3970:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3970:19:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3991:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3991:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3966:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3966:3:1"
																		},
																		"nativeSrc": "3966:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3966:30:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3998:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3998:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3959:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3959:6:1"
																},
																"nativeSrc": "3959:41:1",
																"nodeType": "YulFunctionCall",
																"src": "3959:41:1"
															},
															"nativeSrc": "3959:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "3959:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nativeSrc": "3291:715:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3334:3:1",
														"nodeType": "YulTypedName",
														"src": "3334:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3339:6:1",
														"nodeType": "YulTypedName",
														"src": "3339:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3347:3:1",
														"nodeType": "YulTypedName",
														"src": "3347:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3355:5:1",
														"nodeType": "YulTypedName",
														"src": "3355:5:1",
														"type": ""
													}
												],
												"src": "3291:715:1"
											},
											{
												"body": {
													"nativeSrc": "4141:582:1",
													"nodeType": "YulBlock",
													"src": "4141:582:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4188:16:1",
																"nodeType": "YulBlock",
																"src": "4188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4197:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4200:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4190:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4190:6:1"
																			},
																			"nativeSrc": "4190:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4190:12:1"
																		},
																		"nativeSrc": "4190:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4162:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4171:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4158:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:1"
																		},
																		"nativeSrc": "4158:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4183:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4183:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4154:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:1"
																},
																"nativeSrc": "4154:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4154:33:1"
															},
															"nativeSrc": "4151:53:1",
															"nodeType": "YulIf",
															"src": "4151:53:1"
														},
														{
															"nativeSrc": "4213:39:1",
															"nodeType": "YulAssignment",
															"src": "4213:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4242:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4242:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4223:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4223:18:1"
																},
																"nativeSrc": "4223:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4223:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4213:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:1"
																}
															]
														},
														{
															"nativeSrc": "4261:48:1",
															"nodeType": "YulAssignment",
															"src": "4261:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4294:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4305:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4305:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4290:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:1"
																		},
																		"nativeSrc": "4290:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4271:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4271:18:1"
																},
																"nativeSrc": "4271:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4271:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4261:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:1"
																}
															]
														},
														{
															"nativeSrc": "4318:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4318:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4331:1:1",
																"nodeType": "YulLiteral",
																"src": "4331:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4322:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4322:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4341:41:1",
															"nodeType": "YulAssignment",
															"src": "4341:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4367:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4367:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4378:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4378:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4363:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4363:3:1"
																		},
																		"nativeSrc": "4363:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4363:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4350:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4350:12:1"
																},
																"nativeSrc": "4350:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4350:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4341:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4341:5:1"
																}
															]
														},
														{
															"nativeSrc": "4391:15:1",
															"nodeType": "YulAssignment",
															"src": "4391:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4401:5:1",
																"nodeType": "YulIdentifier",
																"src": "4401:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:1"
																}
															]
														},
														{
															"nativeSrc": "4415:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4415:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nativeSrc": "4442:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4429:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4429:12:1"
																},
																"nativeSrc": "4429:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4429:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4419:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4419:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4504:16:1",
																"nodeType": "YulBlock",
																"src": "4504:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4513:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4516:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4516:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4506:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:1"
																			},
																			"nativeSrc": "4506:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4506:12:1"
																		},
																		"nativeSrc": "4506:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4476:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4484:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4484:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4473:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4473:2:1"
																},
																"nativeSrc": "4473:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4473:30:1"
															},
															"nativeSrc": "4470:50:1",
															"nodeType": "YulIf",
															"src": "4470:50:1"
														},
														{
															"nativeSrc": "4529:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4529:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4543:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4554:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4554:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4539:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:1"
																},
																"nativeSrc": "4539:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4539:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4533:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4533:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4609:16:1",
																"nodeType": "YulBlock",
																"src": "4609:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4618:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4618:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4621:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4621:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4611:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4611:6:1"
																			},
																			"nativeSrc": "4611:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4611:12:1"
																		},
																		"nativeSrc": "4611:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4611:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4588:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4588:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4592:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4592:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4584:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4584:3:1"
																				},
																				"nativeSrc": "4584:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4584:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4599:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4580:3:1"
																		},
																		"nativeSrc": "4580:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4580:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4573:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4573:6:1"
																},
																"nativeSrc": "4573:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4573:35:1"
															},
															"nativeSrc": "4570:55:1",
															"nodeType": "YulIf",
															"src": "4570:55:1"
														},
														{
															"nativeSrc": "4634:83:1",
															"nodeType": "YulAssignment",
															"src": "4634:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4682:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4682:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4686:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4678:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4678:3:1"
																		},
																		"nativeSrc": "4678:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4678:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4704:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4704:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4691:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "4691:12:1"
																		},
																		"nativeSrc": "4691:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4709:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4709:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "4644:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "4644:33:1"
																},
																"nativeSrc": "4644:73:1",
																"nodeType": "YulFunctionCall",
																"src": "4644:73:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4634:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "4011:712:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4083:9:1",
														"nodeType": "YulTypedName",
														"src": "4083:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4094:7:1",
														"nodeType": "YulTypedName",
														"src": "4094:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4106:6:1",
														"nodeType": "YulTypedName",
														"src": "4106:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4114:6:1",
														"nodeType": "YulTypedName",
														"src": "4114:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4122:6:1",
														"nodeType": "YulTypedName",
														"src": "4122:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4130:6:1",
														"nodeType": "YulTypedName",
														"src": "4130:6:1",
														"type": ""
													}
												],
												"src": "4011:712:1"
											},
											{
												"body": {
													"nativeSrc": "4815:173:1",
													"nodeType": "YulBlock",
													"src": "4815:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4861:16:1",
																"nodeType": "YulBlock",
																"src": "4861:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4870:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4870:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4873:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4863:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4863:6:1"
																			},
																			"nativeSrc": "4863:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4863:12:1"
																		},
																		"nativeSrc": "4863:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4863:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4836:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4845:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4832:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:1"
																		},
																		"nativeSrc": "4832:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4857:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:1"
																},
																"nativeSrc": "4828:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4828:32:1"
															},
															"nativeSrc": "4825:52:1",
															"nodeType": "YulIf",
															"src": "4825:52:1"
														},
														{
															"nativeSrc": "4886:39:1",
															"nodeType": "YulAssignment",
															"src": "4886:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4915:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4915:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4896:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:18:1"
																},
																"nativeSrc": "4896:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:1"
																}
															]
														},
														{
															"nativeSrc": "4934:48:1",
															"nodeType": "YulAssignment",
															"src": "4934:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4967:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4978:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4978:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:1"
																		},
																		"nativeSrc": "4963:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4944:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:18:1"
																},
																"nativeSrc": "4944:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4944:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4728:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4773:9:1",
														"nodeType": "YulTypedName",
														"src": "4773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4784:7:1",
														"nodeType": "YulTypedName",
														"src": "4784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4796:6:1",
														"nodeType": "YulTypedName",
														"src": "4796:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4804:6:1",
														"nodeType": "YulTypedName",
														"src": "4804:6:1",
														"type": ""
													}
												],
												"src": "4728:260:1"
											},
											{
												"body": {
													"nativeSrc": "5090:427:1",
													"nodeType": "YulBlock",
													"src": "5090:427:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5136:16:1",
																"nodeType": "YulBlock",
																"src": "5136:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5145:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5145:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5148:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5138:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5138:6:1"
																			},
																			"nativeSrc": "5138:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5138:12:1"
																		},
																		"nativeSrc": "5138:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5138:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5111:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5111:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5120:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5107:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:1"
																		},
																		"nativeSrc": "5107:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5107:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5132:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5103:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:1"
																},
																"nativeSrc": "5103:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5103:32:1"
															},
															"nativeSrc": "5100:52:1",
															"nodeType": "YulIf",
															"src": "5100:52:1"
														},
														{
															"nativeSrc": "5161:39:1",
															"nodeType": "YulAssignment",
															"src": "5161:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5190:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5190:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5171:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5171:18:1"
																},
																"nativeSrc": "5171:29:1",
																"nodeType": "YulFunctionCall",
																"src": "5171:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5161:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:1"
																}
															]
														},
														{
															"nativeSrc": "5209:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5209:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5240:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5240:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5251:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5251:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5236:3:1"
																		},
																		"nativeSrc": "5236:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5236:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5223:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5223:12:1"
																},
																"nativeSrc": "5223:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5223:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5213:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5213:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5298:16:1",
																"nodeType": "YulBlock",
																"src": "5298:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5307:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5307:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5310:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5310:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5300:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5300:6:1"
																			},
																			"nativeSrc": "5300:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5300:12:1"
																		},
																		"nativeSrc": "5300:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5300:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5270:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5270:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5278:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5278:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5267:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5267:2:1"
																},
																"nativeSrc": "5267:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5267:30:1"
															},
															"nativeSrc": "5264:50:1",
															"nodeType": "YulIf",
															"src": "5264:50:1"
														},
														{
															"nativeSrc": "5323:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5323:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5337:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5337:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5348:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5348:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5333:3:1"
																},
																"nativeSrc": "5333:22:1",
																"nodeType": "YulFunctionCall",
																"src": "5333:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5327:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5327:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5403:16:1",
																"nodeType": "YulBlock",
																"src": "5403:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5412:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5412:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5415:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5415:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5405:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5405:6:1"
																			},
																			"nativeSrc": "5405:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5405:12:1"
																		},
																		"nativeSrc": "5405:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5405:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5382:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5382:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5386:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5386:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:1"
																				},
																				"nativeSrc": "5378:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5393:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5393:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5374:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:1"
																		},
																		"nativeSrc": "5374:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5374:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:1"
																},
																"nativeSrc": "5367:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5367:35:1"
															},
															"nativeSrc": "5364:55:1",
															"nodeType": "YulIf",
															"src": "5364:55:1"
														},
														{
															"nativeSrc": "5428:83:1",
															"nodeType": "YulAssignment",
															"src": "5428:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5476:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5476:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5480:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5480:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5472:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:1"
																		},
																		"nativeSrc": "5472:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5498:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5498:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5485:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "5485:12:1"
																		},
																		"nativeSrc": "5485:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5503:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5503:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "5438:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "5438:33:1"
																},
																"nativeSrc": "5438:73:1",
																"nodeType": "YulFunctionCall",
																"src": "5438:73:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5428:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "4993:524:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5048:9:1",
														"nodeType": "YulTypedName",
														"src": "5048:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5059:7:1",
														"nodeType": "YulTypedName",
														"src": "5059:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5071:6:1",
														"nodeType": "YulTypedName",
														"src": "5071:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5079:6:1",
														"nodeType": "YulTypedName",
														"src": "5079:6:1",
														"type": ""
													}
												],
												"src": "4993:524:1"
											},
											{
												"body": {
													"nativeSrc": "5577:325:1",
													"nodeType": "YulBlock",
													"src": "5577:325:1",
													"statements": [
														{
															"nativeSrc": "5587:22:1",
															"nodeType": "YulAssignment",
															"src": "5587:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5601:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5601:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5604:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5597:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:1"
																},
																"nativeSrc": "5597:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5597:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:1"
																}
															]
														},
														{
															"nativeSrc": "5618:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5618:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5648:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5648:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5654:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5654:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5644:3:1"
																},
																"nativeSrc": "5644:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5644:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5622:18:1",
																	"nodeType": "YulTypedName",
																	"src": "5622:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5695:31:1",
																"nodeType": "YulBlock",
																"src": "5695:31:1",
																"statements": [
																	{
																		"nativeSrc": "5697:27:1",
																		"nodeType": "YulAssignment",
																		"src": "5697:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5711:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5711:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5719:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5719:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5707:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5707:3:1"
																			},
																			"nativeSrc": "5707:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5707:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5697:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5697:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5675:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5675:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5668:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:1"
																},
																"nativeSrc": "5668:26:1",
																"nodeType": "YulFunctionCall",
																"src": "5668:26:1"
															},
															"nativeSrc": "5665:61:1",
															"nodeType": "YulIf",
															"src": "5665:61:1"
														},
														{
															"body": {
																"nativeSrc": "5785:111:1",
																"nodeType": "YulBlock",
																"src": "5785:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5806:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5806:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5813:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5813:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5818:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5818:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5809:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5809:3:1"
																					},
																					"nativeSrc": "5809:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5809:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5799:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:1"
																			},
																			"nativeSrc": "5799:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5799:31:1"
																		},
																		"nativeSrc": "5799:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5799:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5850:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5850:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5853:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5853:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5843:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5843:6:1"
																			},
																			"nativeSrc": "5843:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5843:15:1"
																		},
																		"nativeSrc": "5843:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5843:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5878:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5881:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5881:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5871:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5871:6:1"
																			},
																			"nativeSrc": "5871:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5871:15:1"
																		},
																		"nativeSrc": "5871:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5871:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5741:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5741:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5764:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5764:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5772:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5772:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5761:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5761:2:1"
																		},
																		"nativeSrc": "5761:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5761:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5738:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5738:2:1"
																},
																"nativeSrc": "5738:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5738:38:1"
															},
															"nativeSrc": "5735:161:1",
															"nodeType": "YulIf",
															"src": "5735:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5522:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5557:4:1",
														"nodeType": "YulTypedName",
														"src": "5557:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5566:6:1",
														"nodeType": "YulTypedName",
														"src": "5566:6:1",
														"type": ""
													}
												],
												"src": "5522:380:1"
											},
											{
												"body": {
													"nativeSrc": "6064:214:1",
													"nodeType": "YulBlock",
													"src": "6064:214:1",
													"statements": [
														{
															"nativeSrc": "6074:26:1",
															"nodeType": "YulAssignment",
															"src": "6074:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6086:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6086:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6082:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6082:3:1"
																},
																"nativeSrc": "6082:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6082:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6074:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6074:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6116:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6131:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6131:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6147:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6147:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6152:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6152:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6143:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6143:3:1"
																						},
																						"nativeSrc": "6143:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6143:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6156:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6156:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6139:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6139:3:1"
																				},
																				"nativeSrc": "6139:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6139:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6127:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:1"
																		},
																		"nativeSrc": "6127:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6127:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6109:6:1"
																},
																"nativeSrc": "6109:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6109:51:1"
															},
															"nativeSrc": "6109:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6109:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6180:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6180:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6191:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6191:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6176:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6176:3:1"
																		},
																		"nativeSrc": "6176:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6176:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6196:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6196:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6169:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6169:6:1"
																},
																"nativeSrc": "6169:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6169:34:1"
															},
															"nativeSrc": "6169:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6169:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6223:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6223:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6234:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6234:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6219:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6219:3:1"
																		},
																		"nativeSrc": "6219:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6219:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6243:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6243:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6259:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6259:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6264:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6264:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6255:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6255:3:1"
																						},
																						"nativeSrc": "6255:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6255:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6268:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6268:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6251:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6251:3:1"
																				},
																				"nativeSrc": "6251:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6251:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:1"
																		},
																		"nativeSrc": "6239:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6212:6:1"
																},
																"nativeSrc": "6212:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6212:60:1"
															},
															"nativeSrc": "6212:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6212:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5907:371:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6017:9:1",
														"nodeType": "YulTypedName",
														"src": "6017:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6028:6:1",
														"nodeType": "YulTypedName",
														"src": "6028:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6036:6:1",
														"nodeType": "YulTypedName",
														"src": "6036:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6044:6:1",
														"nodeType": "YulTypedName",
														"src": "6044:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6055:4:1",
														"nodeType": "YulTypedName",
														"src": "6055:4:1",
														"type": ""
													}
												],
												"src": "5907:371:1"
											},
											{
												"body": {
													"nativeSrc": "6333:162:1",
													"nodeType": "YulBlock",
													"src": "6333:162:1",
													"statements": [
														{
															"nativeSrc": "6343:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6343:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6363:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6363:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6357:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6357:5:1"
																},
																"nativeSrc": "6357:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6357:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6347:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6347:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6384:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6384:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6393:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6393:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6400:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6400:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6389:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6389:3:1"
																		},
																		"nativeSrc": "6389:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6389:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6407:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6378:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6378:5:1"
																},
																"nativeSrc": "6378:36:1",
																"nodeType": "YulFunctionCall",
																"src": "6378:36:1"
															},
															"nativeSrc": "6378:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "6378:36:1"
														},
														{
															"nativeSrc": "6423:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6423:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6437:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6442:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6442:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:1"
																},
																"nativeSrc": "6433:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6433:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6427:2:1",
																	"nodeType": "YulTypedName",
																	"src": "6427:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6465:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "6465:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6469:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6469:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6458:6:1"
																},
																"nativeSrc": "6458:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6458:13:1"
															},
															"nativeSrc": "6458:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "6458:13:1"
														},
														{
															"nativeSrc": "6480:9:1",
															"nodeType": "YulAssignment",
															"src": "6480:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "6487:2:1",
																"nodeType": "YulIdentifier",
																"src": "6487:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6480:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6480:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "6283:212:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6310:5:1",
														"nodeType": "YulTypedName",
														"src": "6310:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6317:3:1",
														"nodeType": "YulTypedName",
														"src": "6317:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6325:3:1",
														"nodeType": "YulTypedName",
														"src": "6325:3:1",
														"type": ""
													}
												],
												"src": "6283:212:1"
											},
											{
												"body": {
													"nativeSrc": "6687:80:1",
													"nodeType": "YulBlock",
													"src": "6687:80:1",
													"statements": [
														{
															"nativeSrc": "6697:64:1",
															"nodeType": "YulAssignment",
															"src": "6697:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6722:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6722:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6748:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6748:6:1"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "6756:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6756:3:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "6730:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6730:17:1"
																		},
																		"nativeSrc": "6730:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6730:30:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6704:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6704:17:1"
																},
																"nativeSrc": "6704:57:1",
																"nodeType": "YulFunctionCall",
																"src": "6704:57:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6697:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6500:267:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6655:3:1",
														"nodeType": "YulTypedName",
														"src": "6655:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6660:6:1",
														"nodeType": "YulTypedName",
														"src": "6660:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6668:6:1",
														"nodeType": "YulTypedName",
														"src": "6668:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6679:3:1",
														"nodeType": "YulTypedName",
														"src": "6679:3:1",
														"type": ""
													}
												],
												"src": "6500:267:1"
											},
											{
												"body": {
													"nativeSrc": "6820:174:1",
													"nodeType": "YulBlock",
													"src": "6820:174:1",
													"statements": [
														{
															"nativeSrc": "6830:16:1",
															"nodeType": "YulAssignment",
															"src": "6830:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6841:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6841:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6844:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6837:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6837:3:1"
																},
																"nativeSrc": "6837:9:1",
																"nodeType": "YulFunctionCall",
																"src": "6837:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6830:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6877:111:1",
																"nodeType": "YulBlock",
																"src": "6877:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6898:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6898:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6905:3:1",
																							"nodeType": "YulLiteral",
																							"src": "6905:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6910:10:1",
																							"nodeType": "YulLiteral",
																							"src": "6910:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6901:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6901:3:1"
																					},
																					"nativeSrc": "6901:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6901:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6891:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:1"
																			},
																			"nativeSrc": "6891:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:31:1"
																		},
																		"nativeSrc": "6891:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6891:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6942:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6942:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6945:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6935:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6935:6:1"
																			},
																			"nativeSrc": "6935:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6935:15:1"
																		},
																		"nativeSrc": "6935:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6935:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6970:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6973:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6973:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6963:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6963:6:1"
																			},
																			"nativeSrc": "6963:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:15:1"
																		},
																		"nativeSrc": "6963:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6861:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6861:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6864:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6864:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6858:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6858:2:1"
																},
																"nativeSrc": "6858:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6858:10:1"
															},
															"nativeSrc": "6855:133:1",
															"nodeType": "YulIf",
															"src": "6855:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6772:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6803:1:1",
														"nodeType": "YulTypedName",
														"src": "6803:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6806:1:1",
														"nodeType": "YulTypedName",
														"src": "6806:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6812:3:1",
														"nodeType": "YulTypedName",
														"src": "6812:3:1",
														"type": ""
													}
												],
												"src": "6772:222:1"
											},
											{
												"body": {
													"nativeSrc": "7202:293:1",
													"nodeType": "YulBlock",
													"src": "7202:293:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7219:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7219:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7234:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7234:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7250:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7250:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7255:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7255:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7246:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7246:3:1"
																						},
																						"nativeSrc": "7246:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7246:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7259:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7259:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7242:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7242:3:1"
																				},
																				"nativeSrc": "7242:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7242:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:1"
																		},
																		"nativeSrc": "7230:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:1"
																},
																"nativeSrc": "7212:51:1",
																"nodeType": "YulFunctionCall",
																"src": "7212:51:1"
															},
															"nativeSrc": "7212:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "7212:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7283:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7283:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7294:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7279:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:1"
																		},
																		"nativeSrc": "7279:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7303:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7303:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7319:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7319:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7324:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7324:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7315:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7315:3:1"
																						},
																						"nativeSrc": "7315:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7315:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7328:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7328:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7311:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7311:3:1"
																				},
																				"nativeSrc": "7311:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7311:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7299:3:1"
																		},
																		"nativeSrc": "7299:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7299:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:1"
																},
																"nativeSrc": "7272:60:1",
																"nodeType": "YulFunctionCall",
																"src": "7272:60:1"
															},
															"nativeSrc": "7272:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "7272:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7352:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7363:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7348:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:1"
																		},
																		"nativeSrc": "7348:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7368:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7368:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:1"
																},
																"nativeSrc": "7341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7341:34:1"
															},
															"nativeSrc": "7341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7341:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7395:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7406:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7406:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7391:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:1"
																		},
																		"nativeSrc": "7391:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7391:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7411:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7384:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:1"
																},
																"nativeSrc": "7384:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7384:31:1"
															},
															"nativeSrc": "7384:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7384:31:1"
														},
														{
															"nativeSrc": "7424:65:1",
															"nodeType": "YulAssignment",
															"src": "7424:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7461:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7461:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7473:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7473:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7484:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7484:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7469:3:1"
																		},
																		"nativeSrc": "7469:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7469:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "7432:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "7432:28:1"
																},
																"nativeSrc": "7432:57:1",
																"nodeType": "YulFunctionCall",
																"src": "7432:57:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7424:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7424:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6999:496:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:1",
														"nodeType": "YulTypedName",
														"src": "7147:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7158:6:1",
														"nodeType": "YulTypedName",
														"src": "7158:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7166:6:1",
														"nodeType": "YulTypedName",
														"src": "7166:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7174:6:1",
														"nodeType": "YulTypedName",
														"src": "7174:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7182:6:1",
														"nodeType": "YulTypedName",
														"src": "7182:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7193:4:1",
														"nodeType": "YulTypedName",
														"src": "7193:4:1",
														"type": ""
													}
												],
												"src": "6999:496:1"
											},
											{
												"body": {
													"nativeSrc": "7580:169:1",
													"nodeType": "YulBlock",
													"src": "7580:169:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7626:16:1",
																"nodeType": "YulBlock",
																"src": "7626:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7635:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7635:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7638:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7638:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7628:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7628:6:1"
																			},
																			"nativeSrc": "7628:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7628:12:1"
																		},
																		"nativeSrc": "7628:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7628:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7601:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7601:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7610:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7610:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7597:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:1"
																		},
																		"nativeSrc": "7597:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7597:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7622:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7622:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7593:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7593:3:1"
																},
																"nativeSrc": "7593:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7593:32:1"
															},
															"nativeSrc": "7590:52:1",
															"nodeType": "YulIf",
															"src": "7590:52:1"
														},
														{
															"nativeSrc": "7651:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7651:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7670:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7670:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7664:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7664:5:1"
																},
																"nativeSrc": "7664:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7664:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7655:5:1",
																	"nodeType": "YulTypedName",
																	"src": "7655:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7713:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7713:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "7689:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "7689:23:1"
																},
																"nativeSrc": "7689:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7689:30:1"
															},
															"nativeSrc": "7689:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7689:30:1"
														},
														{
															"nativeSrc": "7728:15:1",
															"nodeType": "YulAssignment",
															"src": "7728:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "7738:5:1",
																"nodeType": "YulIdentifier",
																"src": "7738:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7728:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7728:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "7500:249:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7546:9:1",
														"nodeType": "YulTypedName",
														"src": "7546:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7557:7:1",
														"nodeType": "YulTypedName",
														"src": "7557:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7569:6:1",
														"nodeType": "YulTypedName",
														"src": "7569:6:1",
														"type": ""
													}
												],
												"src": "7500:249:1"
											},
											{
												"body": {
													"nativeSrc": "7810:65:1",
													"nodeType": "YulBlock",
													"src": "7810:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7827:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7827:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "7830:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7830:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7820:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:1"
																},
																"nativeSrc": "7820:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7820:14:1"
															},
															"nativeSrc": "7820:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "7820:14:1"
														},
														{
															"nativeSrc": "7843:26:1",
															"nodeType": "YulAssignment",
															"src": "7843:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7861:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7861:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7864:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7864:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7851:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7851:9:1"
																},
																"nativeSrc": "7851:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7851:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7843:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7843:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "7754:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7793:3:1",
														"nodeType": "YulTypedName",
														"src": "7793:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7801:4:1",
														"nodeType": "YulTypedName",
														"src": "7801:4:1",
														"type": ""
													}
												],
												"src": "7754:121:1"
											},
											{
												"body": {
													"nativeSrc": "7961:437:1",
													"nodeType": "YulBlock",
													"src": "7961:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7994:398:1",
																"nodeType": "YulBlock",
																"src": "7994:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8015:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "8018:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8018:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8008:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8008:6:1"
																			},
																			"nativeSrc": "8008:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8008:16:1"
																		},
																		"nativeSrc": "8008:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8008:16:1"
																	},
																	{
																		"nativeSrc": "8037:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8037:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8059:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8059:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8062:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8062:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "8049:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:1"
																			},
																			"nativeSrc": "8049:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8049:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "8041:4:1",
																				"nodeType": "YulTypedName",
																				"src": "8041:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8080:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8080:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8103:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8103:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8113:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8113:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "8120:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "8120:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8132:2:1",
																									"nodeType": "YulLiteral",
																									"src": "8132:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8116:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8116:3:1"
																							},
																							"nativeSrc": "8116:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8116:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8109:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8109:3:1"
																					},
																					"nativeSrc": "8109:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8109:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8099:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8099:3:1"
																			},
																			"nativeSrc": "8099:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8099:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8084:11:1",
																				"nodeType": "YulTypedName",
																				"src": "8084:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8174:23:1",
																			"nodeType": "YulBlock",
																			"src": "8174:23:1",
																			"statements": [
																				{
																					"nativeSrc": "8176:19:1",
																					"nodeType": "YulAssignment",
																					"src": "8176:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "8191:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8191:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8176:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "8176:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8156:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "8156:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8168:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8168:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8153:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8153:2:1"
																			},
																			"nativeSrc": "8153:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8153:20:1"
																		},
																		"nativeSrc": "8150:47:1",
																		"nodeType": "YulIf",
																		"src": "8150:47:1"
																	},
																	{
																		"nativeSrc": "8210:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8210:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "8224:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8224:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8234:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8234:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8241:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8241:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8246:2:1",
																									"nodeType": "YulLiteral",
																									"src": "8246:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8237:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8237:3:1"
																							},
																							"nativeSrc": "8237:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8237:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "8230:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8230:3:1"
																					},
																					"nativeSrc": "8230:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8230:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8220:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:1"
																			},
																			"nativeSrc": "8220:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "8214:2:1",
																				"nodeType": "YulTypedName",
																				"src": "8214:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8264:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8264:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "8277:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "8277:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "8268:5:1",
																				"nodeType": "YulTypedName",
																				"src": "8268:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8362:20:1",
																			"nodeType": "YulBlock",
																			"src": "8362:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8371:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "8371:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8378:1:1",
																								"nodeType": "YulLiteral",
																								"src": "8378:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "8364:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8364:6:1"
																						},
																						"nativeSrc": "8364:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8364:16:1"
																					},
																					"nativeSrc": "8364:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8364:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8312:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8312:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8319:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8319:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8309:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8309:2:1"
																			},
																			"nativeSrc": "8309:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8309:13:1"
																		},
																		"nativeSrc": "8301:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "8323:26:1",
																			"nodeType": "YulBlock",
																			"src": "8323:26:1",
																			"statements": [
																				{
																					"nativeSrc": "8325:22:1",
																					"nodeType": "YulAssignment",
																					"src": "8325:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "8338:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "8338:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8345:1:1",
																								"nodeType": "YulLiteral",
																								"src": "8345:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8334:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8334:3:1"
																						},
																						"nativeSrc": "8334:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8334:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "8325:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8325:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "8305:3:1",
																			"nodeType": "YulBlock",
																			"src": "8305:3:1",
																			"statements": []
																		},
																		"src": "8301:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7977:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7977:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7982:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7982:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7974:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7974:2:1"
																},
																"nativeSrc": "7974:11:1",
																"nodeType": "YulFunctionCall",
																"src": "7974:11:1"
															},
															"nativeSrc": "7971:421:1",
															"nodeType": "YulIf",
															"src": "7971:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "7880:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7933:5:1",
														"nodeType": "YulTypedName",
														"src": "7933:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7940:3:1",
														"nodeType": "YulTypedName",
														"src": "7940:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7945:10:1",
														"nodeType": "YulTypedName",
														"src": "7945:10:1",
														"type": ""
													}
												],
												"src": "7880:518:1"
											},
											{
												"body": {
													"nativeSrc": "8488:81:1",
													"nodeType": "YulBlock",
													"src": "8488:81:1",
													"statements": [
														{
															"nativeSrc": "8498:65:1",
															"nodeType": "YulAssignment",
															"src": "8498:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8513:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8513:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8531:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8531:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "8534:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "8534:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "8527:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8527:3:1"
																								},
																								"nativeSrc": "8527:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8527:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8544:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8544:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "8540:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8540:3:1"
																								},
																								"nativeSrc": "8540:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8540:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "8523:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8523:3:1"
																						},
																						"nativeSrc": "8523:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8523:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8519:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8519:3:1"
																				},
																				"nativeSrc": "8519:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8519:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8509:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:1"
																		},
																		"nativeSrc": "8509:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8509:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8555:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8555:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8558:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8558:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8551:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:1"
																		},
																		"nativeSrc": "8551:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8551:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8506:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8506:2:1"
																},
																"nativeSrc": "8506:57:1",
																"nodeType": "YulFunctionCall",
																"src": "8506:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8498:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8498:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8403:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8465:4:1",
														"nodeType": "YulTypedName",
														"src": "8465:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8471:3:1",
														"nodeType": "YulTypedName",
														"src": "8471:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8479:4:1",
														"nodeType": "YulTypedName",
														"src": "8479:4:1",
														"type": ""
													}
												],
												"src": "8403:166:1"
											},
											{
												"body": {
													"nativeSrc": "8670:1203:1",
													"nodeType": "YulBlock",
													"src": "8670:1203:1",
													"statements": [
														{
															"nativeSrc": "8680:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8680:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8700:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8700:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8694:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8694:5:1"
																},
																"nativeSrc": "8694:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8694:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8684:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8684:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8747:22:1",
																"nodeType": "YulBlock",
																"src": "8747:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8749:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8749:16:1"
																			},
																			"nativeSrc": "8749:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8749:18:1"
																		},
																		"nativeSrc": "8749:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8749:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8719:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8719:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8727:18:1",
																		"nodeType": "YulLiteral",
																		"src": "8727:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8716:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8716:2:1"
																},
																"nativeSrc": "8716:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8716:30:1"
															},
															"nativeSrc": "8713:56:1",
															"nodeType": "YulIf",
															"src": "8713:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8822:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8822:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "8860:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8860:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "8854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8854:5:1"
																				},
																				"nativeSrc": "8854:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8854:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "8828:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "8828:25:1"
																		},
																		"nativeSrc": "8828:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8868:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8868:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "8778:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8778:43:1"
																},
																"nativeSrc": "8778:97:1",
																"nodeType": "YulFunctionCall",
																"src": "8778:97:1"
															},
															"nativeSrc": "8778:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "8778:97:1"
														},
														{
															"nativeSrc": "8884:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8884:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8901:1:1",
																"nodeType": "YulLiteral",
																"src": "8901:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8888:9:1",
																	"nodeType": "YulTypedName",
																	"src": "8888:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8911:17:1",
															"nodeType": "YulAssignment",
															"src": "8911:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8924:4:1",
																"nodeType": "YulLiteral",
																"src": "8924:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8911:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "8911:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8974:642:1",
																		"nodeType": "YulBlock",
																		"src": "8974:642:1",
																		"statements": [
																			{
																				"nativeSrc": "8988:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8988:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9007:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "9007:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9019:2:1",
																									"nodeType": "YulLiteral",
																									"src": "9019:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9015:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "9015:3:1"
																							},
																							"nativeSrc": "9015:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "9015:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9003:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9003:3:1"
																					},
																					"nativeSrc": "9003:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9003:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8992:7:1",
																						"nodeType": "YulTypedName",
																						"src": "8992:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9036:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9036:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9080:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "9080:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "9050:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "9050:29:1"
																					},
																					"nativeSrc": "9050:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9050:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9040:6:1",
																						"nodeType": "YulTypedName",
																						"src": "9040:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9098:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9098:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9107:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9107:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9102:1:1",
																						"nodeType": "YulTypedName",
																						"src": "9102:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9178:165:1",
																					"nodeType": "YulBlock",
																					"src": "9178:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9203:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "9203:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9221:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "9221:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9226:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "9226:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9217:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "9217:3:1"
																												},
																												"nativeSrc": "9217:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "9217:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9211:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "9211:5:1"
																										},
																										"nativeSrc": "9211:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "9211:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9196:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "9196:6:1"
																								},
																								"nativeSrc": "9196:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9196:42:1"
																							},
																							"nativeSrc": "9196:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "9196:42:1"
																						},
																						{
																							"nativeSrc": "9255:24:1",
																							"nodeType": "YulAssignment",
																							"src": "9255:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9269:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "9269:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9277:1:1",
																										"nodeType": "YulLiteral",
																										"src": "9277:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9265:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "9265:3:1"
																								},
																								"nativeSrc": "9265:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9265:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9255:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "9255:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9296:33:1",
																							"nodeType": "YulAssignment",
																							"src": "9296:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9313:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "9313:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9324:4:1",
																										"nodeType": "YulLiteral",
																										"src": "9324:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9309:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "9309:3:1"
																								},
																								"nativeSrc": "9309:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9309:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9296:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "9296:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9132:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "9132:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9135:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "9135:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9129:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "9129:2:1"
																					},
																					"nativeSrc": "9129:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9129:14:1"
																				},
																				"nativeSrc": "9121:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9144:21:1",
																					"nodeType": "YulBlock",
																					"src": "9144:21:1",
																					"statements": [
																						{
																							"nativeSrc": "9146:17:1",
																							"nodeType": "YulAssignment",
																							"src": "9146:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9155:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "9155:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9158:4:1",
																										"nodeType": "YulLiteral",
																										"src": "9158:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9151:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "9151:3:1"
																								},
																								"nativeSrc": "9151:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9151:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9146:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "9146:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9125:3:1",
																					"nodeType": "YulBlock",
																					"src": "9125:3:1",
																					"statements": []
																				},
																				"src": "9121:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "9391:166:1",
																					"nodeType": "YulBlock",
																					"src": "9391:166:1",
																					"statements": [
																						{
																							"nativeSrc": "9409:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9409:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9436:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "9436:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9441:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "9441:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9432:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "9432:3:1"
																										},
																										"nativeSrc": "9432:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "9432:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9426:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "9426:5:1"
																								},
																								"nativeSrc": "9426:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9426:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9413:9:1",
																									"nodeType": "YulTypedName",
																									"src": "9413:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9476:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "9476:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9488:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "9488:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "9515:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "9515:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "9518:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "9518:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "9511:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "9511:3:1"
																																		},
																																		"nativeSrc": "9511:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "9511:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9527:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "9527:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "9507:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "9507:3:1"
																																},
																																"nativeSrc": "9507:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "9507:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9537:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "9537:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "9533:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "9533:3:1"
																																},
																																"nativeSrc": "9533:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "9533:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "9503:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "9503:3:1"
																														},
																														"nativeSrc": "9503:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "9503:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "9499:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "9499:3:1"
																												},
																												"nativeSrc": "9499:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "9499:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "9484:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "9484:3:1"
																										},
																										"nativeSrc": "9484:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "9484:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9469:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "9469:6:1"
																								},
																								"nativeSrc": "9469:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9469:74:1"
																							},
																							"nativeSrc": "9469:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "9469:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9362:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "9362:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9371:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "9371:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9359:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "9359:2:1"
																					},
																					"nativeSrc": "9359:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9359:19:1"
																				},
																				"nativeSrc": "9356:201:1",
																				"nodeType": "YulIf",
																				"src": "9356:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9577:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "9577:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "9591:1:1",
																											"nodeType": "YulLiteral",
																											"src": "9591:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "9594:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "9594:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "9587:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "9587:3:1"
																									},
																									"nativeSrc": "9587:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "9587:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9603:1:1",
																									"nodeType": "YulLiteral",
																									"src": "9603:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9583:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "9583:3:1"
																							},
																							"nativeSrc": "9583:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "9583:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9570:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9570:6:1"
																					},
																					"nativeSrc": "9570:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9570:36:1"
																				},
																				"nativeSrc": "9570:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9570:36:1"
																			}
																		]
																	},
																	"nativeSrc": "8967:649:1",
																	"nodeType": "YulCase",
																	"src": "8967:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8972:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8972:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9633:234:1",
																		"nodeType": "YulBlock",
																		"src": "9633:234:1",
																		"statements": [
																			{
																				"nativeSrc": "9647:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9647:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9660:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9660:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9651:5:1",
																						"nodeType": "YulTypedName",
																						"src": "9651:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9696:67:1",
																					"nodeType": "YulBlock",
																					"src": "9696:67:1",
																					"statements": [
																						{
																							"nativeSrc": "9714:35:1",
																							"nodeType": "YulAssignment",
																							"src": "9714:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9733:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "9733:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9738:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "9738:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9729:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "9729:3:1"
																										},
																										"nativeSrc": "9729:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "9729:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9723:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "9723:5:1"
																								},
																								"nativeSrc": "9723:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "9723:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9714:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "9714:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9677:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9677:6:1"
																				},
																				"nativeSrc": "9674:89:1",
																				"nodeType": "YulIf",
																				"src": "9674:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9783:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "9783:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9842:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "9842:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9849:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "9849:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9789:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "9789:52:1"
																							},
																							"nativeSrc": "9789:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "9789:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9776:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9776:6:1"
																					},
																					"nativeSrc": "9776:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9776:81:1"
																				},
																				"nativeSrc": "9776:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9776:81:1"
																			}
																		]
																	},
																	"nativeSrc": "9625:242:1",
																	"nodeType": "YulCase",
																	"src": "9625:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8947:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8947:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8955:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8944:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8944:2:1"
																},
																"nativeSrc": "8944:14:1",
																"nodeType": "YulFunctionCall",
																"src": "8944:14:1"
															},
															"nativeSrc": "8937:930:1",
															"nodeType": "YulSwitch",
															"src": "8937:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8574:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8655:4:1",
														"nodeType": "YulTypedName",
														"src": "8655:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8661:3:1",
														"nodeType": "YulTypedName",
														"src": "8661:3:1",
														"type": ""
													}
												],
												"src": "8574:1299:1"
											},
											{
												"body": {
													"nativeSrc": "10007:145:1",
													"nodeType": "YulBlock",
													"src": "10007:145:1",
													"statements": [
														{
															"nativeSrc": "10017:26:1",
															"nodeType": "YulAssignment",
															"src": "10017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10040:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10025:3:1"
																},
																"nativeSrc": "10025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10059:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10059:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10074:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10074:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10090:3:1",
																								"nodeType": "YulLiteral",
																								"src": "10090:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10095:1:1",
																								"nodeType": "YulLiteral",
																								"src": "10095:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10086:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10086:3:1"
																						},
																						"nativeSrc": "10086:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10086:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10099:1:1",
																						"nodeType": "YulLiteral",
																						"src": "10099:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10082:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10082:3:1"
																				},
																				"nativeSrc": "10082:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10082:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10070:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10070:3:1"
																		},
																		"nativeSrc": "10070:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10070:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10052:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:1"
																},
																"nativeSrc": "10052:51:1",
																"nodeType": "YulFunctionCall",
																"src": "10052:51:1"
															},
															"nativeSrc": "10052:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "10052:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10123:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10134:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10134:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10119:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10119:3:1"
																		},
																		"nativeSrc": "10119:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10119:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10139:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10139:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10112:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10112:6:1"
																},
																"nativeSrc": "10112:34:1",
																"nodeType": "YulFunctionCall",
																"src": "10112:34:1"
															},
															"nativeSrc": "10112:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "10112:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9878:274:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9968:9:1",
														"nodeType": "YulTypedName",
														"src": "9968:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9979:6:1",
														"nodeType": "YulTypedName",
														"src": "9979:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9987:6:1",
														"nodeType": "YulTypedName",
														"src": "9987:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9998:4:1",
														"nodeType": "YulTypedName",
														"src": "9998:4:1",
														"type": ""
													}
												],
												"src": "9878:274:1"
											},
											{
												"body": {
													"nativeSrc": "10189:95:1",
													"nodeType": "YulBlock",
													"src": "10189:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10206:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10206:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10213:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10213:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10218:10:1",
																				"nodeType": "YulLiteral",
																				"src": "10218:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10209:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:1"
																		},
																		"nativeSrc": "10209:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10199:6:1"
																},
																"nativeSrc": "10199:31:1",
																"nodeType": "YulFunctionCall",
																"src": "10199:31:1"
															},
															"nativeSrc": "10199:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "10199:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10246:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10249:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10249:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:1"
																},
																"nativeSrc": "10239:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10239:15:1"
															},
															"nativeSrc": "10239:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10239:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10270:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10270:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10273:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10273:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10263:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10263:6:1"
																},
																"nativeSrc": "10263:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10263:15:1"
															},
															"nativeSrc": "10263:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10263:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10157:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10157:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x84C4BD4B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x1BD PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x25F JUMPI POP PUSH2 0x25F DUP3 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2FE DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25F JUMP JUMPDEST PUSH2 0x326 DUP3 DUP3 CALLER PUSH2 0x64E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x364 DUP4 DUP4 CALLER PUSH2 0x65B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x440 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F DUP3 PUSH2 0x616 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH2 0x326 CALLER DUP4 DUP4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x3B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x60 PUSH2 0x462 DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A7 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x50E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x51F JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x551 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x539 SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP5 PUSH2 0x911 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x59E DUP5 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x5A8 DUP2 DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x25F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x25F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH2 0x3D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA32 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x687 JUMPI PUSH2 0x687 DUP2 DUP5 DUP7 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6C1 JUMPI PUSH2 0x6A2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x82D SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x867 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x864 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8CE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x899 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x91C DUP3 PUSH2 0x616 JUMP JUMPDEST POP PUSH0 PUSH2 0x932 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH2 0x95A DUP5 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96B SWAP3 SWAP2 SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH0 PUSH2 0x9B7 DUP4 DUP4 PUSH0 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9FA DUP3 DUP3 PUSH2 0x1169 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA46 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB07 JUMPI PUSH0 PUSH2 0xA55 DUP5 PUSH2 0x616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA81 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA94 JUMPI POP PUSH2 0xA92 DUP2 DUP5 PUSH2 0x562 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB05 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB41 DUP4 DUP4 DUP4 PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x3D2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBA6 DUP4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBEF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xBF9 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55A JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC63 JUMPI POP PUSH2 0xC63 DUP5 DUP5 PUSH2 0x562 JUMP JUMPDEST DUP1 PUSH2 0x55A JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCC9 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCF5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD13 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD2B JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD3F JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD51 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x25F JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD77 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x97B DUP2 PUSH2 0xD62 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x97B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD95 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE02 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE21 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE4A DUP5 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH2 0xE58 PUSH1 0x20 DUP6 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x97B DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE9C DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xEBB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF18 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0xF2F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF62 DUP6 PUSH2 0xDEC JUMP JUMPDEST SWAP4 POP PUSH2 0xF70 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF92 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD7 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH2 0xFE5 PUSH1 0x20 DUP5 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1008 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1023 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1033 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1042 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x55A PUSH2 0x10A9 DUP4 DUP7 PUSH2 0x1084 JUMP JUMPDEST DUP5 PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1100 SWAP1 DUP4 ADD DUP5 PUSH2 0xD95 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x97B DUP2 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3D2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x114A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1156 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1183 JUMPI PUSH2 0x1183 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x1197 DUP2 PUSH2 0x1191 DUP5 SLOAD PUSH2 0x104C JUMP JUMPDEST DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11C9 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x11B2 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x90A JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11F8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x11D8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1215 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 SWAP2 0xA9 0xB6 0xD5 SWAP1 0xFC 0x2D 0xC8 PUSH28 0x61BD11829F84838429F2F91EB3288EF26113BBF37A1664736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "56027:447:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54819:207;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;54819:207:0;;;;;;;;37589:89;;;:::i;:::-;;;;;;;:::i;38721:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:32:1;;;1510:51;;1498:2;1483:18;38721:154:0;1364:203:1;38547:113:0;;;;;;:::i;:::-;;:::i;:::-;;39367:578;;;;;;:::i;:::-;;:::i;40011:132::-;;;;;;:::i;:::-;;:::i;37409:118::-;;;;;;:::i;:::-;;:::i;37144:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2771:25:1;;;2759:2;2744:18;37144:208:0;2625:177:1;56073:30:0;;;;;;37742:93;;;:::i;38942:144::-;;;;;;:::i;:::-;;:::i;40209:208::-;;;;;;:::i;:::-;;:::i;55092:593::-;;;;;;:::i;:::-;;:::i;39152:153::-;;;;;;:::i;:::-;;:::i;56186:286::-;;;;;;:::i;:::-;;:::i;54819:207::-;54921:4;-1:-1:-1;;;;;;54944:35:0;;-1:-1:-1;;;54944:35:0;;:75;;;54983:36;55007:11;54983:23;:36::i;:::-;54937:82;54819:207;-1:-1:-1;;54819:207:0:o;37589:89::-;37634:13;37666:5;37659:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37589:89;:::o;38721:154::-;38788:7;38807:22;38821:7;38807:13;:22::i;:::-;-1:-1:-1;41232:7:0;41258:24;;;:15;:24;;;;;;-1:-1:-1;;;;;41258:24:0;38847:21;41162:127;38547:113;38618:35;38627:2;38631:7;8413:10;38618:8;:35::i;:::-;38547:113;;:::o;39367:578::-;-1:-1:-1;;;;;39461:16:0;;39457:87;;39500:33;;-1:-1:-1;;;39500:33:0;;39530:1;39500:33;;;1510:51:1;1483:18;;39500:33:0;;;;;;;;39457:87;39762:21;39786:34;39794:2;39798:7;8413:10;39786:7;:34::i;:::-;39762:58;;39851:4;-1:-1:-1;;;;;39834:21:0;:13;-1:-1:-1;;;;;39834:21:0;;39830:109;;39878:50;;-1:-1:-1;;;39878:50:0;;-1:-1:-1;;;;;6127:32:1;;;39878:50:0;;;6109:51:1;6176:18;;;6169:34;;;6239:32;;6219:18;;;6212:60;6082:18;;39878:50:0;5907:371:1;39830:109:0;39447:498;39367:578;;;:::o;40011:132::-;40097:39;40114:4;40120:2;40124:7;40097:39;;;;;;;;;;;;:16;:39::i;:::-;40011:132;;;:::o;37409:118::-;37472:7;37498:22;37512:7;37498:13;:22::i;37144:208::-;37207:7;-1:-1:-1;;;;;37230:19:0;;37226:87;;37272:30;;-1:-1:-1;;;37272:30:0;;37299:1;37272:30;;;1510:51:1;1483:18;;37272:30:0;1364:203:1;37226:87:0;-1:-1:-1;;;;;;37329:16:0;;;;;:9;:16;;;;;;;37144:208::o;37742:93::-;37789:13;37821:7;37814:14;;;;;:::i;38942:144::-;39027:52;8413:10;39060:8;39070;39027:18;:52::i;40209:208::-;40322:31;40335:4;40341:2;40345:7;40322:12;:31::i;:::-;40363:47;40386:4;40392:2;40396:7;40405:4;40363:22;:47::i;55092:593::-;55165:13;55190:22;55204:7;55190:13;:22::i;:::-;-1:-1:-1;55223:23:0;55249:19;;;:10;:19;;;;;55223:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55278:18;55299:10;38474:9;;;;;;;;;-1:-1:-1;38474:9:0;;;38398:92;55299:10;55278:31;;55388:4;55382:18;55404:1;55382:23;55378:70;;-1:-1:-1;55428:9:0;55092:593;-1:-1:-1;;55092:593:0:o;55378:70::-;55547:23;;:27;55543:95;;55611:4;55617:9;55597:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;55590:37;;;;55092:593;;;:::o;55543:95::-;55655:23;55670:7;55655:14;:23::i;:::-;55648:30;55092:593;-1:-1:-1;;;;55092:593:0:o;39152:153::-;-1:-1:-1;;;;;39263:25:0;;;39240:4;39263:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;39152:153::o;56186:286::-;56319:15;;56278:7;;56344:25;56350:9;56319:15;56344:5;:25::i;:::-;56379:31;56392:7;56401:8;56379:12;:31::i;:::-;56439:1;56420:15;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;56458:7:0;;56186:286;-1:-1:-1;;;;56186:286:0:o;36785:300::-;36887:4;-1:-1:-1;;;;;;36922:40:0;;-1:-1:-1;;;36922:40:0;;:104;;-1:-1:-1;;;;;;;36978:48:0;;-1:-1:-1;;;36978:48:0;36922:104;:156;;;-1:-1:-1;;;;;;;;;;28964:40:0;;;37042:36;28865:146;51362:241;51425:7;41023:16;;;:7;:16;;;;;;-1:-1:-1;;;;;41023:16:0;;51487:88;;51533:31;;-1:-1:-1;;;51533:31:0;;;;;2771:25:1;;;2744:18;;51533:31:0;2625:177:1;49642:120:0;49722:33;49731:2;49735:7;49744:4;49750;49722:8;:33::i;44062:795::-;44148:7;41023:16;;;:7;:16;;;;;;-1:-1:-1;;;;;41023:16:0;;;;44259:18;;;44255:86;;44293:37;44310:4;44316;44322:7;44293:16;:37::i;:::-;-1:-1:-1;;;;;44385:18:0;;;44381:256;;44501:48;44518:1;44522:7;44539:1;44543:5;44501:8;:48::i;:::-;-1:-1:-1;;;;;44592:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;44592:20:0;;;44381:256;-1:-1:-1;;;;;44651:16:0;;;44647:107;;-1:-1:-1;;;;;44711:13:0;;;;;;:9;:13;;;;;:18;;44728:1;44711:18;;;44647:107;44764:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;44764:21:0;-1:-1:-1;;;;;44764:21:0;;;;;;;;;44801:27;;44764:16;;44801:27;;;;;;;44846:4;44062:795;-1:-1:-1;;;;44062:795:0:o;50815:312::-;-1:-1:-1;;;;;50922:22:0;;50918:91;;50967:31;;-1:-1:-1;;;50967:31:0;;-1:-1:-1;;;;;1528:32:1;;50967:31:0;;;1510:51:1;1483:18;;50967:31:0;1364:203:1;50918:91:0;-1:-1:-1;;;;;51018:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;51018:46:0;;;;;;;;;;51079:41;;540::1;;;51079::0;;513:18:1;51079:41:0;;;;;;;50815:312;;;:::o;52142:782::-;-1:-1:-1;;;;;52258:14:0;;;:18;52254:664;;52296:71;;-1:-1:-1;;;52296:71:0;;-1:-1:-1;;;;;52296:36:0;;;;;:71;;8413:10;;52347:4;;52353:7;;52362:4;;52296:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52296:71:0;;;;;;;;-1:-1:-1;;52296:71:0;;;;;;;;;;;;:::i;:::-;;;52292:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52605:6;:13;52622:1;52605:18;52601:293;;52654:25;;-1:-1:-1;;;52654:25:0;;-1:-1:-1;;;;;1528:32:1;;52654:25:0;;;1510:51:1;1483:18;;52654:25:0;1364:203:1;52601:293:0;52846:6;52840:13;52831:6;52827:2;52823:15;52816:38;52292:616;-1:-1:-1;;;;;;52414:51:0;;-1:-1:-1;;;52414:51:0;52410:130;;52496:25;;-1:-1:-1;;;52496:25:0;;-1:-1:-1;;;;;1528:32:1;;52496:25:0;;;1510:51:1;1483:18;;52496:25:0;1364:203:1;52410:130:0;52368:186;52142:782;;;;:::o;37901:255::-;37965:13;37990:22;38004:7;37990:13;:22::i;:::-;;38023:21;38047:10;38474:9;;;;;;;;;-1:-1:-1;38474:9:0;;;38398:92;38047:10;38023:34;;38098:1;38080:7;38074:21;:25;:75;;;;;;;;;;;;;;;;;38116:7;38125:18;:7;:16;:18::i;:::-;38102:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;38074:75;38067:82;37901:255;-1:-1:-1;;;37901:255:0:o;45179:327::-;-1:-1:-1;;;;;45246:16:0;;45242:87;;45285:33;;-1:-1:-1;;;45285:33:0;;45315:1;45285:33;;;1510:51:1;1483:18;;45285:33:0;1364:203:1;45242:87:0;45338:21;45362:32;45370:2;45374:7;45391:1;45362:7;:32::i;:::-;45338:56;-1:-1:-1;;;;;;45408:27:0;;;45404:96;;45458:31;;-1:-1:-1;;;45458:31:0;;45486:1;45458:31;;;1510:51:1;1483:18;;45458:31:0;1364:203:1;55804:167:0;55895:19;;;;:10;:19;;;;;:31;55917:9;55895:19;:31;:::i;:::-;-1:-1:-1;55941:23:0;;2771:25:1;;;55941:23:0;;2759:2:1;2744:18;55941:23:0;;;;;;;55804:167;;:::o;49944:662::-;50104:9;:31;;;-1:-1:-1;;;;;;50117:18:0;;;;50104:31;50100:460;;;50151:13;50167:22;50181:7;50167:13;:22::i;:::-;50151:38;-1:-1:-1;;;;;;50317:18:0;;;;;;:35;;;50348:4;-1:-1:-1;;;;;50339:13:0;:5;-1:-1:-1;;;;;50339:13:0;;;50317:35;:69;;;;;50357:29;50374:5;50381:4;50357:16;:29::i;:::-;50356:30;50317:69;50313:142;;;50413:27;;-1:-1:-1;;;50413:27:0;;-1:-1:-1;;;;;1528:32:1;;50413:27:0;;;1510:51:1;1483:18;;50413:27:0;1364:203:1;50313:142:0;50473:9;50469:81;;;50527:7;50523:2;-1:-1:-1;;;;;50507:28:0;50516:5;-1:-1:-1;;;;;50507:28:0;;;;;;;;;;;50469:81;50137:423;50100:460;-1:-1:-1;;50570:24:0;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;50570:29:0;-1:-1:-1;;;;;50570:29:0;;;;;;;;;;49944:662::o;42306:368::-;42418:38;42432:5;42439:7;42448;42418:13;:38::i;:::-;42413:255;;-1:-1:-1;;;;;42476:19:0;;42472:186;;42522:31;;-1:-1:-1;;;42522:31:0;;;;;2771:25:1;;;2744:18;;42522:31:0;2625:177:1;42472:186:0;42599:44;;-1:-1:-1;;;42599:44:0;;-1:-1:-1;;;;;10070:32:1;;42599:44:0;;;10052:51:1;10119:18;;;10112:34;;;10025:18;;42599:44:0;9878:274:1;25646:698:0;25702:13;25751:14;25768:17;25779:5;25768:10;:17::i;:::-;25788:1;25768:21;25751:38;;25803:20;25837:6;25826:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25826:18:0;-1:-1:-1;25803:41:0;-1:-1:-1;25964:28:0;;;25980:2;25964:28;26019:282;-1:-1:-1;;26050:5:0;-1:-1:-1;;;26184:2:0;26173:14;;26168:32;26050:5;26155:46;26245:2;26236:11;;;-1:-1:-1;26265:21:0;26019:282;26265:21;-1:-1:-1;26321:6:0;25646:698;-1:-1:-1;;;25646:698:0:o;41600:272::-;41703:4;-1:-1:-1;;;;;41738:21:0;;;;;;:127;;;41785:7;-1:-1:-1;;;;;41776:16:0;:5;-1:-1:-1;;;;;41776:16:0;;:52;;;;41796:32;41813:5;41820:7;41796:16;:32::i;:::-;41776:88;;;-1:-1:-1;;41232:7:0;41258:24;;;:15;:24;;;;;;-1:-1:-1;;;;;41258:24:0;;;41832:32;;;;41719:146;-1:-1:-1;41600:272:0:o;20878:916::-;20931:7;;-1:-1:-1;;;21006:17:0;;21002:103;;-1:-1:-1;;;21043:17:0;;;-1:-1:-1;21088:2:0;21078:12;21002:103;21131:8;21122:5;:17;21118:103;;21168:8;21159:17;;;-1:-1:-1;21204:2:0;21194:12;21118:103;21247:8;21238:5;:17;21234:103;;21284:8;21275:17;;;-1:-1:-1;21320:2:0;21310:12;21234:103;21363:7;21354:5;:16;21350:100;;21399:7;21390:16;;;-1:-1:-1;21434:1:0;21424:11;21350:100;21476:7;21467:5;:16;21463:100;;21512:7;21503:16;;;-1:-1:-1;21547:1:0;21537:11;21463:100;21589:7;21580:5;:16;21576:100;;21625:7;21616:16;;;-1:-1:-1;21660:1:0;21650:11;21576:100;21702:7;21693:5;:16;21689:66;;21739:1;21729:11;21781:6;20878:916;-1:-1:-1;;20878:916:0:o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:226::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1306:23:1;;1133:226;-1:-1:-1;1133:226:1:o;1572:173::-;1640:20;;-1:-1:-1;;;;;1689:31:1;;1679:42;;1669:70;;1735:1;1732;1725:12;1669:70;1572:173;;;:::o;1750:300::-;1818:6;1826;1879:2;1867:9;1858:7;1854:23;1850:32;1847:52;;;1895:1;1892;1885:12;1847:52;1918:29;1937:9;1918:29;:::i;:::-;1908:39;2016:2;2001:18;;;;1988:32;;-1:-1:-1;;;1750:300:1:o;2055:374::-;2132:6;2140;2148;2201:2;2189:9;2180:7;2176:23;2172:32;2169:52;;;2217:1;2214;2207:12;2169:52;2240:29;2259:9;2240:29;:::i;:::-;2230:39;;2288:38;2322:2;2311:9;2307:18;2288:38;:::i;:::-;2055:374;;2278:48;;-1:-1:-1;;;2395:2:1;2380:18;;;;2367:32;;2055:374::o;2434:186::-;2493:6;2546:2;2534:9;2525:7;2521:23;2517:32;2514:52;;;2562:1;2559;2552:12;2514:52;2585:29;2604:9;2585:29;:::i;2807:347::-;2872:6;2880;2933:2;2921:9;2912:7;2908:23;2904:32;2901:52;;;2949:1;2946;2939:12;2901:52;2972:29;2991:9;2972:29;:::i;:::-;2962:39;;3051:2;3040:9;3036:18;3023:32;3098:5;3091:13;3084:21;3077:5;3074:32;3064:60;;3120:1;3117;3110:12;3064:60;3143:5;3133:15;;;2807:347;;;;;:::o;3159:127::-;3220:10;3215:3;3211:20;3208:1;3201:31;3251:4;3248:1;3241:15;3275:4;3272:1;3265:15;3291:715;3355:5;3387:1;3411:18;3403:6;3400:30;3397:56;;;3433:18;;:::i;:::-;-1:-1:-1;3588:2:1;3582:9;-1:-1:-1;;3501:2:1;3480:15;;3476:29;;3646:2;3634:15;3630:29;3618:42;;3711:22;;;3690:18;3675:34;;3672:62;3669:88;;;3737:18;;:::i;:::-;3773:2;3766:22;3821;;;3806:6;-1:-1:-1;3806:6:1;3858:16;;;3855:25;-1:-1:-1;3852:45:1;;;3893:1;3890;3883:12;3852:45;3943:6;3938:3;3931:4;3923:6;3919:17;3906:44;3998:1;3991:4;3982:6;3974;3970:19;3966:30;3959:41;;3291:715;;;;;:::o;4011:712::-;4106:6;4114;4122;4130;4183:3;4171:9;4162:7;4158:23;4154:33;4151:53;;;4200:1;4197;4190:12;4151:53;4223:29;4242:9;4223:29;:::i;:::-;4213:39;;4271:38;4305:2;4294:9;4290:18;4271:38;:::i;:::-;4261:48;-1:-1:-1;4378:2:1;4363:18;;4350:32;;-1:-1:-1;4457:2:1;4442:18;;4429:32;4484:18;4473:30;;4470:50;;;4516:1;4513;4506:12;4470:50;4539:22;;4592:4;4584:13;;4580:27;-1:-1:-1;4570:55:1;;4621:1;4618;4611:12;4570:55;4644:73;4709:7;4704:2;4691:16;4686:2;4682;4678:11;4644:73;:::i;:::-;4634:83;;;4011:712;;;;;;;:::o;4728:260::-;4796:6;4804;4857:2;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4896:29;4915:9;4896:29;:::i;:::-;4886:39;;4944:38;4978:2;4967:9;4963:18;4944:38;:::i;:::-;4934:48;;4728:260;;;;;:::o;4993:524::-;5071:6;5079;5132:2;5120:9;5111:7;5107:23;5103:32;5100:52;;;5148:1;5145;5138:12;5100:52;5171:29;5190:9;5171:29;:::i;:::-;5161:39;;5251:2;5240:9;5236:18;5223:32;5278:18;5270:6;5267:30;5264:50;;;5310:1;5307;5300:12;5264:50;5333:22;;5386:4;5378:13;;5374:27;-1:-1:-1;5364:55:1;;5415:1;5412;5405:12;5364:55;5438:73;5503:7;5498:2;5485:16;5480:2;5476;5472:11;5438:73;:::i;:::-;5428:83;;;4993:524;;;;;:::o;5522:380::-;5601:1;5597:12;;;;5644;;;5665:61;;5719:4;5711:6;5707:17;5697:27;;5665:61;5772:2;5764:6;5761:14;5741:18;5738:38;5735:161;;5818:10;5813:3;5809:20;5806:1;5799:31;5853:4;5850:1;5843:15;5881:4;5878:1;5871:15;5735:161;;5522:380;;;:::o;6283:212::-;6325:3;6363:5;6357:12;6407:6;6400:4;6393:5;6389:16;6384:3;6378:36;6469:1;6433:16;;6458:13;;;-1:-1:-1;6433:16:1;;6283:212;-1:-1:-1;6283:212:1:o;6500:267::-;6679:3;6704:57;6730:30;6756:3;6748:6;6730:30;:::i;:::-;6722:6;6704:57;:::i;6772:222::-;6837:9;;;6858:10;;;6855:133;;;6910:10;6905:3;6901:20;6898:1;6891:31;6945:4;6942:1;6935:15;6973:4;6970:1;6963:15;6999:496;-1:-1:-1;;;;;7230:32:1;;;7212:51;;7299:32;;7294:2;7279:18;;7272:60;7363:2;7348:18;;7341:34;;;7411:3;7406:2;7391:18;;7384:31;;;-1:-1:-1;;7432:57:1;;7469:19;;7461:6;7432:57;:::i;:::-;7424:65;6999:496;-1:-1:-1;;;;;;6999:496:1:o;7500:249::-;7569:6;7622:2;7610:9;7601:7;7597:23;7593:32;7590:52;;;7638:1;7635;7628:12;7590:52;7670:9;7664:16;7689:30;7713:5;7689:30;:::i;7880:518::-;7982:2;7977:3;7974:11;7971:421;;;8018:5;8015:1;8008:16;8062:4;8059:1;8049:18;8132:2;8120:10;8116:19;8113:1;8109:27;8103:4;8099:38;8168:4;8156:10;8153:20;8150:47;;;-1:-1:-1;8191:4:1;8150:47;8246:2;8241:3;8237:12;8234:1;8230:20;8224:4;8220:31;8210:41;;8301:81;8319:2;8312:5;8309:13;8301:81;;;8378:1;8364:16;;8345:1;8334:13;8301:81;;8574:1299;8700:3;8694:10;8727:18;8719:6;8716:30;8713:56;;;8749:18;;:::i;:::-;8778:97;8868:6;8828:38;8860:4;8854:11;8828:38;:::i;:::-;8822:4;8778:97;:::i;:::-;8924:4;8955:2;8944:14;;8972:1;8967:649;;;;9660:1;9677:6;9674:89;;;-1:-1:-1;9729:19:1;;;9723:26;9674:89;-1:-1:-1;;8531:1:1;8527:11;;;8523:24;8519:29;8509:40;8555:1;8551:11;;;8506:57;9776:81;;8937:930;;8967:649;7827:1;7820:14;;;7864:4;7851:18;;-1:-1:-1;;9003:20:1;;;9121:222;9135:7;9132:1;9129:14;9121:222;;;9217:19;;;9211:26;9196:42;;9324:4;9309:20;;;;9277:1;9265:14;;;;9151:12;9121:222;;;9125:3;9371:6;9362:7;9359:19;9356:201;;;9432:19;;;9426:26;-1:-1:-1;;9515:1:1;9511:14;;;9527:3;9507:24;9503:37;9499:42;9484:58;9469:74;;9356:201;-1:-1:-1;;;;9603:1:1;9587:14;;;9583:22;9570:36;;-1:-1:-1;8574:1299:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "939600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_tokenIdCounter()": "2339",
								"approve(address,uint256)": "31464",
								"balanceOf(address)": "2608",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFT(address,string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26745",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56110,
									"end": 56180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "111E5B985B5A58C8139195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "AA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "PUSH",
									"source": 0,
									"value": "44796E616D6963204E465420457468657265756D205365706F6C696100000000"
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36679,
									"end": 36684,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 36671,
									"end": 36684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 36671,
									"end": 36684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36694,
									"end": 36701,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36694,
									"end": 36711,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 36704,
									"end": 36711,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36694,
									"end": 36701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36694,
									"end": 36711,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 36694,
									"end": 36711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36694,
									"end": 36711,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 36694,
									"end": 36711,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36694,
									"end": 36711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36605,
									"end": 36718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56027,
									"end": 56474,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209091a9b6d590fc2dc87b61bd11829f84838429f2f91eb3288ef26113bbf37a1664736f6c634300081a0033",
									".code": [
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "EACABE14"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "84C4BD4B"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56027,
											"end": 56474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 54819,
											"end": 55026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 54819,
											"end": 55026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 37589,
											"end": 37678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37589,
											"end": 37678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38721,
											"end": 38875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38721,
											"end": 38875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 38547,
											"end": 38660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38547,
											"end": 38660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39367,
											"end": 39945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39367,
											"end": 39945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 40011,
											"end": 40143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40011,
											"end": 40143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37409,
											"end": 37527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37409,
											"end": 37527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 37144,
											"end": 37352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37144,
											"end": 37352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2625,
											"end": 2802,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56073,
											"end": 56103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37742,
											"end": 37835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38942,
											"end": 39086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38942,
											"end": 39086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 40209,
											"end": 40417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40209,
											"end": 40417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 55092,
											"end": 55685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55092,
											"end": 55685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 39152,
											"end": 39305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 39152,
											"end": 39305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 56186,
											"end": 56472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 56186,
											"end": 56472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54921,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54944,
											"end": 54979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54944,
											"end": 54979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24832483"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54944,
											"end": 54979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54944,
											"end": 54979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54944,
											"end": 55019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 54944,
											"end": 55019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54944,
											"end": 55019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54983,
											"end": 55019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 55007,
											"end": 55018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54983,
											"end": 55006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 54983,
											"end": 55019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54983,
											"end": 55019,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 54983,
											"end": 55019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54937,
											"end": 55019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 55026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54819,
											"end": 55026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37634,
											"end": 37647,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37666,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37659,
											"end": 37671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37659,
											"end": 37671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37659,
											"end": 37671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37589,
											"end": 37678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38721,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38788,
											"end": 38795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38807,
											"end": 38829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 38821,
											"end": 38828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 38820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38807,
											"end": 38829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38807,
											"end": 38829,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 38807,
											"end": 38829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41232,
											"end": 41239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38847,
											"end": 38868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 41162,
											"end": 41289,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38618,
											"end": 38653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 38627,
											"end": 38629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38631,
											"end": 38638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38618,
											"end": 38626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 38618,
											"end": 38653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38618,
											"end": 38653,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 38618,
											"end": 38653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38547,
											"end": 38660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39461,
											"end": 39477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39461,
											"end": 39477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39457,
											"end": 39544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 39457,
											"end": 39544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39530,
											"end": 39531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39457,
											"end": 39544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 39457,
											"end": 39544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39762,
											"end": 39783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39786,
											"end": 39820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39794,
											"end": 39796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39798,
											"end": 39805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39786,
											"end": 39793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 39786,
											"end": 39820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39786,
											"end": 39820,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39786,
											"end": 39820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39762,
											"end": 39820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39762,
											"end": 39820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39851,
											"end": 39855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39834,
											"end": 39855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39834,
											"end": 39847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39834,
											"end": 39855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39834,
											"end": 39855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 39830,
											"end": 39939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6127,
											"end": 6159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6159,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6109,
											"end": 6160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39878,
											"end": 39928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5907,
											"end": 6278,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39830,
											"end": 39939,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 39830,
											"end": 39939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39447,
											"end": 39945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39367,
											"end": 39945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 40114,
											"end": 40118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40120,
											"end": 40122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40124,
											"end": 40131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40097,
											"end": 40136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 40097,
											"end": 40136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40011,
											"end": 40143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 37409,
											"end": 37527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37472,
											"end": 37479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37498,
											"end": 37520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 37512,
											"end": 37519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37498,
											"end": 37511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37498,
											"end": 37520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37144,
											"end": 37352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37230,
											"end": 37249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37230,
											"end": 37249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37226,
											"end": 37313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37226,
											"end": 37313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37299,
											"end": 37300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37272,
											"end": 37302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37226,
											"end": 37313,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37226,
											"end": 37313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37338,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37329,
											"end": 37345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37144,
											"end": 37352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37742,
											"end": 37835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37789,
											"end": 37802,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37821,
											"end": 37828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37814,
											"end": 37828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37814,
											"end": 37828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38942,
											"end": 39086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39027,
											"end": 39079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39060,
											"end": 39068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39070,
											"end": 39078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39027,
											"end": 39045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 39027,
											"end": 39079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40209,
											"end": 40417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40322,
											"end": 40353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40335,
											"end": 40339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40341,
											"end": 40343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40345,
											"end": 40352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40322,
											"end": 40334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 40322,
											"end": 40353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40322,
											"end": 40353,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40322,
											"end": 40353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40363,
											"end": 40410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 40386,
											"end": 40390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40392,
											"end": 40394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40396,
											"end": 40403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40363,
											"end": 40385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40363,
											"end": 40410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55165,
											"end": 55178,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55190,
											"end": 55212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 55204,
											"end": 55211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55190,
											"end": 55203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 55190,
											"end": 55212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55190,
											"end": 55212,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 55190,
											"end": 55212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55223,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55259,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 55223,
											"end": 55268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 55223,
											"end": 55268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55223,
											"end": 55268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55299,
											"end": 55309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38398,
											"end": 38490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55299,
											"end": 55309,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 55299,
											"end": 55309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55388,
											"end": 55392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55382,
											"end": 55400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55404,
											"end": 55405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55382,
											"end": 55405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55378,
											"end": 55448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55378,
											"end": 55448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55428,
											"end": 55437,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55092,
											"end": 55685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55378,
											"end": 55448,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55378,
											"end": 55448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55547,
											"end": 55574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55543,
											"end": 55638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 55543,
											"end": 55638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55611,
											"end": 55615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55617,
											"end": 55626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 55597,
											"end": 55627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55597,
											"end": 55627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55590,
											"end": 55627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55590,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55590,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55590,
											"end": 55627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55543,
											"end": 55638,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 55543,
											"end": 55638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 55670,
											"end": 55677,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 55655,
											"end": 55678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55678,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 55655,
											"end": 55678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55648,
											"end": 55678,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55685,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55092,
											"end": 55685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 39152,
											"end": 39305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39240,
											"end": 39244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39281,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39263,
											"end": 39298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39152,
											"end": 39305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56334,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56319,
											"end": 56334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56278,
											"end": 56285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56278,
											"end": 56285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56344,
											"end": 56369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 56350,
											"end": 56359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56344,
											"end": 56349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 56344,
											"end": 56369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56344,
											"end": 56369,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 56344,
											"end": 56369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 56392,
											"end": 56399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56401,
											"end": 56409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 56379,
											"end": 56410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56379,
											"end": 56410,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 56379,
											"end": 56410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56439,
											"end": 56440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56420,
											"end": 56435,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56420,
											"end": 56435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 56420,
											"end": 56440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56420,
											"end": 56440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56465,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56186,
											"end": 56472,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56186,
											"end": 56472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36785,
											"end": 37085,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 36785,
											"end": 37085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36887,
											"end": 36891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36922,
											"end": 36962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 36962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36922,
											"end": 36962,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 36962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 37026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36922,
											"end": 37026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 36978,
											"end": 37026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36978,
											"end": 37026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36978,
											"end": 37026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 37026,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36922,
											"end": 37026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 37078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36922,
											"end": 37078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 36922,
											"end": 37078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28964,
											"end": 29004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28964,
											"end": 29004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28964,
											"end": 29004,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37042,
											"end": 37078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28865,
											"end": 29011,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51603,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 51362,
											"end": 51603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51425,
											"end": 51432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51487,
											"end": 51575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 51487,
											"end": 51575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51533,
											"end": 51564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2625,
											"end": 2802,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49642,
											"end": 49762,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 49642,
											"end": 49762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49722,
											"end": 49755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 49731,
											"end": 49733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49735,
											"end": 49742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49744,
											"end": 49748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49750,
											"end": 49754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49722,
											"end": 49730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49722,
											"end": 49755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44062,
											"end": 44857,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 44062,
											"end": 44857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44148,
											"end": 44155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44255,
											"end": 44341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 44255,
											"end": 44341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 44310,
											"end": 44314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44316,
											"end": 44320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44322,
											"end": 44329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 44293,
											"end": 44330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44330,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 44293,
											"end": 44330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44385,
											"end": 44403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44381,
											"end": 44637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 44381,
											"end": 44637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44501,
											"end": 44549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 44518,
											"end": 44519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44522,
											"end": 44529,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44539,
											"end": 44540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44543,
											"end": 44548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44501,
											"end": 44509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 44501,
											"end": 44549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44501,
											"end": 44549,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 44501,
											"end": 44549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44601,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44592,
											"end": 44612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44592,
											"end": 44612,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44381,
											"end": 44637,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 44381,
											"end": 44637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44651,
											"end": 44667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44651,
											"end": 44667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44647,
											"end": 44754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 44647,
											"end": 44754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44720,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44724,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44728,
											"end": 44729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44711,
											"end": 44729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44729,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44647,
											"end": 44754,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 44647,
											"end": 44754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44771,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44764,
											"end": 44780,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44801,
											"end": 44828,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44846,
											"end": 44850,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44062,
											"end": 44857,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44062,
											"end": 44857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50815,
											"end": 51127,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 50815,
											"end": 51127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50922,
											"end": 50944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50922,
											"end": 50944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50918,
											"end": 51009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 50918,
											"end": 51009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50967,
											"end": 50998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50918,
											"end": 51009,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 50918,
											"end": 51009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51036,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51018,
											"end": 51064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51079,
											"end": 51120,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 50815,
											"end": 51127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50815,
											"end": 51127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50815,
											"end": 51127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50815,
											"end": 51127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52258,
											"end": 52272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52258,
											"end": 52272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52258,
											"end": 52272,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 52258,
											"end": 52276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52254,
											"end": 52918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 52254,
											"end": 52918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52296,
											"end": 52332,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52332,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 52296,
											"end": 52332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52347,
											"end": 52351,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52347,
											"end": 52351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52353,
											"end": 52360,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52353,
											"end": 52360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52362,
											"end": 52366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52362,
											"end": 52366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 52296,
											"end": 52367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 52296,
											"end": 52367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 52296,
											"end": 52367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52622,
											"end": 52623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52605,
											"end": 52623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52601,
											"end": 52894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52601,
											"end": 52894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52654,
											"end": 52679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52601,
											"end": 52894,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52601,
											"end": 52894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52846,
											"end": 52852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52831,
											"end": 52837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52827,
											"end": 52829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52823,
											"end": 52838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52816,
											"end": 52854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 52292,
											"end": 52908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52414,
											"end": 52465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52414,
											"end": 52465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52410,
											"end": 52540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52410,
											"end": 52540,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52410,
											"end": 52540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52368,
											"end": 52554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52142,
											"end": 52924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37901,
											"end": 38156,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37901,
											"end": 38156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37965,
											"end": 37978,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37990,
											"end": 38012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 38004,
											"end": 38011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37990,
											"end": 38012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38012,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 37990,
											"end": 38012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38047,
											"end": 38057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38474,
											"end": 38483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38398,
											"end": 38490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38047,
											"end": 38057,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 38047,
											"end": 38057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38098,
											"end": 38099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38080,
											"end": 38087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38099,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38116,
											"end": 38123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38125,
											"end": 38132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38125,
											"end": 38143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38125,
											"end": 38143,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38125,
											"end": 38143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 38102,
											"end": 38144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38102,
											"end": 38144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38074,
											"end": 38149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38067,
											"end": 38149,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37901,
											"end": 38156,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37901,
											"end": 38156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45506,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 45179,
											"end": 45506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45246,
											"end": 45262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45246,
											"end": 45262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45242,
											"end": 45329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 45242,
											"end": 45329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45315,
											"end": 45316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45285,
											"end": 45318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45242,
											"end": 45329,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 45242,
											"end": 45329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45338,
											"end": 45359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 45370,
											"end": 45372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45374,
											"end": 45381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45391,
											"end": 45392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 45362,
											"end": 45394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45394,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 45362,
											"end": 45394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45338,
											"end": 45394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45408,
											"end": 45435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45404,
											"end": 45500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 45404,
											"end": 45500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45486,
											"end": 45487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45458,
											"end": 45489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55804,
											"end": 55971,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 55804,
											"end": 55971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55905,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 55917,
											"end": 55926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 55895,
											"end": 55926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55926,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 55895,
											"end": 55926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "PUSH",
											"source": 0,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55941,
											"end": 55964,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 55804,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55804,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55804,
											"end": 55971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49944,
											"end": 50606,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49944,
											"end": 50606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50104,
											"end": 50113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50104,
											"end": 50135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50104,
											"end": 50135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 50104,
											"end": 50135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50117,
											"end": 50135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50135,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50135,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50104,
											"end": 50135,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 50104,
											"end": 50135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50100,
											"end": 50560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50100,
											"end": 50560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 50100,
											"end": 50560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50151,
											"end": 50164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50167,
											"end": 50189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 50181,
											"end": 50188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50167,
											"end": 50180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 50167,
											"end": 50189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50167,
											"end": 50189,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 50167,
											"end": 50189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50151,
											"end": 50189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 50317,
											"end": 50352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50348,
											"end": 50352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50339,
											"end": 50352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50339,
											"end": 50344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50339,
											"end": 50352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50339,
											"end": 50352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50339,
											"end": 50352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50352,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 50317,
											"end": 50352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50357,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 50374,
											"end": 50379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50381,
											"end": 50385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50357,
											"end": 50373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 50357,
											"end": 50386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50357,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 50357,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50356,
											"end": 50386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 50317,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50313,
											"end": 50455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50313,
											"end": 50455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 50313,
											"end": 50455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50413,
											"end": 50440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50313,
											"end": 50455,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 50313,
											"end": 50455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50473,
											"end": 50482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50469,
											"end": 50550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50469,
											"end": 50550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 50469,
											"end": 50550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50527,
											"end": 50534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50523,
											"end": 50525,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50516,
											"end": 50521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50535,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 50469,
											"end": 50550,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 50469,
											"end": 50550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50137,
											"end": 50560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50100,
											"end": 50560,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 50100,
											"end": 50560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50570,
											"end": 50599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49944,
											"end": 50606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42306,
											"end": 42674,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42306,
											"end": 42674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42432,
											"end": 42437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42439,
											"end": 42446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42448,
											"end": 42455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42418,
											"end": 42456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42456,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42418,
											"end": 42456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42413,
											"end": 42668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42413,
											"end": 42668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42476,
											"end": 42495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42476,
											"end": 42495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42472,
											"end": 42658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42472,
											"end": 42658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42522,
											"end": 42553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2625,
											"end": 2802,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42472,
											"end": 42658,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42472,
											"end": 42658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10070,
											"end": 10102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10043,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10025,
											"end": 10043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42599,
											"end": 42643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9878,
											"end": 10152,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25646,
											"end": 26344,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 25646,
											"end": 26344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25751,
											"end": 25765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25768,
											"end": 25785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 25779,
											"end": 25784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25768,
											"end": 25778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 25768,
											"end": 25785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25768,
											"end": 25785,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 25768,
											"end": 25785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25788,
											"end": 25789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25768,
											"end": 25789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25751,
											"end": 25789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25751,
											"end": 25789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25837,
											"end": 25843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 25826,
											"end": 25844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25803,
											"end": 25844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25964,
											"end": 25992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 25982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25964,
											"end": 25992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26019,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 26019,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26050,
											"end": 26055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26184,
											"end": 26186,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26173,
											"end": 26187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26173,
											"end": 26187,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 26168,
											"end": 26200,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 26050,
											"end": 26055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26155,
											"end": 26201,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 26245,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26236,
											"end": 26247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26247,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26265,
											"end": 26286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26019,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 26265,
											"end": 26286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26321,
											"end": 26327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25646,
											"end": 26344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25646,
											"end": 26344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41600,
											"end": 41872,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 41600,
											"end": 41872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41703,
											"end": 41707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 41738,
											"end": 41865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41738,
											"end": 41865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41785,
											"end": 41792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41776,
											"end": 41792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41776,
											"end": 41792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41792,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 41776,
											"end": 41828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41796,
											"end": 41828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 41813,
											"end": 41818,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41820,
											"end": 41827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41796,
											"end": 41812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 41796,
											"end": 41828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41796,
											"end": 41828,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 41796,
											"end": 41828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41776,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 41776,
											"end": 41864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41232,
											"end": 41239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41258,
											"end": 41282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41832,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41832,
											"end": 41864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41832,
											"end": 41864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41832,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41719,
											"end": 41865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41600,
											"end": 41872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 21794,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 20878,
											"end": 21794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20931,
											"end": 20938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21006,
											"end": 21023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21006,
											"end": 21023,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21002,
											"end": 21105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21043,
											"end": 21060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21060,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21088,
											"end": 21090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21078,
											"end": 21090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21105,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21002,
											"end": 21105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21139,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21122,
											"end": 21127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21122,
											"end": 21139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21118,
											"end": 21221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21118,
											"end": 21221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21168,
											"end": 21176,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21159,
											"end": 21176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21159,
											"end": 21176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21194,
											"end": 21206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21118,
											"end": 21221,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21118,
											"end": 21221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21247,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21238,
											"end": 21243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21238,
											"end": 21255,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21234,
											"end": 21337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 21292,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21275,
											"end": 21292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21275,
											"end": 21292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21275,
											"end": 21292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21320,
											"end": 21322,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21310,
											"end": 21322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21337,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21234,
											"end": 21337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21370,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21370,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21350,
											"end": 21450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 21350,
											"end": 21450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 21390,
											"end": 21406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21406,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21434,
											"end": 21435,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21424,
											"end": 21435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21350,
											"end": 21450,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 21350,
											"end": 21450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21483,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 21467,
											"end": 21472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21463,
											"end": 21563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21512,
											"end": 21519,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 21503,
											"end": 21519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21503,
											"end": 21519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21503,
											"end": 21519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21547,
											"end": 21548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21537,
											"end": 21548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21563,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 21463,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21589,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21580,
											"end": 21585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21580,
											"end": 21596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21576,
											"end": 21676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21625,
											"end": 21632,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 21616,
											"end": 21632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21616,
											"end": 21632,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21616,
											"end": 21632,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21660,
											"end": 21661,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21650,
											"end": 21661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21676,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 21576,
											"end": 21676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21709,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 21693,
											"end": 21698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21693,
											"end": 21709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21689,
											"end": 21755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21689,
											"end": 21755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21739,
											"end": 21740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21729,
											"end": 21740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 21794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20878,
											"end": 21794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1133,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1572,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1669,
											"end": 1739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1739,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1669,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 2050,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1750,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1918,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2020,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2055,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2240,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2269,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2288,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2288,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2429,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2395,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2399,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2434,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2549,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2585,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2936,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2972,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2972,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3064,
											"end": 3124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3064,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3159,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3215,
											"end": 3218,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3211,
											"end": 3231,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3255,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3397,
											"end": 3453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3433,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 3503,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3648,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3634,
											"end": 3649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3709,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3669,
											"end": 3757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3737,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3852,
											"end": 3897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 3852,
											"end": 3897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 3852,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3950,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 4006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4171,
											"end": 4180,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4169,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4187,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4204,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4151,
											"end": 4204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4204,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 4151,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4242,
											"end": 4251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4223,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4252,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4271,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 4271,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4429,
											"end": 4461,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4473,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4561,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4584,
											"end": 4597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4607,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4570,
											"end": 4625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4625,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 4570,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4682,
											"end": 4684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4644,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4717,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4644,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4896,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4944,
											"end": 4982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5118,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5135,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5150,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5171,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5200,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 5171,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5240,
											"end": 5249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5255,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5297,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5314,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5264,
											"end": 5314,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5314,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5264,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5378,
											"end": 5391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5401,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5364,
											"end": 5419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5364,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5501,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5476,
											"end": 5478,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5438,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5511,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5438,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5902,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5522,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5602,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5665,
											"end": 5726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5726,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5665,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5735,
											"end": 5896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5828,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5813,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 5858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5885,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5896,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5735,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6283,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6398,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6767,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6500,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 6682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6730,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6756,
											"end": 6759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6730,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6760,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6730,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6704,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6994,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6772,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6855,
											"end": 6988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6901,
											"end": 6921,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6949,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6935,
											"end": 6950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7495,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6999,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7331,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7272,
											"end": 7332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7432,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7432,
											"end": 7489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7432,
											"end": 7489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7489,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7432,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7489,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7495,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6999,
											"end": 7495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7749,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7500,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7610,
											"end": 7619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 7620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7625,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7590,
											"end": 7642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7642,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7590,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7713,
											"end": 7718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7689,
											"end": 7719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 8398,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7880,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7984,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8392,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7971,
											"end": 8392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8134,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8109,
											"end": 8136,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8156,
											"end": 8166,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8173,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8150,
											"end": 8197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8150,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8150,
											"end": 8197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8191,
											"end": 8195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8150,
											"end": 8197,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8150,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8248,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8241,
											"end": 8244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8230,
											"end": 8250,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8322,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8380,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8334,
											"end": 8347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8301,
											"end": 8382,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8574,
											"end": 9873,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8574,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8700,
											"end": 8703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8719,
											"end": 8725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8746,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 8713,
											"end": 8769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 8749,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 8865,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8828,
											"end": 8866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8866,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8828,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8778,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8875,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8778,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8955,
											"end": 8957,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8944,
											"end": 8958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9677,
											"end": 9683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 9674,
											"end": 9763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9729,
											"end": 9748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9729,
											"end": 9748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9749,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9763,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 9674,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8527,
											"end": 8538,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8538,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8523,
											"end": 8547,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8548,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8556,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8563,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9857,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8937,
											"end": 9867,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8967,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7834,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9143,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9236,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9237,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9238,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9329,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9265,
											"end": 9279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 9121,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9125,
											"end": 9128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 9356,
											"end": 9557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9426,
											"end": 9452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9515,
											"end": 9516,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9527,
											"end": 9530,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 9507,
											"end": 9531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9540,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9542,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9469,
											"end": 9543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9469,
											"end": 9543,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9557,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 9356,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9587,
											"end": 9601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9601,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8574,
											"end": 9873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"DynamicNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_tokenIdCounter()": "84c4bd4b",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFT(address,string)": "eacabe14",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_tokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"DynamicNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1783,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1787,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1791,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1797,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2793,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2896,
								"contract": "DynamicNFT_flattened.sol:DynamicNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1783,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1787,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1791,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1797,
								"contract": "DynamicNFT_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1779,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1783,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1787,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1791,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1797,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2793,
								"contract": "DynamicNFT_flattened.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DynamicNFT_flattened.sol\":8867:23781  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DynamicNFT_flattened.sol\":8867:23781  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220247a31cfb5f9435626b55596aa5f9f344cd6c519ce120539c671eb47928e721c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220247a31cfb5f9435626b55596aa5f9f344cd6c519ce120539c671eb47928e721c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PUSH27 0x31CFB5F9435626B55596AA5F9F344CD6C519CE120539C671EB4792 DUP15 PUSH19 0x1C64736F6C634300081A003300000000000000 ",
							"sourceMap": "8867:14914:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;8867:14914:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220247a31cfb5f9435626b55596aa5f9f344cd6c519ce120539c671eb47928e721c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PUSH27 0x31CFB5F9435626B55596AA5F9F344CD6C519CE120539C671EB4792 DUP15 PUSH19 0x1C64736F6C634300081A003300000000000000 ",
							"sourceMap": "8867:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8867,
									"end": 23781,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220247a31cfb5f9435626b55596aa5f9f344cd6c519ce120539c671eb47928e721c64736f6c634300081a0033",
									".code": [
										{
											"begin": 8867,
											"end": 23781,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 23781,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DynamicNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DynamicNFT_flattened.sol\":24027:25074  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DynamicNFT_flattened.sol\":24027:25074  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220714229fec4a4368465750a5656ae0e7d532cd6e96c063dfb27d7d3d95b30706d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220714229fec4a4368465750a5656ae0e7d532cd6e96c063dfb27d7d3d95b30706d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4229FEC4A4368465750A5656AE0E7D532CD6 0xE9 PUSH13 0x63DFB27D7D3D95B30706D6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "24027:1047:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;24027:1047:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220714229fec4a4368465750a5656ae0e7d532cd6e96c063dfb27d7d3d95b30706d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4229FEC4A4368465750A5656AE0E7D532CD6 0xE9 PUSH13 0x63DFB27D7D3D95B30706D6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "24027:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24027,
									"end": 25074,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220714229fec4a4368465750a5656ae0e7d532cd6e96c063dfb27d7d3d95b30706d64736f6c634300081a0033",
									".code": [
										{
											"begin": 24027,
											"end": 25074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24027,
											"end": 25074,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DynamicNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DynamicNFT_flattened.sol\":25260:28107  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DynamicNFT_flattened.sol\":25260:28107  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ef5386e0bba1a1a0e96dc3e3477aa46e0d9dd06cf0cfe8680831a9d25ed24d5664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ef5386e0bba1a1a0e96dc3e3477aa46e0d9dd06cf0cfe8680831a9d25ed24d5664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF MSTORE8 DUP7 0xE0 0xBB LOG1 LOG1 LOG0 0xE9 PUSH14 0xC3E3477AA46E0D9DD06CF0CFE868 ADDMOD BALANCE 0xA9 0xD2 MCOPY 0xD2 0x4D JUMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "25260:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;25260:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ef5386e0bba1a1a0e96dc3e3477aa46e0d9dd06cf0cfe8680831a9d25ed24d5664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF MSTORE8 DUP7 0xE0 0xBB LOG1 LOG1 LOG0 0xE9 PUSH14 0xC3E3477AA46E0D9DD06CF0CFE868 ADDMOD BALANCE 0xA9 0xD2 MCOPY 0xD2 0x4D JUMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "25260:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25260,
									"end": 28107,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef5386e0bba1a1a0e96dc3e3477aa46e0d9dd06cf0cfe8680831a9d25ed24d5664736f6c634300081a0033",
									".code": [
										{
											"begin": 25260,
											"end": 28107,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 28107,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DynamicNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DynamicNFT_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DynamicNFT_flattened.sol\":{\"keccak256\":\"0x8881fbec13d8b406d8242a59d53cca68a795c4489f4ff1a7f4b3b719691e04ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ec49e553e52d782bb10217306c0cdf01de0fb06bdc759bbfd2d3f6db77a83e\",\"dweb:/ipfs/QmWtmA6TpxVoLDYtHA7dUkh2djimawU8FUWo7ooYGEkepw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"DynamicNFT_flattened.sol": {
				"ast": {
					"absolutePath": "DynamicNFT_flattened.sol",
					"exportedSymbols": {
						"Context": [
							196
						],
						"DynamicNFT": [
							2935
						],
						"ERC165": [
							1624
						],
						"ERC721": [
							2753
						],
						"ERC721URIStorage": [
							2891
						],
						"IERC1155Errors": [
							1760
						],
						"IERC165": [
							11
						],
						"IERC20Errors": [
							1665
						],
						"IERC4906": [
							2774
						],
						"IERC721": [
							125
						],
						"IERC721Errors": [
							1713
						],
						"IERC721Metadata": [
							167
						],
						"IERC721Receiver": [
							142
						],
						"Math": [
							1249
						],
						"SignedMath": [
							1353
						],
						"Strings": [
							1603
						]
					},
					"id": 2936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "182:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "208:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "498:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "512:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "866:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "891:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "884:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "927:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:6:0"
									},
									"scope": 11,
									"src": "857:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2936,
							"src": "488:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1072:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1188:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1188:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1188:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1099:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								11
							],
							"name": "IERC721",
							"nameLocation": "1177:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1202:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 24,
									"name": "Transfer",
									"nameLocation": "1301:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1326:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1310:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1348:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1332:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1352:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:67:0"
									},
									"src": "1295:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1383:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 33,
									"name": "Approval",
									"nameLocation": "1488:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1497:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1536:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1520:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1546:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:74:0"
									},
									"src": "1482:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1577:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1705:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1720:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1759:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1743:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1774:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1769:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:64:0"
									},
									"src": "1699:85:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1790:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1880:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1898:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:15:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:17:0"
									},
									"scope": 125,
									"src": "1871:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1951:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2096:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:17:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2144:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:0"
									},
									"scope": 125,
									"src": "2087:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2165:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2744:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2783:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2775:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2795:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2787:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2819:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2804:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:64:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2833:0:0"
									},
									"scope": 125,
									"src": "2735:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2840:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3559:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3598:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3590:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3575:43:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3627:0:0"
									},
									"scope": 125,
									"src": "3550:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3634:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4380:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4401:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4393:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4415:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4407:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4392:43:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4444:0:0"
									},
									"scope": 125,
									"src": "4371:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4451:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4917:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4933:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4925:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4962:0:0"
									},
									"scope": 125,
									"src": "4908:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4969:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5298:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5324:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5316:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:33:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5357:0:0"
									},
									"scope": 125,
									"src": "5289:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5364:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5517:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5528:17:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5569:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5568:18:0"
									},
									"scope": 125,
									"src": "5508:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "5593:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5745:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5777:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:33:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5818:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5817:6:0"
									},
									"scope": 125,
									"src": "5736:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2936,
							"src": "1167:4659:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "5979:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "6005:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC721Receiver",
							"nameLocation": "6168:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "6190:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "6704:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6738:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6730:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6764:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6756:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6803:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6803:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6720:108:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6847:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 138,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6846:8:0"
									},
									"scope": 142,
									"src": "6695:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2936,
							"src": "6158:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7032:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 145,
										"name": "IERC721",
										"nameLocations": [
											"7222:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "7222:7:0"
									},
									"id": 146,
									"nodeType": "InheritanceSpecifier",
									"src": "7222:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "7059:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								125,
								11
							],
							"name": "IERC721Metadata",
							"nameLocation": "7203:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "7236:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7308:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "7338:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7337:15:0"
									},
									"scope": 167,
									"src": "7299:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "7359:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7433:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7439:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "7465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:15:0"
									},
									"scope": 167,
									"src": "7424:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "7486:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7590:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7598:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7639:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7639:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7638:15:0"
									},
									"scope": 167,
									"src": "7581:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2936,
							"src": "7193:463:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7779:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "7805:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "Context",
							"nameLocation": "8320:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "8396:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 174,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8413:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8417:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8413:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 173,
												"id": 176,
												"nodeType": "Return",
												"src": "8406:17:0"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "8343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8353:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "8387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8386:9:0"
									},
									"scope": 196,
									"src": "8334:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "8503:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 183,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8520:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8524:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "8520:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 182,
												"id": 185,
												"nodeType": "Return",
												"src": "8513:15:0"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "8445:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8453:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "8487:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8486:16:0"
									},
									"scope": 196,
									"src": "8436:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "8613:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8630:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 191,
												"id": 193,
												"nodeType": "Return",
												"src": "8623:8:0"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "8550:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8570:2:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "8604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8603:9:0"
									},
									"scope": 196,
									"src": "8541:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2936,
							"src": "8302:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8767:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "8793:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249
							],
							"name": "Math",
							"nameLocation": "8875:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "8886:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 201,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8947:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8967:2:0"
									},
									"src": "8941:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 206,
									"members": [
										{
											"id": 202,
											"name": "Floor",
											"nameLocation": "9000:5:0",
											"nodeType": "EnumValue",
											"src": "9000:5:0"
										},
										{
											"id": 203,
											"name": "Ceil",
											"nameLocation": "9043:4:0",
											"nodeType": "EnumValue",
											"src": "9043:4:0"
										},
										{
											"id": 204,
											"name": "Trunc",
											"nameLocation": "9085:5:0",
											"nodeType": "EnumValue",
											"src": "9085:5:0"
										},
										{
											"id": 205,
											"name": "Expand",
											"nameLocation": "9115:6:0",
											"nodeType": "EnumValue",
											"src": "9115:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8981:8:0",
									"nodeType": "EnumDefinition",
									"src": "8976:169:0"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "9325:140:0",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "9335:124:0",
												"statements": [
													{
														"assignments": [
															219
														],
														"declarations": [
															{
																"constant": false,
																"id": 219,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "9367:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 236,
																"src": "9359:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 223,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "9371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "9375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9359:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "9394:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "9398:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 231,
														"nodeType": "IfStatement",
														"src": "9390:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9409:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9416:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9408:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 217,
															"id": 230,
															"nodeType": "Return",
															"src": "9401:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9440:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 233,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "9446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9439:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 217,
														"id": 235,
														"nodeType": "Return",
														"src": "9432:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "9151:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "9258:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9273:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9284:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9264:22:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9310:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "9316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9309:15:0"
									},
									"scope": 1249,
									"src": "9249:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9648:113:0",
										"statements": [
											{
												"id": 264,
												"nodeType": "UncheckedBlock",
												"src": "9658:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "9686:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "9690:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9686:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 257,
														"nodeType": "IfStatement",
														"src": "9682:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9701:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9708:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 249,
															"id": 256,
															"nodeType": "Return",
															"src": "9693:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9732:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "9738:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 260,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "9742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9731:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 249,
														"id": 263,
														"nodeType": "Return",
														"src": "9724:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "9471:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "9581:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9596:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9588:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9607:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9599:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9587:22:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9632:15:0"
									},
									"scope": 1249,
									"src": "9572:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "9947:417:0",
										"statements": [
											{
												"id": 306,
												"nodeType": "UncheckedBlock",
												"src": "9957:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "10215:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 285,
														"nodeType": "IfStatement",
														"src": "10211:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10231:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10237:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10230:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 277,
															"id": 284,
															"nodeType": "Return",
															"src": "10223:16:0"
														}
													},
													{
														"assignments": [
															287
														],
														"declarations": [
															{
																"constant": false,
																"id": 287,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10261:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 306,
																"src": "10253:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10253:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 291,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "10265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "10269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10253:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "10288:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 293,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "10292:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10288:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 295,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "10297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10288:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "10284:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10308:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10315:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 277,
															"id": 300,
															"nodeType": "Return",
															"src": "10300:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10339:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 303,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "10345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 304,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10338:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 277,
														"id": 305,
														"nodeType": "Return",
														"src": "10331:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "9767:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "9880:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9895:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9906:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9886:22:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9931:15:0"
									},
									"scope": 1249,
									"src": "9871:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10551:114:0",
										"statements": [
											{
												"id": 334,
												"nodeType": "UncheckedBlock",
												"src": "10561:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10594:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10589:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 327,
														"nodeType": "IfStatement",
														"src": "10585:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10605:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10612:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 319,
															"id": 326,
															"nodeType": "Return",
															"src": "10597:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10636:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 329,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "10642:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 330,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "10646:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10642:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 332,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10635:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 319,
														"id": 333,
														"nodeType": "Return",
														"src": "10628:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "10370:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "10484:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10510:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10502:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10490:22:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10536:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10536:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10542:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10535:15:0"
									},
									"scope": 1249,
									"src": "10475:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10862:114:0",
										"statements": [
											{
												"id": 362,
												"nodeType": "UncheckedBlock",
												"src": "10872:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "10900:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10900:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 355,
														"nodeType": "IfStatement",
														"src": "10896:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10916:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10923:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10915:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 354,
															"nodeType": "Return",
															"src": "10908:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 357,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "10953:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 358,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "10957:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10953:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 360,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10946:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 347,
														"id": 361,
														"nodeType": "Return",
														"src": "10939:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "10671:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "10795:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10801:22:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10847:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10847:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10853:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10846:15:0"
									},
									"scope": 1249,
									"src": "10786:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "11113:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 374,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 375,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11134:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11130:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 378,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "11142:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11130:13:0",
													"trueExpression": {
														"id": 377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "11138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 380,
												"nodeType": "Return",
												"src": "11123:20:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "10982:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "11055:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11067:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11059:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11078:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11070:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11058:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11103:9:0"
									},
									"scope": 1249,
									"src": "11046:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "11288:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 392,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "11305:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 393,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "11309:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11305:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "11317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11305:13:0",
													"trueExpression": {
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "11313:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 398,
												"nodeType": "Return",
												"src": "11298:20:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "11156:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11230:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11242:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11234:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11253:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11245:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11233:22:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "11279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11278:9:0"
									},
									"scope": 1249,
									"src": "11221:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "11509:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "11564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 411,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "11568:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11564:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 413,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 414,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "11574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11578:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11574:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 417,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "11573:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11563:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 421,
												"nodeType": "Return",
												"src": "11556:28:0"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "11331:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "11447:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11463:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11455:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11466:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11454:22:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:9:0"
									},
									"scope": 1249,
									"src": "11438:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "11883:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "11897:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "11893:127:0",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "11905:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 436,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "12004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 437,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12004:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 432,
															"id": 439,
															"nodeType": "Return",
															"src": "11997:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 442,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "12108:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12108:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 446,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 426,
																			"src": "12122:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12126:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12122:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "12131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12121:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12135:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12121:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12108:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12117:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 455,
												"nodeType": "Return",
												"src": "12101:35:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "11597:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "11821:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11837:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11829:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11828:22:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "11874:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11873:9:0"
									},
									"scope": 1249,
									"src": "11812:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "12565:4018:0",
										"statements": [
											{
												"id": 581,
												"nodeType": "UncheckedBlock",
												"src": "12575:4002:0",
												"statements": [
													{
														"assignments": [
															470
														],
														"declarations": [
															{
																"constant": false,
																"id": 470,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "12904:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "12896:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 469,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 474,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "12912:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 472,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "12916:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12912:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12896:21:0"
													},
													{
														"assignments": [
															476
														],
														"declarations": [
															{
																"constant": false,
																"id": 476,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "12984:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "12976:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 475,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12976:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 477,
														"nodeType": "VariableDeclarationStatement",
														"src": "12976:13:0"
													},
													{
														"AST": {
															"nativeSrc": "13056:122:0",
															"nodeType": "YulBlock",
															"src": "13056:122:0",
															"statements": [
																{
																	"nativeSrc": "13074:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13074:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13091:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13091:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "13094:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13094:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13101:1:0",
																						"nodeType": "YulLiteral",
																						"src": "13101:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13097:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13097:3:0"
																				},
																				"nativeSrc": "13097:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13097:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "13084:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "13084:6:0"
																		},
																		"nativeSrc": "13084:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13084:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "13078:2:0",
																			"nodeType": "YulTypedName",
																			"src": "13078:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13121:43:0",
																	"nodeType": "YulAssignment",
																	"src": "13121:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13138:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13138:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13142:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13142:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13134:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13134:3:0"
																				},
																				"nativeSrc": "13134:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13134:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13153:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13153:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13157:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13157:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13150:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "13150:2:0"
																				},
																				"nativeSrc": "13150:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13150:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13130:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:0"
																		},
																		"nativeSrc": "13130:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13130:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "13121:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13121:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "13142:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "13157:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "13121:5:0",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "13091:1:0",
																"valueSize": 1
															},
															{
																"declaration": 462,
																"isOffset": false,
																"isSlot": false,
																"src": "13094:1:0",
																"valueSize": 1
															}
														],
														"id": 478,
														"nodeType": "InlineAssembly",
														"src": "13047:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "13259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13259:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 487,
														"nodeType": "IfStatement",
														"src": "13255:368:0",
														"trueBody": {
															"id": 486,
															"nodeType": "Block",
															"src": "13271:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 482,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "13589:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 483,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "13597:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13589:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 468,
																	"id": 485,
																	"nodeType": "Return",
																	"src": "13582:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "13729:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 489,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "13744:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13729:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 495,
														"nodeType": "IfStatement",
														"src": "13725:88:0",
														"trueBody": {
															"id": 494,
															"nodeType": "Block",
															"src": "13751:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 491,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "13776:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13776:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 493,
																	"nodeType": "RevertStatement",
																	"src": "13769:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "14076:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "14068:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 498,
														"nodeType": "VariableDeclarationStatement",
														"src": "14068:17:0"
													},
													{
														"AST": {
															"nativeSrc": "14108:291:0",
															"nodeType": "YulBlock",
															"src": "14108:291:0",
															"statements": [
																{
																	"nativeSrc": "14177:38:0",
																	"nodeType": "YulAssignment",
																	"src": "14177:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14197:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14197:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "14200:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14200:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "14203:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14203:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "14190:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "14190:6:0"
																		},
																		"nativeSrc": "14190:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14190:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "14177:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "14177:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14297:41:0",
																	"nodeType": "YulAssignment",
																	"src": "14297:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "14310:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14310:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "14320:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "14320:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "14331:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "14331:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "14317:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "14317:2:0"
																				},
																				"nativeSrc": "14317:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14317:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14306:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14306:3:0"
																		},
																		"nativeSrc": "14306:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14306:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "14297:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14297:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14355:30:0",
																	"nodeType": "YulAssignment",
																	"src": "14355:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14368:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14368:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "14375:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "14375:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14364:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14364:3:0"
																		},
																		"nativeSrc": "14364:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14364:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14355:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14355:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14203:11:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14331:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14355:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14368:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "14297:5:0",
																"valueSize": 1
															},
															{
																"declaration": 476,
																"isOffset": false,
																"isSlot": false,
																"src": "14310:5:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14177:9:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14320:9:0",
																"valueSize": 1
															},
															{
																"declaration": 497,
																"isOffset": false,
																"isSlot": false,
																"src": "14375:9:0",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "14197:1:0",
																"valueSize": 1
															},
															{
																"declaration": 462,
																"isOffset": false,
																"isSlot": false,
																"src": "14200:1:0",
																"valueSize": 1
															}
														],
														"id": 499,
														"nodeType": "InlineAssembly",
														"src": "14099:300:0"
													},
													{
														"assignments": [
															501
														],
														"declarations": [
															{
																"constant": false,
																"id": 501,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "14611:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "14603:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 508,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "14618:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14633:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 504,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "14637:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14633:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14632:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14618:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14603:46:0"
													},
													{
														"AST": {
															"nativeSrc": "14672:362:0",
															"nodeType": "YulBlock",
															"src": "14672:362:0",
															"statements": [
																{
																	"nativeSrc": "14737:37:0",
																	"nodeType": "YulAssignment",
																	"src": "14737:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "14756:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14756:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14769:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14769:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14752:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14752:3:0"
																		},
																		"nativeSrc": "14752:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14752:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "14737:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "14737:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14841:25:0",
																	"nodeType": "YulAssignment",
																	"src": "14841:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14854:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14854:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14861:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14861:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14850:3:0"
																		},
																		"nativeSrc": "14850:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14850:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14841:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14841:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14981:39:0",
																	"nodeType": "YulAssignment",
																	"src": "14981:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15001:1:0",
																								"nodeType": "YulLiteral",
																								"src": "15001:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "15004:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "15004:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "14997:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "14997:3:0"
																						},
																						"nativeSrc": "14997:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "14997:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "15011:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "15011:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "14993:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14993:3:0"
																				},
																				"nativeSrc": "14993:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14993:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15018:1:0",
																				"nodeType": "YulLiteral",
																				"src": "15018:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14989:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14989:3:0"
																		},
																		"nativeSrc": "14989:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14989:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "14981:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "14981:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14737:11:0",
																"valueSize": 1
															},
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "14756:11:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14841:5:0",
																"valueSize": 1
															},
															{
																"declaration": 470,
																"isOffset": false,
																"isSlot": false,
																"src": "14854:5:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14769:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14861:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "14981:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "15004:4:0",
																"valueSize": 1
															},
															{
																"declaration": 501,
																"isOffset": false,
																"isSlot": false,
																"src": "15011:4:0",
																"valueSize": 1
															}
														],
														"id": 509,
														"nodeType": "InlineAssembly",
														"src": "14663:371:0"
													},
													{
														"expression": {
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 510,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "15100:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 511,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "15109:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 512,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "15117:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15109:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15100:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 515,
														"nodeType": "ExpressionStatement",
														"src": "15100:21:0"
													},
													{
														"assignments": [
															517
														],
														"declarations": [
															{
																"constant": false,
																"id": 517,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "15447:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "15439:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 524,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15458:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 519,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "15462:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15458:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 521,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15457:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15457:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15439:39:0"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 525,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15706:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 527,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15710:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 528,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15724:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15710:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15706:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15695:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "15695:36:0"
													},
													{
														"expression": {
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 533,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15775:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15779:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 536,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15793:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15779:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15775:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15764:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 540,
														"nodeType": "ExpressionStatement",
														"src": "15764:36:0"
													},
													{
														"expression": {
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 541,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15845:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 543,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15849:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 544,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15863:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15849:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15845:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15834:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 548,
														"nodeType": "ExpressionStatement",
														"src": "15834:36:0"
													},
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 549,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 551,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15919:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 552,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "15933:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15919:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15915:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15904:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "15904:36:0"
													},
													{
														"expression": {
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 557,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "15974:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15985:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 559,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "15989:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 560,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "16003:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15989:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15985:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15974:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"nodeType": "ExpressionStatement",
														"src": "15974:36:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 565,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "16045:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16056:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "16060:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 568,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "16074:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16060:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16056:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16045:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "16045:36:0"
													},
													{
														"expression": {
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "16515:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 574,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "16524:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 575,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "16532:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16524:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16515:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "16515:24:0"
													},
													{
														"expression": {
															"id": 579,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "16560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 468,
														"id": 580,
														"nodeType": "Return",
														"src": "16553:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "12149:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "12476:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "12491:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12483:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "12502:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12494:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "12513:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12505:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12482:43:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "12549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:16:0"
									},
									"scope": 1249,
									"src": "12467:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "16825:192:0",
										"statements": [
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16843:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "16835:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16835:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 601,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "16859:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "16862:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 603,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "16865:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															626
														],
														"referencedDeclaration": 583,
														"src": "16852:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16852:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16835:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 607,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "16908:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$206",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$206",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 606,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "16891:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16891:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 610,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16928:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 611,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16931:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 612,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "16934:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 609,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "16921:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16921:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16921:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16891:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "16887:101:0",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "16952:36:0",
													"statements": [
														{
															"expression": {
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 617,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "16966:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16966:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"nodeType": "ExpressionStatement",
															"src": "16966:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 623,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "17004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 624,
												"nodeType": "Return",
												"src": "16997:13:0"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "16589:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "16724:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "16739:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16731:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "16750:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16742:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "16761:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16753:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16774:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "Rounding",
														"nameLocations": [
															"16774:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "16774:8:0"
													},
													"referencedDeclaration": 206,
													"src": "16774:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16730:62:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "16816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16815:9:0"
									},
									"scope": 1249,
									"src": "16715:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "17308:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "17322:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "17318:45:0",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "17330:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17351:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 633,
															"id": 638,
															"nodeType": "Return",
															"src": "17344:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18050:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "18042:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 645,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "18070:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 644,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			905,
																			940
																		],
																		"referencedDeclaration": 905,
																		"src": "18065:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18065:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18076:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18065:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18064:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18059:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18042:36:0"
											},
											{
												"id": 736,
												"nodeType": "UncheckedBlock",
												"src": "18479:408:0",
												"statements": [
													{
														"expression": {
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 652,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18503:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 653,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18513:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18522:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 655,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18526:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18522:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18513:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18512:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18537:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18512:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18503:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 662,
														"nodeType": "ExpressionStatement",
														"src": "18503:35:0"
													},
													{
														"expression": {
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 663,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 664,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18562:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18571:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 666,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18575:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18562:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18561:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18561:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18552:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"nodeType": "ExpressionStatement",
														"src": "18552:35:0"
													},
													{
														"expression": {
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 675,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18611:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 676,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18620:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 677,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18624:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18620:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18611:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18610:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18635:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18610:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18601:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 684,
														"nodeType": "ExpressionStatement",
														"src": "18601:35:0"
													},
													{
														"expression": {
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 685,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18650:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 686,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18660:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 687,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18669:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 688,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18673:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18669:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18660:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 691,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18659:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18659:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18650:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "18650:35:0"
													},
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18699:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18709:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18718:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18722:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18718:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18709:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18708:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18708:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18699:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "18699:35:0"
													},
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18758:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18767:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18771:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18767:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18758:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18757:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18757:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18748:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "18748:35:0"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "18797:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "18807:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 629,
																					"src": "18816:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "18820:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18816:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18807:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18806:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18831:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18806:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18797:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "18797:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "18857:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 731,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "18865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 732,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "18869:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18865:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 729,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "18853:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18853:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 633,
														"id": 735,
														"nodeType": "Return",
														"src": "18846:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "17023:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "17260:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17273:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "17265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17264:11:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "17299:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17298:9:0"
									},
									"scope": 1249,
									"src": "17251:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "19069:164:0",
										"statements": [
											{
												"id": 771,
												"nodeType": "UncheckedBlock",
												"src": "19079:148:0",
												"statements": [
													{
														"assignments": [
															750
														],
														"declarations": [
															{
																"constant": false,
																"id": 750,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19111:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 771,
																"src": "19103:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19103:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 754,
														"initialValue": {
															"arguments": [
																{
																	"id": 752,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "19125:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 751,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	738,
																	773
																],
																"referencedDeclaration": 738,
																"src": "19120:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19120:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19103:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "19148:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 757,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 744,
																						"src": "19175:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 756,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "19158:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19158:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 759,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 750,
																						"src": "19188:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 760,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 750,
																						"src": "19197:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19188:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 762,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 741,
																					"src": "19206:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19188:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19158:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19214:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19158:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19210:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19157:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19148:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 748,
														"id": 770,
														"nodeType": "Return",
														"src": "19141:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "18899:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19002:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19015:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19007:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19027:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19018:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "Rounding",
														"nameLocations": [
															"19018:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "19018:8:0"
													},
													"referencedDeclaration": 206,
													"src": "19018:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19006:30:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "19060:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19059:9:0"
									},
									"scope": 1249,
									"src": "18993:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "19424:922:0",
										"statements": [
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "19442:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "19434:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"hexValue": "30",
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19451:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19434:18:0"
											},
											{
												"id": 901,
												"nodeType": "UncheckedBlock",
												"src": "19462:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19490:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19499:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "19490:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19490:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "19486:99:0",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "19508:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 790,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19526:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19536:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19526:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "19526:13:0"
																},
																{
																	"expression": {
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19557:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19567:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19557:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 797,
																	"nodeType": "ExpressionStatement",
																	"src": "19557:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19611:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "19602:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19602:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 814,
														"nodeType": "IfStatement",
														"src": "19598:96:0",
														"trueBody": {
															"id": 813,
															"nodeType": "Block",
															"src": "19619:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19637:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19647:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19637:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 808,
																	"nodeType": "ExpressionStatement",
																	"src": "19637:12:0"
																},
																{
																	"expression": {
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19667:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19677:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19667:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 812,
																	"nodeType": "ExpressionStatement",
																	"src": "19667:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19711:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19720:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "19711:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19711:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "19707:96:0",
														"trueBody": {
															"id": 828,
															"nodeType": "Block",
															"src": "19728:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19746:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19756:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19746:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 823,
																	"nodeType": "ExpressionStatement",
																	"src": "19746:12:0"
																},
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 824,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19776:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19786:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19776:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "19776:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19829:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19820:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19834:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19820:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 844,
														"nodeType": "IfStatement",
														"src": "19816:96:0",
														"trueBody": {
															"id": 843,
															"nodeType": "Block",
															"src": "19837:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19855:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19865:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19855:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "19855:12:0"
																},
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 839,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19885:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19895:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19885:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "19885:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "19929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19938:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19929:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19929:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "19925:93:0",
														"trueBody": {
															"id": 858,
															"nodeType": "Block",
															"src": "19945:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 850,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "19963:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19973:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19963:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "19963:11:0"
																},
																{
																	"expression": {
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 854,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "19992:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20002:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19992:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 857,
																	"nodeType": "ExpressionStatement",
																	"src": "19992:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20035:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20044:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20035:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20035:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "20031:93:0",
														"trueBody": {
															"id": 873,
															"nodeType": "Block",
															"src": "20051:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "20069:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20079:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20069:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 868,
																	"nodeType": "ExpressionStatement",
																	"src": "20069:11:0"
																},
																{
																	"expression": {
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 869,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20098:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20108:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20098:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "20098:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20141:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20150:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20141:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20141:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 889,
														"nodeType": "IfStatement",
														"src": "20137:93:0",
														"trueBody": {
															"id": 888,
															"nodeType": "Block",
															"src": "20157:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "20175:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20185:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20175:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "20175:11:0"
																},
																{
																	"expression": {
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20204:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20214:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20204:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 887,
																	"nodeType": "ExpressionStatement",
																	"src": "20204:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "20247:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20256:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20247:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20260:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20247:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 900,
														"nodeType": "IfStatement",
														"src": "20243:64:0",
														"trueBody": {
															"id": 899,
															"nodeType": "Block",
															"src": "20263:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "20281:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20291:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20281:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 898,
																	"nodeType": "ExpressionStatement",
																	"src": "20281:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 902,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "20333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 780,
												"id": 903,
												"nodeType": "Return",
												"src": "20326:13:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "19239:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "19372:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "19377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19376:15:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "19415:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19414:9:0"
									},
									"scope": 1249,
									"src": "19363:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "20579:168:0",
										"statements": [
											{
												"id": 938,
												"nodeType": "UncheckedBlock",
												"src": "20589:152:0",
												"statements": [
													{
														"assignments": [
															917
														],
														"declarations": [
															{
																"constant": false,
																"id": 917,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "20621:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 938,
																"src": "20613:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20613:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 921,
														"initialValue": {
															"arguments": [
																{
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "20635:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 918,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	905,
																	940
																],
																"referencedDeclaration": 905,
																"src": "20630:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20630:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20613:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "20662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 924,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 911,
																						"src": "20689:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 923,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "20672:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20672:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20702:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 927,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 917,
																						"src": "20707:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20702:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 929,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "20716:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20702:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20672:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20728:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "20672:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20724:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20671:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "20662:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 915,
														"id": 937,
														"nodeType": "Return",
														"src": "20655:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "20352:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "20508:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "20537:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 909,
														"name": "Rounding",
														"nameLocations": [
															"20528:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "20528:8:0"
													},
													"referencedDeclaration": 206,
													"src": "20528:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20512:34:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20570:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20569:9:0"
									},
									"scope": 1249,
									"src": "20499:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "20940:854:0",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20958:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "20950:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"initialValue": {
													"hexValue": "30",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20967:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20950:18:0"
											},
											{
												"id": 1065,
												"nodeType": "UncheckedBlock",
												"src": "20978:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21015:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21021:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21015:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "21006:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "21002:103:0",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "21025:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 957,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21043:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21052:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21058:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "21052:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "21043:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "21043:17:0"
																},
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21088:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21078:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "21078:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21122:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21131:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21137:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21131:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "21122:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 985,
														"nodeType": "IfStatement",
														"src": "21118:103:0",
														"trueBody": {
															"id": 984,
															"nodeType": "Block",
															"src": "21141:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21159:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21168:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21174:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "21168:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "21159:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 979,
																	"nodeType": "ExpressionStatement",
																	"src": "21159:17:0"
																},
																{
																	"expression": {
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 980,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21194:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21204:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21194:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "21194:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21238:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21247:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21253:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21247:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "21238:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1002,
														"nodeType": "IfStatement",
														"src": "21234:103:0",
														"trueBody": {
															"id": 1001,
															"nodeType": "Block",
															"src": "21257:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 991,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21275:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21284:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21290:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "21284:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "21275:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 996,
																	"nodeType": "ExpressionStatement",
																	"src": "21275:17:0"
																},
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21310:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21320:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21310:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "21310:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21363:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "21363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "21354:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1019,
														"nodeType": "IfStatement",
														"src": "21350:100:0",
														"trueBody": {
															"id": 1018,
															"nodeType": "Block",
															"src": "21372:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1008,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21390:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21399:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21405:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "21399:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "21390:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "21390:16:0"
																},
																{
																	"expression": {
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1014,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21424:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21434:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21424:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1017,
																	"nodeType": "ExpressionStatement",
																	"src": "21424:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1020,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21467:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21476:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21482:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "21476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "21467:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1036,
														"nodeType": "IfStatement",
														"src": "21463:100:0",
														"trueBody": {
															"id": 1035,
															"nodeType": "Block",
															"src": "21485:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1025,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21503:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21512:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21518:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "21512:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "21503:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1030,
																	"nodeType": "ExpressionStatement",
																	"src": "21503:16:0"
																},
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21537:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21547:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "21537:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "21537:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21580:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21589:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21595:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "21589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "21580:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1053,
														"nodeType": "IfStatement",
														"src": "21576:100:0",
														"trueBody": {
															"id": 1052,
															"nodeType": "Block",
															"src": "21598:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1042,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "21616:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21625:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21631:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "21625:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "21616:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "21616:16:0"
																},
																{
																	"expression": {
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1048,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21650:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21660:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "21650:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1051,
																	"nodeType": "ExpressionStatement",
																	"src": "21650:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "21693:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21702:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21708:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "21693:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1064,
														"nodeType": "IfStatement",
														"src": "21689:66:0",
														"trueBody": {
															"id": 1063,
															"nodeType": "Block",
															"src": "21711:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "21729:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21739:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21729:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "21729:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1066,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "21781:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 1067,
												"nodeType": "Return",
												"src": "21774:13:0"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "20753:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "20887:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "20893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20892:15:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "20931:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20930:9:0"
									},
									"scope": 1249,
									"src": "20878:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "22029:170:0",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "22039:154:0",
												"statements": [
													{
														"assignments": [
															1081
														],
														"declarations": [
															{
																"constant": false,
																"id": 1081,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22071:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "22063:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1080,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1085,
														"initialValue": {
															"arguments": [
																{
																	"id": 1083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "22086:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1069,
																	1104
																],
																"referencedDeclaration": 1069,
																"src": "22080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22080:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22063:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "22113:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1088,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1075,
																						"src": "22140:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1087,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "22123:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22123:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1090,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22153:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1091,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1081,
																						"src": "22159:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22153:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1072,
																					"src": "22168:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22153:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22123:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22180:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22123:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22176:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22122:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22113:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1079,
														"id": 1101,
														"nodeType": "Return",
														"src": "22106:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "21800:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21957:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21971:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "21963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21987:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "21978:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1074,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1073,
														"name": "Rounding",
														"nameLocations": [
															"21978:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "21978:8:0"
													},
													"referencedDeclaration": 206,
													"src": "21978:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21962:34:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "22020:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22019:9:0"
									},
									"scope": 1249,
									"src": "21948:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "22519:600:0",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22537:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "22529:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"hexValue": "30",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22546:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22529:18:0"
											},
											{
												"id": 1187,
												"nodeType": "UncheckedBlock",
												"src": "22557:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22585:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22594:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "22585:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22600:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22585:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "22581:98:0",
														"trueBody": {
															"id": 1129,
															"nodeType": "Block",
															"src": "22603:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22621:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22631:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22621:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "22621:13:0"
																},
																{
																	"expression": {
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22652:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22662:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22652:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1128,
																	"nodeType": "ExpressionStatement",
																	"src": "22652:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22696:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22705:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22696:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22710:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22696:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1145,
														"nodeType": "IfStatement",
														"src": "22692:95:0",
														"trueBody": {
															"id": 1144,
															"nodeType": "Block",
															"src": "22713:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22731:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22741:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22731:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1139,
																	"nodeType": "ExpressionStatement",
																	"src": "22731:12:0"
																},
																{
																	"expression": {
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22761:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22771:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22761:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1143,
																	"nodeType": "ExpressionStatement",
																	"src": "22761:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22804:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22813:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22804:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22804:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "22800:95:0",
														"trueBody": {
															"id": 1159,
															"nodeType": "Block",
															"src": "22821:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22839:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22849:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22839:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "22839:12:0"
																},
																{
																	"expression": {
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22869:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22879:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22869:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "22869:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "22912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22921:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22912:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22912:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1175,
														"nodeType": "IfStatement",
														"src": "22908:95:0",
														"trueBody": {
															"id": 1174,
															"nodeType": "Block",
															"src": "22929:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "22947:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22957:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22947:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "22947:12:0"
																},
																{
																	"expression": {
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "22977:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22987:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22977:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1173,
																	"nodeType": "ExpressionStatement",
																	"src": "22977:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "23020:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23029:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23033:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23020:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1186,
														"nodeType": "IfStatement",
														"src": "23016:64:0",
														"trueBody": {
															"id": 1185,
															"nodeType": "Block",
															"src": "23036:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "23054:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23054:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "23054:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1188,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1113,
													"src": "23106:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1189,
												"nodeType": "Return",
												"src": "23099:13:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "22205:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "22465:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "22472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22471:15:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "22510:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22509:9:0"
									},
									"scope": 1249,
									"src": "22456:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "23356:177:0",
										"statements": [
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "23366:161:0",
												"statements": [
													{
														"assignments": [
															1203
														],
														"declarations": [
															{
																"constant": false,
																"id": 1203,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23398:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1227,
																"src": "23390:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23390:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1207,
														"initialValue": {
															"arguments": [
																{
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "23414:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1204,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1191,
																	1229
																],
																"referencedDeclaration": 1191,
																"src": "23407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23407:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23390:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "23441:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1210,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "23468:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$206",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1209,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "23451:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$206_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23451:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1217,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1212,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23481:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1215,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1213,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1203,
																									"src": "23487:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1214,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "23497:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "23487:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1216,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "23486:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23481:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1218,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1194,
																					"src": "23502:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23481:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23451:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23514:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23451:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23510:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1224,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23450:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23441:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1201,
														"id": 1226,
														"nodeType": "Return",
														"src": "23434:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "23125:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23283:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23314:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23305:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1195,
														"name": "Rounding",
														"nameLocations": [
															"23305:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "23305:8:0"
													},
													"referencedDeclaration": 206,
													"src": "23305:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23289:34:0"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "23347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23346:9:0"
									},
									"scope": 1249,
									"src": "23274:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "23731:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1240,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "23754:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$206",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$206",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23748:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1238,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "23748:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23748:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23766:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "23748:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23748:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1246,
												"nodeType": "Return",
												"src": "23741:31:0"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "23539:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "23666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23692:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "23683:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$206",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Rounding",
														"nameLocations": [
															"23683:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 206,
														"src": "23683:8:0"
													},
													"referencedDeclaration": 206,
													"src": "23683:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$206",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23682:19:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "23725:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23725:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23724:6:0"
									},
									"scope": 1249,
									"src": "23657:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2936,
							"src": "8867:14914:0",
							"usedErrors": [
								201
							],
							"usedEvents": []
						},
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23920:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1251,
								"nodeType": "StructuredDocumentation",
								"src": "23946:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353
							],
							"name": "SignedMath",
							"nameLocation": "24035:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "24187:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1261,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "24204:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1262,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "24208:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "24204:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1265,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "24216:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "24204:13:0",
													"trueExpression": {
														"id": 1264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "24212:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1267,
												"nodeType": "Return",
												"src": "24197:20:0"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "24052:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "24132:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24136:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24136:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24153:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24146:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1255,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24146:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24135:20:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24179:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1258,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24178:8:0"
									},
									"scope": 1353,
									"src": "24123:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "24366:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1279,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "24383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1280,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "24387:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "24383:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1283,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "24395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "24383:13:0",
													"trueExpression": {
														"id": 1282,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "24391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1285,
												"nodeType": "Return",
												"src": "24376:20:0"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "24230:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "24311:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24322:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24315:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1271,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24332:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24325:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1273,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24314:20:0"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "24358:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1276,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24358:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24357:8:0"
									},
									"scope": 1353,
									"src": "24302:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "24608:162:0",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "24677:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "24670:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1297,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "24670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1299,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "24682:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1300,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "24686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "24682:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1303,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "24693:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1304,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "24697:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "24693:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24692:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24692:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1309,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24691:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24681:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24670:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "24722:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1317,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1298,
																						"src": "24742:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "24734:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1315,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "24734:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24734:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24748:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "24734:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24727:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1313,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "24727:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24727:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1322,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "24756:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1323,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "24760:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "24756:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24755:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "24727:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24726:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24722:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1329,
												"nodeType": "Return",
												"src": "24715:48:0"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "24409:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "24549:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24564:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24557:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1289,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24574:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24567:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24556:20:0"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "24600:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1294,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24600:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24599:8:0"
									},
									"scope": 1353,
									"src": "24540:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "24914:158:0",
										"statements": [
											{
												"id": 1350,
												"nodeType": "UncheckedBlock",
												"src": "24924:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1341,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "25039:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25044:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25039:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "25052:2:0",
																		"subExpression": {
																			"id": 1345,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "25053:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "25039:15:0",
																	"trueExpression": {
																		"id": 1344,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "25048:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25031:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1338,
														"id": 1349,
														"nodeType": "Return",
														"src": "25024:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "24776:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "24868:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "24879:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "24872:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24871:10:0"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "24905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24904:9:0"
									},
									"scope": 1353,
									"src": "24859:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2936,
							"src": "24027:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25197:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "25225:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1603,
							"linearizedBaseContracts": [
								1603
							],
							"name": "Strings",
							"nameLocation": "25268:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1358,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "25307:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "25282:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1356,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "25282:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25320:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1361,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "25367:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "25344:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1359,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "25344:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25384:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "25393:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1368,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "25485:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "25514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "25537:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "25529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25513:31:0"
									},
									"src": "25479:66:0"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "25717:627:0",
										"statements": [
											{
												"id": 1414,
												"nodeType": "UncheckedBlock",
												"src": "25727:611:0",
												"statements": [
													{
														"assignments": [
															1377
														],
														"declarations": [
															{
																"constant": false,
																"id": 1377,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "25759:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25751:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "25779:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1378,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "25768:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1249_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25773:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "25768:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25768:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25788:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "25768:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25751:38:0"
													},
													{
														"assignments": [
															1386
														],
														"declarations": [
															{
																"constant": false,
																"id": 1386,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "25817:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25803:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1385,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25803:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1391,
														"initialValue": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "25837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "25826:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1387,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25830:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25826:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25803:41:0"
													},
													{
														"assignments": [
															1393
														],
														"declarations": [
															{
																"constant": false,
																"id": 1393,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "25866:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "25858:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25858:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1394,
														"nodeType": "VariableDeclarationStatement",
														"src": "25858:11:0"
													},
													{
														"AST": {
															"nativeSrc": "25939:67:0",
															"nodeType": "YulBlock",
															"src": "25939:67:0",
															"statements": [
																{
																	"nativeSrc": "25957:35:0",
																	"nodeType": "YulAssignment",
																	"src": "25957:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "25968:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "25968:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25980:2:0",
																						"nodeType": "YulLiteral",
																						"src": "25980:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "25984:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "25984:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25976:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "25976:3:0"
																				},
																				"nativeSrc": "25976:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "25976:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25964:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25964:3:0"
																		},
																		"nativeSrc": "25964:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25964:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "25957:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25957:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1386,
																"isOffset": false,
																"isSlot": false,
																"src": "25968:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1377,
																"isOffset": false,
																"isSlot": false,
																"src": "25984:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1393,
																"isOffset": false,
																"isSlot": false,
																"src": "25957:3:0",
																"valueSize": 1
															}
														],
														"id": 1395,
														"nodeType": "InlineAssembly",
														"src": "25930:76:0"
													},
													{
														"body": {
															"id": 1410,
															"nodeType": "Block",
															"src": "26032:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "26050:5:0",
																		"subExpression": {
																			"id": 1397,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "26050:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "26050:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "26133:86:0",
																		"nodeType": "YulBlock",
																		"src": "26133:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "26163:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "26163:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "26177:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "26177:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26184:2:0",
																											"nodeType": "YulLiteral",
																											"src": "26184:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "26173:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "26173:3:0"
																									},
																									"nativeSrc": "26173:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "26173:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "26189:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "26189:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "26168:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "26168:4:0"
																							},
																							"nativeSrc": "26168:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "26168:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "26155:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "26155:7:0"
																					},
																					"nativeSrc": "26155:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "26155:46:0"
																				},
																				"nativeSrc": "26155:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "26155:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1358,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26189:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1393,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26163:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1371,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "26177:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1400,
																	"nodeType": "InlineAssembly",
																	"src": "26124:95:0"
																},
																{
																	"expression": {
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1401,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "26236:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26245:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "26236:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1404,
																	"nodeType": "ExpressionStatement",
																	"src": "26236:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1405,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "26269:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26278:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "26269:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1409,
																	"nodeType": "IfStatement",
																	"src": "26265:21:0",
																	"trueBody": {
																		"id": 1408,
																		"nodeType": "Break",
																		"src": "26281:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1411,
														"nodeType": "WhileStatement",
														"src": "26019:282:0"
													},
													{
														"expression": {
															"id": 1412,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "26321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1375,
														"id": 1413,
														"nodeType": "Return",
														"src": "26314:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "25551:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "25655:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25672:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "25664:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25663:15:0"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "25702:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25702:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25701:15:0"
									},
									"scope": 1603,
									"src": "25646:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "26520:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "26551:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26559:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26551:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26569:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "26551:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26563:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "26597:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1434,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "26582:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1353_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "26593:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1352,
																		"src": "26582:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26582:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1433,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "26573:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26573:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26537:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1424,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "26537:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26544:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "26537:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26537:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1440,
												"nodeType": "Return",
												"src": "26530:75:0"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "26350:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "26453:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26475:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "26468:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26467:14:0"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "26505:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26505:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26504:15:0"
									},
									"scope": 1603,
									"src": "26444:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "26791:100:0",
										"statements": [
											{
												"id": 1460,
												"nodeType": "UncheckedBlock",
												"src": "26801:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "26844:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1454,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1445,
																				"src": "26863:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1452,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "26851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1249_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26856:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1191,
																			"src": "26851:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26851:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26872:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "26851:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1450,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1462,
																	1545,
																	1565
																],
																"referencedDeclaration": 1545,
																"src": "26832:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26832:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1459,
														"nodeType": "Return",
														"src": "26825:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "26618:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26726:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "26738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26737:15:0"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "26776:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26775:15:0"
									},
									"scope": 1603,
									"src": "26717:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "27104:435:0",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "27122:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "27114:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"id": 1474,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1465,
													"src": "27135:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27114:26:0"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "27163:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "27150:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1476,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1486,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27182:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1481,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "27186:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27182:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27195:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "27182:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "27172:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1478,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27176:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27172:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27150:47:0"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1487,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27207:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1489,
														"indexExpression": {
															"hexValue": "30",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27214:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27207:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27219:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "27207:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "27207:15:0"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1493,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27232:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1495,
														"indexExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27239:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27232:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27244:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "27232:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "27232:15:0"
											},
											{
												"body": {
													"id": 1527,
													"nodeType": "Block",
													"src": "27302:95:0",
													"statements": [
														{
															"expression": {
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1513,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "27316:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1515,
																	"indexExpression": {
																		"id": 1514,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "27323:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27316:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1516,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "27328:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1517,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "27339:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27352:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "27339:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27328:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "27316:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "27316:40:0"
														},
														{
															"expression": {
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1523,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "27370:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27385:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27370:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "27370:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "27290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27294:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "27290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"initializationExpression": {
													"assignments": [
														1500
													],
													"declarations": [
														{
															"constant": false,
															"id": 1500,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "27270:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1528,
															"src": "27262:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1499,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27262:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1506,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1502,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "27278:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27274:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "27274:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27262:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "27297:3:0",
														"subExpression": {
															"id": 1510,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "27299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1512,
													"nodeType": "ExpressionStatement",
													"src": "27297:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27257:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "27410:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27410:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "27406:96:0",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "27427:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "27477:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1534,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "27484:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1532,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "27448:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27448:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1536,
															"nodeType": "RevertStatement",
															"src": "27441:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "27525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "27518:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1539,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "27518:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27518:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1543,
												"nodeType": "Return",
												"src": "27511:21:0"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "26897:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27023:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "27058:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27034:31:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "27089:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27088:15:0"
									},
									"scope": 1603,
									"src": "27014:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "27771:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1558,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "27816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1556,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "27808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27800:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27800:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27800:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1561,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "27824:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1553,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1462,
															1545,
															1565
														],
														"referencedDeclaration": 1545,
														"src": "27788:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27788:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1552,
												"id": 1563,
												"nodeType": "Return",
												"src": "27781:58:0"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "27545:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27707:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "27727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "27719:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27718:14:0"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "27756:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27756:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27755:15:0"
									},
									"scope": 1603,
									"src": "27698:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "28001:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1577,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1568,
																		"src": "28024:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1575,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28018:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28018:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28027:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28018:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "28043:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28037:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28037:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28046:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "28037:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "28018:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1589,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "28072:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28066:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1587,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "28066:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28066:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1586,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "28056:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28056:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1595,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "28095:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "28089:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1593,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "28089:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28089:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1592,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "28079:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28079:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "28056:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28018:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1574,
												"id": 1600,
												"nodeType": "Return",
												"src": "28011:87:0"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "27852:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "27932:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27952:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "27938:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "27955:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27937:34:0"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "27995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27994:6:0"
									},
									"scope": 1603,
									"src": "27923:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2936,
							"src": "25260:2847:0",
							"usedErrors": [
								1368
							],
							"usedEvents": []
						},
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28256:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1606,
										"name": "IERC165",
										"nameLocations": [
											"28790:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "28790:7:0"
									},
									"id": 1607,
									"nodeType": "InheritanceSpecifier",
									"src": "28790:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "28283:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1624,
							"linearizedBaseContracts": [
								1624,
								11
							],
							"name": "ERC165",
							"nameLocation": "28780:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "28947:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "28964:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1617,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "28984:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1616,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "28979:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28979:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "28993:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "28979:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "28964:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1621,
												"nodeType": "Return",
												"src": "28957:47:0"
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "28804:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "28874:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "28899:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "28892:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28891:20:0"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "28941:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28940:6:0"
									},
									"scope": 1624,
									"src": "28865:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2936,
							"src": "28762:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29159:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1626,
								"nodeType": "StructuredDocumentation",
								"src": "29185:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "IERC20Errors",
							"nameLocation": "29337:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "29356:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1635,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "29676:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "29725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "29742:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "29734:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29700:49:0"
									},
									"src": "29670:80:0"
								},
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "29756:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1640,
									"name": "ERC20InvalidSender",
									"nameLocation": "29919:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "29938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29937:16:0"
									},
									"src": "29913:41:0"
								},
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "29960:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1645,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "30130:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "30159:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "30151:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30150:18:0"
									},
									"src": "30124:45:0"
								},
								{
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "30175:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1654,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "30531:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30558:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "30583:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30575:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "30602:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "30594:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30557:52:0"
									},
									"src": "30525:85:0"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "30616:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1659,
									"name": "ERC20InvalidApprover",
									"nameLocation": "30801:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "30830:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "30822:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30821:18:0"
									},
									"src": "30795:45:0"
								},
								{
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "30846:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1664,
									"name": "ERC20InvalidSpender",
									"nameLocation": "31052:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31080:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "31072:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31071:17:0"
									},
									"src": "31046:43:0"
								}
							],
							"scope": 2936,
							"src": "29327:1764:0",
							"usedErrors": [
								1635,
								1640,
								1645,
								1654,
								1659,
								1664
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1666,
								"nodeType": "StructuredDocumentation",
								"src": "31093:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1713,
							"linearizedBaseContracts": [
								1713
							],
							"name": "IERC721Errors",
							"nameLocation": "31247:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "31267:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1671,
									"name": "ERC721InvalidOwner",
									"nameLocation": "31497:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31524:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "31516:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31515:15:0"
									},
									"src": "31491:40:0"
								},
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "31537:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1676,
									"name": "ERC721NonexistentToken",
									"nameLocation": "31680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31711:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "31703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:17:0"
									},
									"src": "31674:46:0"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "31726:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1685,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "32026:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32071:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32088:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32080:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32046:48:0"
									},
									"src": "32020:75:0"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "32101:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1690,
									"name": "ERC721InvalidSender",
									"nameLocation": "32264:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32292:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "32284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32283:16:0"
									},
									"src": "32258:42:0"
								},
								{
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "32306:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1695,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "32476:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "32506:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "32498:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32497:18:0"
									},
									"src": "32470:46:0"
								},
								{
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "32522:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1702,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "32780:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "32807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32833:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "32825:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32806:35:0"
									},
									"src": "32774:68:0"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "32848:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1707,
									"name": "ERC721InvalidApprover",
									"nameLocation": "33033:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "33063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "33055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33054:18:0"
									},
									"src": "33027:46:0"
								},
								{
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "33079:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1712,
									"name": "ERC721InvalidOperator",
									"nameLocation": "33287:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33317:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "33309:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33308:18:0"
									},
									"src": "33281:46:0"
								}
							],
							"scope": 2936,
							"src": "31237:2092:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1714,
								"nodeType": "StructuredDocumentation",
								"src": "33331:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760
							],
							"name": "IERC1155Errors",
							"nameLocation": "33487:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "33508:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1725,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "33880:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "33915:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "33931:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33923:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "33948:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33940:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33964:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "33956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33906:66:0"
									},
									"src": "33874:99:0"
								},
								{
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "33979:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1730,
									"name": "ERC1155InvalidSender",
									"nameLocation": "34142:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "34171:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "34163:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34162:16:0"
									},
									"src": "34136:43:0"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "34185:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1735,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "34355:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "34386:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "34378:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34377:18:0"
									},
									"src": "34349:47:0"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "34402:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1742,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "34669:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "34706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "34698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34724:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "34716:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34697:33:0"
									},
									"src": "34663:68:0"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "34737:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1747,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "34922:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "34953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "34945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34944:18:0"
									},
									"src": "34916:47:0"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "34969:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1752,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "35177:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "35200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35199:18:0"
									},
									"src": "35171:47:0"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "35224:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1759,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "35515:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "35549:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "35541:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "35568:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "35560:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35540:41:0"
									},
									"src": "35509:73:0"
								}
							],
							"scope": 2936,
							"src": "33477:2107:0",
							"usedErrors": [
								1725,
								1730,
								1735,
								1742,
								1747,
								1752,
								1759
							],
							"usedEvents": []
						},
						{
							"id": 1761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35720:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1763,
										"name": "Context",
										"nameLocations": [
											"36028:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "36028:7:0"
									},
									"id": 1764,
									"nodeType": "InheritanceSpecifier",
									"src": "36028:7:0"
								},
								{
									"baseName": {
										"id": 1765,
										"name": "ERC165",
										"nameLocations": [
											"36037:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1624,
										"src": "36037:6:0"
									},
									"id": 1766,
									"nodeType": "InheritanceSpecifier",
									"src": "36037:6:0"
								},
								{
									"baseName": {
										"id": 1767,
										"name": "IERC721",
										"nameLocations": [
											"36045:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "36045:7:0"
									},
									"id": 1768,
									"nodeType": "InheritanceSpecifier",
									"src": "36045:7:0"
								},
								{
									"baseName": {
										"id": 1769,
										"name": "IERC721Metadata",
										"nameLocations": [
											"36054:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "36054:15:0"
									},
									"id": 1770,
									"nodeType": "InheritanceSpecifier",
									"src": "36054:15:0"
								},
								{
									"baseName": {
										"id": 1771,
										"name": "IERC721Errors",
										"nameLocations": [
											"36071:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "36071:13:0"
									},
									"id": 1772,
									"nodeType": "InheritanceSpecifier",
									"src": "36071:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "35753:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2753,
							"linearizedBaseContracts": [
								2753,
								1713,
								167,
								125,
								1624,
								11,
								196
							],
							"name": "ERC721",
							"nameLocation": "36018:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1775,
									"libraryName": {
										"id": 1773,
										"name": "Strings",
										"nameLocations": [
											"36097:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1603,
										"src": "36097:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "36091:26:0",
									"typeName": {
										"id": 1774,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36109:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1777,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "36156:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36141:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1776,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36141:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1779,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "36203:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36188:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1778,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36188:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1783,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "36261:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36217:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1782,
										"keyName": "tokenId",
										"keyNameLocation": "36233:7:0",
										"keyType": {
											"id": 1780,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36225:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "36217:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1781,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36244:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1787,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "36317:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36275:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1786,
										"keyName": "owner",
										"keyNameLocation": "36291:5:0",
										"keyType": {
											"id": 1784,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36283:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36275:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36300:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1791,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "36377:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36333:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1790,
										"keyName": "tokenId",
										"keyNameLocation": "36349:7:0",
										"keyType": {
											"id": 1788,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36341:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "36333:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1789,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36360:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1797,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "36467:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2753,
									"src": "36399:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1796,
										"keyName": "owner",
										"keyNameLocation": "36415:5:0",
										"keyType": {
											"id": 1792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36407:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36399:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1795,
											"keyName": "operator",
											"keyNameLocation": "36440:8:0",
											"keyType": {
												"id": 1793,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "36432:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "36424:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1794,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "36452:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "36661:57:0",
										"statements": [
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1805,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "36671:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1806,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "36679:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36671:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "36671:13:0"
											},
											{
												"expression": {
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1809,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "36694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1810,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "36704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36694:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "36694:17:0"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "36492:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1814,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "36631:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "36617:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36617:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "36652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "36638:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36616:44:0"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36661:0:0"
									},
									"scope": 2753,
									"src": "36605:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10,
										1623
									],
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "36893:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1825,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "36922:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1827,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "36942:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1826,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "36937:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36937:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$125",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "36951:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "36937:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "36922:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "36978:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1833,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "36998:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1832,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "36993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36993:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$167",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37015:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "36993:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "36978:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "36922:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "37066:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1838,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "37042:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2753_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37048:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1623,
															"src": "37042:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37042:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36922:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1843,
												"nodeType": "Return",
												"src": "36903:175:0"
											}
										]
									},
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "36724:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "36794:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1821,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1819,
												"name": "ERC165",
												"nameLocations": [
													"36861:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1624,
												"src": "36861:6:0"
											},
											{
												"id": 1820,
												"name": "IERC165",
												"nameLocations": [
													"36869:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "36869:7:0"
											}
										],
										"src": "36852:25:0"
									},
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "36819:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36812:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "36812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36811:20:0"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "36887:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36887:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36886:6:0"
									},
									"scope": 2753,
									"src": "36785:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "37216:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1853,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "37230:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37239:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37239:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37230:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "37226:87:0",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "37251:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37299:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37291:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37291:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37291:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1859,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "37272:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37272:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1865,
															"nodeType": "RevertStatement",
															"src": "37265:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1868,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "37329:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1870,
													"indexExpression": {
														"id": 1869,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "37339:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37329:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1871,
												"nodeType": "Return",
												"src": "37322:23:0"
											}
										]
									},
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "37091:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "37153:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37171:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "37163:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37162:15:0"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "37207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37206:9:0"
									},
									"scope": 2753,
									"src": "37144:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "37481:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "37512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1881,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "37498:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37498:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1880,
												"id": 1884,
												"nodeType": "Return",
												"src": "37491:29:0"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "37358:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "37418:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "37426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37425:17:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "37472:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37471:9:0"
									},
									"scope": 2753,
									"src": "37409:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										152
									],
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "37649:29:0",
										"statements": [
											{
												"expression": {
													"id": 1892,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1777,
													"src": "37666:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1893,
												"nodeType": "Return",
												"src": "37659:12:0"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "37533:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "37598:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37602:2:0"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "37634:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37633:15:0"
									},
									"scope": 2753,
									"src": "37589:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "37804:31:0",
										"statements": [
											{
												"expression": {
													"id": 1901,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1779,
													"src": "37821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1900,
												"id": 1902,
												"nodeType": "Return",
												"src": "37814:14:0"
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "37684:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "37751:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37757:2:0"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "37789:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37789:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37788:15:0"
									},
									"scope": 2753,
									"src": "37742:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "37980:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1913,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "38004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1912,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "37990:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37990:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "37990:22:0"
											},
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "38037:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1939,
														"src": "38023:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1916,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "38023:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1918,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "38047:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38047:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38023:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1923,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "38080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38074:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1921,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "38074:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38074:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38089:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "38074:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38098:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "38074:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38147:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "38074:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 1931,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "38116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1932,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "38125:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "38133:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "38125:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38125:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38102:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "38102:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38109:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "38102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38102:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1938,
												"nodeType": "Return",
												"src": "38067:82:0"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "37841:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "37910:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37927:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "37919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37918:17:0"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "37965:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37965:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37964:15:0"
									},
									"scope": 2753,
									"src": "37901:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "38464:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38481:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1945,
												"id": 1947,
												"nodeType": "Return",
												"src": "38474:9:0"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "38162:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "38407:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38415:2:0"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "38449:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38448:15:0"
									},
									"scope": 2753,
									"src": "38398:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "38608:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "38627:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "38631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "38640:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38640:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1957,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2556,
															2622
														],
														"referencedDeclaration": 2556,
														"src": "38618:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38618:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "38618:35:0"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "38496:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "38556:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38572:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "38564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "38576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38563:29:0"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38608:0:0"
									},
									"scope": 2753,
									"src": "38547:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "38797:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "38821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1973,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "38807:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38807:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "38807:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "38860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1977,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "38847:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38847:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1980,
												"nodeType": "Return",
												"src": "38840:28:0"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "38666:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "38730:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "38742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38741:17:0"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "38788:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38787:9:0"
									},
									"scope": 2753,
									"src": "38721:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										106
									],
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "39017:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1991,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "39046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39046:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "39060:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "39070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1990,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "39027:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39027:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "39027:52:0"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "38881:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "38951:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38977:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "38969:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "38992:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "38987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38968:33:0"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39017:0:0"
									},
									"scope": 2753,
									"src": "38942:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										124
									],
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "39246:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2008,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "39263:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2010,
														"indexExpression": {
															"id": 2009,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "39282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39263:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2012,
													"indexExpression": {
														"id": 2011,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "39289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39263:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2007,
												"id": 2013,
												"nodeType": "Return",
												"src": "39256:42:0"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "39092:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "39161:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "39186:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39178:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39201:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39193:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39177:33:0"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "39240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39239:6:0"
									},
									"scope": 2753,
									"src": "39152:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "39447:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2025,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "39461:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39475:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39467:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2026,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39467:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39467:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39461:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2039,
												"nodeType": "IfStatement",
												"src": "39457:87:0",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "39479:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "39530:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "39522:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2032,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "39522:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39522:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2031,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "39500:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39500:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2037,
															"nodeType": "RevertStatement",
															"src": "39493:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "39770:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "39762:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2040,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39762:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2048,
												"initialValue": {
													"arguments": [
														{
															"id": 2043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "39794:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2044,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "39798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2045,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "39807:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39807:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2042,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "39786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39786:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39762:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2049,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "39834:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2050,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "39851:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39834:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "39830:109:0",
												"trueBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "39857:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2053,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "39899:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2054,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "39905:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "39914:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2052,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "39878:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39878:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2057,
															"nodeType": "RevertStatement",
															"src": "39871:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "39311:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "39376:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39397:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39411:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39403:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "39415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39388:43:0"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39447:0:0"
									},
									"scope": 2753,
									"src": "39367:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "40087:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "40114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2073,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "40120:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "40124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40133:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2071,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2079,
															2105
														],
														"referencedDeclaration": 2105,
														"src": "40097:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40097:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "40097:39:0"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "39951:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "40020:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40045:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40037:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40059:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40051:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40071:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "40063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40036:43:0"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40087:0:0"
									},
									"scope": 2753,
									"src": "40011:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "40312:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2092,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "40335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2093,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "40341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "40345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2091,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "40322:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40322:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "40322:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2098,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "40386:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2099,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "40392:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2100,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "40396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "40405:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2097,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "40363:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40363:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "40363:47:0"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "40149:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "40218:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40243:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40235:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40269:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "40278:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40234:62:0"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40312:0:0"
									},
									"scope": 2753,
									"src": "40209:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "41006:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2113,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "41023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2115,
													"indexExpression": {
														"id": 2114,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "41031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41023:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2116,
												"nodeType": "Return",
												"src": "41016:23:0"
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "40423:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "40940:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "40949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40948:17:0"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "40997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40996:9:0"
									},
									"scope": 2753,
									"src": "40931:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "41241:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2126,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "41258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2128,
													"indexExpression": {
														"id": 2127,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "41274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41258:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2129,
												"nodeType": "Return",
												"src": "41251:31:0"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "41052:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "41171:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41183:17:0"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41231:9:0"
									},
									"scope": 2753,
									"src": "41162:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "41709:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "41738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41757:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41749:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41749:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "41738:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2149,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2134,
																			"src": "41776:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2150,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2136,
																			"src": "41785:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "41776:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2153,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "41813:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2154,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2136,
																				"src": "41820:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2152,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "41796:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41796:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "41776:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2158,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "41845:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2157,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "41832:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41832:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2160,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "41857:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "41832:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "41776:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "41775:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41738:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2165,
												"nodeType": "Return",
												"src": "41719:146:0"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "41295:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "41609:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41631:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41623:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41646:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41622:49:0"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "41703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41702:6:0"
									},
									"scope": 2753,
									"src": "41600:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "42403:271:0",
										"statements": [
											{
												"condition": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "42417:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2178,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "42432:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2179,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "42439:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2180,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "42448:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2177,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "42418:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42418:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2202,
												"nodeType": "IfStatement",
												"src": "42413:255:0",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "42458:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "42476:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42493:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "42485:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2184,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "42485:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42485:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42476:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2199,
																"nodeType": "Block",
																"src": "42574:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2195,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2172,
																					"src": "42626:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2196,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "42635:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2194,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "42599:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42599:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2198,
																		"nodeType": "RevertStatement",
																		"src": "42592:51:0"
																	}
																]
															},
															"id": 2200,
															"nodeType": "IfStatement",
															"src": "42472:186:0",
															"trueBody": {
																"id": 2193,
																"nodeType": "Block",
																"src": "42497:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2190,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "42545:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2189,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "42522:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42522:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2192,
																		"nodeType": "RevertStatement",
																		"src": "42515:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "41878:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "42315:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42340:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "42355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "42364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42331:49:0"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42403:0:0"
									},
									"scope": 2753,
									"src": "42306:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "43391:78:0",
										"statements": [
											{
												"id": 2218,
												"nodeType": "UncheckedBlock",
												"src": "43401:62:0",
												"statements": [
													{
														"expression": {
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2212,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "43425:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2214,
																"indexExpression": {
																	"id": 2213,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "43435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "43425:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "43447:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "43425:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2217,
														"nodeType": "ExpressionStatement",
														"src": "43425:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "42680:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "43325:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "43350:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "43342:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "43359:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2208,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "43359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43341:32:0"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43391:0:0"
									},
									"scope": 2753,
									"src": "43316:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "44157:700:0",
										"statements": [
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "44175:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2309,
														"src": "44167:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44167:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"arguments": [
														{
															"id": 2235,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2234,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "44182:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44182:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44167:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2238,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "44259:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44275:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44267:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44267:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44259:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2251,
												"nodeType": "IfStatement",
												"src": "44255:86:0",
												"trueBody": {
													"id": 2250,
													"nodeType": "Block",
													"src": "44279:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "44310:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2246,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2227,
																		"src": "44316:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2247,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "44322:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2244,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "44293:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44293:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2249,
															"nodeType": "ExpressionStatement",
															"src": "44293:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2252,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "44385:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44401:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44393:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44393:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44385:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2279,
												"nodeType": "IfStatement",
												"src": "44381:256:0",
												"trueBody": {
													"id": 2278,
													"nodeType": "Block",
													"src": "44405:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44518:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44510:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2259,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44510:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44510:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2263,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "44522:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44539:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44531:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2264,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44531:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44531:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44543:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2258,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2556,
																		2622
																	],
																	"referencedDeclaration": 2622,
																	"src": "44501:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44501:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2270,
															"nodeType": "ExpressionStatement",
															"src": "44501:48:0"
														},
														{
															"id": 2277,
															"nodeType": "UncheckedBlock",
															"src": "44564:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2271,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "44592:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2273,
																			"indexExpression": {
																				"id": 2272,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2233,
																				"src": "44602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "44592:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44611:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44592:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2276,
																	"nodeType": "ExpressionStatement",
																	"src": "44592:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2280,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "44651:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2281,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44657:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44657:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44651:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2294,
												"nodeType": "IfStatement",
												"src": "44647:107:0",
												"trueBody": {
													"id": 2293,
													"nodeType": "Block",
													"src": "44669:85:0",
													"statements": [
														{
															"id": 2292,
															"nodeType": "UncheckedBlock",
															"src": "44683:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2286,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "44711:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2288,
																			"indexExpression": {
																				"id": 2287,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2223,
																				"src": "44721:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "44711:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44728:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44711:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "44711:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2295,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "44764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2297,
														"indexExpression": {
															"id": 2296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44764:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2298,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "44783:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44764:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "44764:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "44810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "44816:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2304,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "44820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "44801:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44801:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "EmitStatement",
												"src": "44796:32:0"
											},
											{
												"expression": {
													"id": 2307,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2233,
													"src": "44846:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2231,
												"id": 2308,
												"nodeType": "Return",
												"src": "44839:11:0"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "43475:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "44071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "44116:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44108:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44078:43:0"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "44148:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44147:9:0"
									},
									"scope": 2753,
									"src": "44062:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "45232:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2318,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "45246:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45260:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2319,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45252:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45252:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45246:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "45242:87:0",
												"trueBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "45264:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45315:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45307:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2325,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45307:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45307:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2324,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "45285:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45285:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2330,
															"nodeType": "RevertStatement",
															"src": "45278:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "45346:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2359,
														"src": "45338:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45338:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2343,
												"initialValue": {
													"arguments": [
														{
															"id": 2336,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "45370:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "45374:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2338,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45383:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45383:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2335,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "45362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45362:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45338:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2344,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "45408:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45425:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45425:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45408:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2358,
												"nodeType": "IfStatement",
												"src": "45404:96:0",
												"trueBody": {
													"id": 2357,
													"nodeType": "Block",
													"src": "45437:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45486:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45478:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45478:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45478:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2350,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "45458:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45458:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2356,
															"nodeType": "RevertStatement",
															"src": "45451:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "44863:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "45188:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45202:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "45194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "45206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45193:29:0"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45232:0:0"
									},
									"scope": 2753,
									"src": "45179:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2374,
										"nodeType": "Block",
										"src": "45914:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "45934:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "45938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45947:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2368,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2375,
															2401
														],
														"referencedDeclaration": 2401,
														"src": "45924:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45924:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2373,
												"nodeType": "ExpressionStatement",
												"src": "45924:26:0"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "45512:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "45866:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45884:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "45876:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "45888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45875:29:0"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45914:0:0"
									},
									"scope": 2753,
									"src": "45857:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "46262:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2386,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "46278:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "46282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2385,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "46272:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46272:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "46272:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46323:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46323:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "46335:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "46339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2397,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "46348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2390,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "46300:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46300:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "46300:53:0"
											}
										]
									},
									"documentation": {
										"id": 2376,
										"nodeType": "StructuredDocumentation",
										"src": "45963:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "46187:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46205:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46197:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "46239:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "46226:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46196:48:0"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46262:0:0"
									},
									"scope": 2753,
									"src": "46178:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "46727:186:0",
										"statements": [
											{
												"assignments": [
													2408
												],
												"declarations": [
													{
														"constant": false,
														"id": 2408,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "46745:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2433,
														"src": "46737:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2407,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46737:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2420,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46777:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2410,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46769:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "46781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46798:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46790:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46790:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46790:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2409,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "46761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46761:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46737:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2421,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "46815:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46840:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46832:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2422,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46832:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46832:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46815:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "46811:96:0",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "46844:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2428,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "46888:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2427,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "46865:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46865:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2430,
															"nodeType": "RevertStatement",
															"src": "46858:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "46366:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "46695:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "46701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46700:17:0"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46727:0:0"
									},
									"scope": 2753,
									"src": "46686:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "47308:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2444,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2439,
														"src": "47322:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47328:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47328:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47322:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2458,
												"nodeType": "IfStatement",
												"src": "47318:87:0",
												"trueBody": {
													"id": 2457,
													"nodeType": "Block",
													"src": "47340:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47391:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47383:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2451,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47383:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47383:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2450,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "47361:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47361:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2456,
															"nodeType": "RevertStatement",
															"src": "47354:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "47422:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2493,
														"src": "47414:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47414:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"arguments": [
														{
															"id": 2462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "47446:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "47450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47459:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47459:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47459:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2461,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "47438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47438:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47414:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "47484:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2471,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47484:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2481,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "47586:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2482,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "47603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "47586:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2491,
													"nodeType": "IfStatement",
													"src": "47582:109:0",
													"trueBody": {
														"id": 2490,
														"nodeType": "Block",
														"src": "47609:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2485,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "47651:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2486,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "47657:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2487,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "47666:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2484,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "47630:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47630:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2489,
																"nodeType": "RevertStatement",
																"src": "47623:57:0"
															}
														]
													}
												},
												"id": 2492,
												"nodeType": "IfStatement",
												"src": "47480:211:0",
												"trueBody": {
													"id": 2480,
													"nodeType": "Block",
													"src": "47513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2477,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "47557:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2476,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "47534:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2479,
															"nodeType": "RevertStatement",
															"src": "47527:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "46919:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "47246:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47278:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47270:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47290:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "47282:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47255:43:0"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47308:0:0"
									},
									"scope": 2753,
									"src": "47237:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "48705:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2505,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "48729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2506,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "48735:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2507,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "48739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48748:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2504,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2512,
															2538
														],
														"referencedDeclaration": 2538,
														"src": "48715:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48715:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "48715:36:0"
											}
										]
									},
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "47703:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "48639:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "48661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48687:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "48679:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48652:43:0"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48705:0:0"
									},
									"scope": 2753,
									"src": "48630:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "49097:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "49117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "49123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2527,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "49127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2524,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "49107:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49107:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "49107:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "49168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "49174:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2533,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "49178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2534,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "49187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2530,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "49145:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49145:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "49145:47:0"
											}
										]
									},
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "48764:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "49004:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49026:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49018:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49040:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49032:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49052:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49044:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "49061:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49017:62:0"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49097:0:0"
									},
									"scope": 2753,
									"src": "48995:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "49712:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2549,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "49731:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "49735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2551,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "49744:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2548,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2556,
															2622
														],
														"referencedDeclaration": 2622,
														"src": "49722:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49722:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "49722:33:0"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "49205:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "49651:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49668:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49660:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49680:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "49697:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "49689:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49659:43:0"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49712:0:0"
									},
									"scope": 2753,
									"src": "49642:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "50038:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2568,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "50104:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2569,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "50117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50133:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50125:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50125:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50125:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50117:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50104:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2614,
												"nodeType": "IfStatement",
												"src": "50100:460:0",
												"trueBody": {
													"id": 2613,
													"nodeType": "Block",
													"src": "50137:423:0",
													"statements": [
														{
															"assignments": [
																2577
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2577,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "50159:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2613,
																	"src": "50151:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2576,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "50151:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2581,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2579,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "50181:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2578,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2688,
																	"src": "50167:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50167:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "50151:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2582,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "50317:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "50333:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "50325:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2583,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "50325:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50325:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "50317:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2588,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2577,
																			"src": "50339:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2589,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "50348:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "50339:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "50317:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "50356:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2593,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2577,
																				"src": "50374:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2594,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2563,
																				"src": "50381:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2592,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "50357:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50357:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "50317:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2603,
															"nodeType": "IfStatement",
															"src": "50313:142:0",
															"trueBody": {
																"id": 2602,
																"nodeType": "Block",
																"src": "50388:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2599,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2563,
																					"src": "50435:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2598,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1707,
																				"src": "50413:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50413:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2601,
																		"nodeType": "RevertStatement",
																		"src": "50406:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2604,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "50473:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2612,
															"nodeType": "IfStatement",
															"src": "50469:81:0",
															"trueBody": {
																"id": 2611,
																"nodeType": "Block",
																"src": "50484:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2606,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2577,
																					"src": "50516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2607,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "50523:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2608,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2561,
																					"src": "50527:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2605,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "50507:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50507:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2610,
																		"nodeType": "EmitStatement",
																		"src": "50502:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2615,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "50570:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2617,
														"indexExpression": {
															"id": 2616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "50586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50570:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2618,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "50597:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50570:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2620,
												"nodeType": "ExpressionStatement",
												"src": "50570:29:0"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "49768:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "49953:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49970:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49962:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49982:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49974:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "49999:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "49991:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "50010:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2622,
												"src": "50005:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49961:59:0"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50038:0:0"
									},
									"scope": 2753,
									"src": "49944:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "50908:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2632,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "50922:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2633,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50934:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50934:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50922:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2643,
												"nodeType": "IfStatement",
												"src": "50918:91:0",
												"trueBody": {
													"id": 2642,
													"nodeType": "Block",
													"src": "50946:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2639,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2627,
																		"src": "50989:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2638,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "50967:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50967:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2641,
															"nodeType": "RevertStatement",
															"src": "50960:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2644,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "51018:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2647,
															"indexExpression": {
																"id": 2645,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "51037:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "51018:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2648,
														"indexExpression": {
															"id": 2646,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "51044:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51018:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2649,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2629,
														"src": "51056:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "51018:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "51018:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2653,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "51094:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2654,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "51101:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2655,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "51111:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2652,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "51079:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51079:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2657,
												"nodeType": "EmitStatement",
												"src": "51074:46:0"
											}
										]
									},
									"documentation": {
										"id": 2623,
										"nodeType": "StructuredDocumentation",
										"src": "50612:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "50824:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "50851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50843:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "50866:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50858:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "50881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "50876:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "50876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50842:48:0"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50908:0:0"
									},
									"scope": 2753,
									"src": "50815:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "51434:169:0",
										"statements": [
											{
												"assignments": [
													2668
												],
												"declarations": [
													{
														"constant": false,
														"id": 2668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "51452:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "51444:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51444:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2672,
												"initialValue": {
													"arguments": [
														{
															"id": 2670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "51469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "51460:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51460:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51444:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2673,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "51491:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51508:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2674,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51500:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51500:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51491:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2684,
												"nodeType": "IfStatement",
												"src": "51487:88:0",
												"trueBody": {
													"id": 2683,
													"nodeType": "Block",
													"src": "51512:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2680,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2662,
																		"src": "51556:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2679,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "51533:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51533:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2682,
															"nodeType": "RevertStatement",
															"src": "51526:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2685,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2668,
													"src": "51591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2666,
												"id": 2686,
												"nodeType": "Return",
												"src": "51584:12:0"
											}
										]
									},
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "51133:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "51371:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "51385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51384:17:0"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "51425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51424:9:0"
									},
									"scope": 2753,
									"src": "51362:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "52244:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2700,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "52258:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52261:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "52258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52266:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52258:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "52258:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2750,
												"nodeType": "IfStatement",
												"src": "52254:664:0",
												"trueBody": {
													"id": 2749,
													"nodeType": "Block",
													"src": "52278:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2729,
																		"nodeType": "Block",
																		"src": "52392:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2722,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2718,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2716,
																						"src": "52414:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2719,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 142,
																								"src": "52424:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2720,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "52440:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 141,
																							"src": "52424:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2721,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "52457:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "52424:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "52414:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2728,
																				"nodeType": "IfStatement",
																				"src": "52410:130:0",
																				"trueBody": {
																					"id": 2727,
																					"nodeType": "Block",
																					"src": "52467:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2724,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2693,
																										"src": "52518:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2723,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1695,
																									"src": "52496:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2725,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "52496:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2726,
																							"nodeType": "RevertStatement",
																							"src": "52489:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2730,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2717,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2716,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "52384:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2730,
																				"src": "52377:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2715,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "52377:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52376:15:0"
																	},
																	"src": "52368:186:0"
																},
																{
																	"block": {
																		"id": 2746,
																		"nodeType": "Block",
																		"src": "52583:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2734,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2732,
																							"src": "52605:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "52612:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "52605:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2736,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52622:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "52605:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2744,
																					"nodeType": "Block",
																					"src": "52704:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "52790:86:0",
																								"nodeType": "YulBlock",
																								"src": "52790:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "52827:2:0",
																															"nodeType": "YulLiteral",
																															"src": "52827:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "52831:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "52831:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "52823:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "52823:3:0"
																													},
																													"nativeSrc": "52823:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "52823:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "52846:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "52846:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "52840:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "52840:5:0"
																													},
																													"nativeSrc": "52840:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "52840:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "52816:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "52816:6:0"
																											},
																											"nativeSrc": "52816:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "52816:38:0"
																										},
																										"nativeSrc": "52816:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "52816:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2732,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "52831:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2732,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "52846:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2743,
																							"nodeType": "InlineAssembly",
																							"src": "52781:95:0"
																						}
																					]
																				},
																				"id": 2745,
																				"nodeType": "IfStatement",
																				"src": "52601:293:0",
																				"trueBody": {
																					"id": 2742,
																					"nodeType": "Block",
																					"src": "52625:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2739,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2693,
																										"src": "52676:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2738,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1695,
																									"src": "52654:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 2740,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "52654:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 2741,
																							"nodeType": "RevertStatement",
																							"src": "52647:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2747,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2733,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2732,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "52575:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2747,
																				"src": "52562:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2731,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "52562:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52561:21:0"
																	},
																	"src": "52555:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2709,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "52333:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52333:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2711,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "52347:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2712,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2695,
																		"src": "52353:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2713,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2697,
																		"src": "52362:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2706,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2693,
																				"src": "52312:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2705,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "52296:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52296:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$142",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52316:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "52296:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52296:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2748,
															"nodeType": "TryStatement",
															"src": "52292:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "51609:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "52151:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52174:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52196:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52188:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52200:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52230:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "52217:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52173:62:0"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52244:0:0"
									},
									"scope": 2753,
									"src": "52142:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2936,
							"src": "36000:16926:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 2754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53059:24:0"
						},
						{
							"id": 2755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53218:24:0"
						},
						{
							"id": 2756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53379:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2758,
										"name": "IERC165",
										"nameLocations": [
											"53474:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "53474:7:0"
									},
									"id": 2759,
									"nodeType": "InheritanceSpecifier",
									"src": "53474:7:0"
								},
								{
									"baseName": {
										"id": 2760,
										"name": "IERC721",
										"nameLocations": [
											"53483:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "53483:7:0"
									},
									"id": 2761,
									"nodeType": "InheritanceSpecifier",
									"src": "53483:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2757,
								"nodeType": "StructuredDocumentation",
								"src": "53407:45:0",
								"text": "@title ERC-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 2774,
							"linearizedBaseContracts": [
								2774,
								125,
								11
							],
							"name": "IERC4906",
							"nameLocation": "53462:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "53497:201:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 2766,
									"name": "MetadataUpdate",
									"nameLocation": "53709:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "53732:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "53724:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53723:18:0"
									},
									"src": "53703:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "53748:212:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 2773,
									"name": "BatchMetadataUpdate",
									"nameLocation": "53971:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "53999:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "53991:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "54021:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "54013:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53990:42:0"
									},
									"src": "53965:68:0"
								}
							],
							"scope": 2936,
							"src": "53452:583:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42,
								2766,
								2773
							]
						},
						{
							"id": 2775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "54213:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2777,
										"name": "IERC4906",
										"nameLocations": [
											"54351:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2774,
										"src": "54351:8:0"
									},
									"id": 2778,
									"nodeType": "InheritanceSpecifier",
									"src": "54351:8:0"
								},
								{
									"baseName": {
										"id": 2779,
										"name": "ERC721",
										"nameLocations": [
											"54361:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2753,
										"src": "54361:6:0"
									},
									"id": 2780,
									"nodeType": "InheritanceSpecifier",
									"src": "54361:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2776,
								"nodeType": "StructuredDocumentation",
								"src": "54243:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 2891,
							"linearizedBaseContracts": [
								2891,
								2753,
								1713,
								167,
								2774,
								125,
								1624,
								11,
								196
							],
							"name": "ERC721URIStorage",
							"nameLocation": "54331:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2783,
									"libraryName": {
										"id": 2781,
										"name": "Strings",
										"nameLocations": [
											"54380:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1603,
										"src": "54380:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "54374:26:0",
									"typeName": {
										"id": 2782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "54392:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2789,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "54612:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2891,
									"src": "54588:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2784,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "54588:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 2787,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "54642:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 2786,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "54635:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 2785,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "54635:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 2788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "54635:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2793,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "54742:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2891,
									"src": "54699:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2792,
										"keyName": "tokenId",
										"keyNameLocation": "54715:7:0",
										"keyType": {
											"id": 2790,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "54707:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "54699:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2791,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "54726:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										10,
										1845
									],
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "54927:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2804,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "54944:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2805,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "54959:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "54944:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2809,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2796,
																"src": "55007:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2807,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "54983:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2891_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54989:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1845,
															"src": "54983:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54983:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54944:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2803,
												"id": 2812,
												"nodeType": "Return",
												"src": "54937:82:0"
											}
										]
									},
									"documentation": {
										"id": 2794,
										"nodeType": "StructuredDocumentation",
										"src": "54759:55:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "54828:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2800,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2798,
												"name": "ERC721",
												"nameLocations": [
													"54895:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2753,
												"src": "54895:6:0"
											},
											{
												"id": 2799,
												"name": "IERC165",
												"nameLocations": [
													"54903:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "54903:7:0"
											}
										],
										"src": "54886:25:0"
									},
									"parameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "54853:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "54846:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2795,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "54846:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54845:20:0"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "54921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54920:6:0"
									},
									"scope": 2891,
									"src": "54819:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1940
									],
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "55180:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "55204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2823,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "55190:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55190:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2826,
												"nodeType": "ExpressionStatement",
												"src": "55190:22:0"
											},
											{
												"assignments": [
													2828
												],
												"declarations": [
													{
														"constant": false,
														"id": 2828,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "55237:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "55223:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2827,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "55223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2832,
												"initialValue": {
													"baseExpression": {
														"id": 2829,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2793,
														"src": "55249:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2831,
													"indexExpression": {
														"id": 2830,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "55260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "55249:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55223:45:0"
											},
											{
												"assignments": [
													2834
												],
												"declarations": [
													{
														"constant": false,
														"id": 2834,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "55292:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "55278:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2833,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "55278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2837,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2835,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "55299:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55299:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55278:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2840,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2834,
																	"src": "55388:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55382:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2838,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "55382:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55382:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55394:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55382:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55404:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55382:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2848,
												"nodeType": "IfStatement",
												"src": "55378:70:0",
												"trueBody": {
													"id": 2847,
													"nodeType": "Block",
													"src": "55407:41:0",
													"statements": [
														{
															"expression": {
																"id": 2845,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2828,
																"src": "55428:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2822,
															"id": 2846,
															"nodeType": "Return",
															"src": "55421:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2851,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2828,
																	"src": "55553:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55547:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2849,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "55547:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55547:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55564:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55547:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55573:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55547:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2864,
												"nodeType": "IfStatement",
												"src": "55543:95:0",
												"trueBody": {
													"id": 2863,
													"nodeType": "Block",
													"src": "55576:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2859,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "55611:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 2860,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2828,
																		"src": "55617:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55597:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2856,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "55597:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55604:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "55597:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55597:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2822,
															"id": 2862,
															"nodeType": "Return",
															"src": "55590:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2867,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "55670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2865,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "55655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2891_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 2866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55661:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1940,
														"src": "55655:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55655:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2869,
												"nodeType": "Return",
												"src": "55648:30:0"
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "55032:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "55101:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55147:8:0"
									},
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "55110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55109:17:0"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "55165:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55165:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55164:15:0"
									},
									"scope": 2891,
									"src": "55092:593:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "55885:86:0",
										"statements": [
											{
												"expression": {
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2879,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "55895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2881,
														"indexExpression": {
															"id": 2880,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "55906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55895:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2882,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2876,
														"src": "55917:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "55895:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2884,
												"nodeType": "ExpressionStatement",
												"src": "55895:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2886,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "55956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2885,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "55941:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55941:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2888,
												"nodeType": "EmitStatement",
												"src": "55936:28:0"
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "55691:108:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "55813:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "55826:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "55857:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "55843:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55825:42:0"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55885:0:0"
									},
									"scope": 2891,
									"src": "55804:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2936,
							"src": "54313:1660:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": [
								24,
								33,
								42,
								2766,
								2773
							]
						},
						{
							"id": 2892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56000:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2893,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"56050:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2891,
										"src": "56050:16:0"
									},
									"id": 2894,
									"nodeType": "InheritanceSpecifier",
									"src": "56050:16:0"
								}
							],
							"canonicalName": "DynamicNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2935,
							"linearizedBaseContracts": [
								2935,
								2891,
								2753,
								1713,
								167,
								2774,
								125,
								1624,
								11,
								196
							],
							"name": "DynamicNFT",
							"nameLocation": "56036:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "84c4bd4b",
									"id": 2896,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "56088:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2935,
									"src": "56073:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2895,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "56073:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "56178:2:0",
										"statements": []
									},
									"id": 2904,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "44796e616d6963204e4654",
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56131:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1675782564d12ef15eef62d862dc4d8cc416de0bfbc6ec4249570c1ae5654f0d",
														"typeString": "literal_string \"Dynamic NFT\""
													},
													"value": "Dynamic NFT"
												},
												{
													"hexValue": "44796e616d6963204e465420457468657265756d205365706f6c6961",
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "56146:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_41b30e64f89ee49b63e5f965422e9fe70815a418f50f1ec8a1370cfabebba935",
														"typeString": "literal_string \"Dynamic NFT Ethereum Sepolia\""
													},
													"value": "Dynamic NFT Ethereum Sepolia"
												}
											],
											"id": 2901,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2898,
												"name": "ERC721",
												"nameLocations": [
													"56124:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2753,
												"src": "56124:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56124:53:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56121:2:0"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56178:0:0"
									},
									"scope": 2935,
									"src": "56110:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "56291:181:0",
										"statements": [
											{
												"assignments": [
													2914
												],
												"declarations": [
													{
														"constant": false,
														"id": 2914,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "56309:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2933,
														"src": "56301:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "56301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2916,
												"initialValue": {
													"id": 2915,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2896,
													"src": "56319:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56301:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2918,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "56350:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "56361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2917,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "56344:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56344:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2921,
												"nodeType": "ExpressionStatement",
												"src": "56344:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2923,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "56392:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2924,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "56401:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2922,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "56379:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56379:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2926,
												"nodeType": "ExpressionStatement",
												"src": "56379:31:0"
											},
											{
												"expression": {
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2927,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2896,
														"src": "56420:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "56420:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "56420:20:0"
											},
											{
												"expression": {
													"id": 2931,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2914,
													"src": "56458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2912,
												"id": 2932,
												"nodeType": "Return",
												"src": "56451:14:0"
											}
										]
									},
									"functionSelector": "eacabe14",
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "56195:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "56211:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "56203:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "56236:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "56222:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56202:43:0"
									},
									"returnParameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "56278:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56277:9:0"
									},
									"scope": 2935,
									"src": "56186:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2936,
							"src": "56027:447:0",
							"usedErrors": [
								1671,
								1676,
								1685,
								1690,
								1695,
								1702,
								1707,
								1712
							],
							"usedEvents": [
								24,
								33,
								42,
								2766,
								2773
							]
						}
					],
					"src": "182:56292:0"
				},
				"id": 0
			}
		}
	}
}